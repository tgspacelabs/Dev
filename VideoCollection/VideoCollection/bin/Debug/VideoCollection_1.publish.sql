/*
Deployment script for VideoCollection

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "VideoCollection"
:setvar DefaultFilePrefix "VideoCollection"
:setvar DefaultDataPath "E:\SQLDATA19\"
:setvar DefaultLogPath "E:\SQLLOG19\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS OFF,
                ANSI_PADDING OFF,
                ANSI_WARNINGS OFF,
                ARITHABORT OFF,
                CONCAT_NULL_YIELDS_NULL OFF,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER OFF,
                ANSI_NULL_DEFAULT OFF,
                CURSOR_DEFAULT GLOBAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY CHECKSUM,
                DATE_CORRELATION_OPTIMIZATION OFF,
                ENABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 120 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = AUTO, OPERATION_MODE = READ_WRITE, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 30), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Actor]...';


GO
CREATE TABLE [dbo].[Actor] (
    [ActorID]   INT           IDENTITY (1, 1) NOT NULL,
    [FirstName] NVARCHAR (50) NOT NULL,
    [LastName]  NVARCHAR (50) NOT NULL,
    CONSTRAINT [PK_Actor] PRIMARY KEY CLUSTERED ([ActorID] ASC)
);


GO
PRINT N'Creating [dbo].[Category]...';


GO
CREATE TABLE [dbo].[Category] (
    [CategoryID] SMALLINT       IDENTITY (1, 1) NOT NULL,
    [Name]       NVARCHAR (100) NOT NULL,
    CONSTRAINT [PK_Category] PRIMARY KEY CLUSTERED ([CategoryID] ASC)
);


GO
PRINT N'Creating [dbo].[ConversionErrors]...';


GO
CREATE TABLE [dbo].[ConversionErrors] (
    [ObjectType]       NVARCHAR (255) NULL,
    [ObjectName]       NVARCHAR (255) NULL,
    [ErrorDescription] NVARCHAR (MAX) NULL,
    [SSMA_TimeStamp]   ROWVERSION     NOT NULL
);


GO
PRINT N'Creating [dbo].[Director]...';


GO
CREATE TABLE [dbo].[Director] (
    [DirectorID] INT            IDENTITY (1, 1) NOT NULL,
    [Director]   NVARCHAR (100) NOT NULL,
    CONSTRAINT [PK_Director] PRIMARY KEY CLUSTERED ([DirectorID] ASC)
);


GO
PRINT N'Creating [dbo].[Genre]...';


GO
CREATE TABLE [dbo].[Genre] (
    [GenreID] SMALLINT     IDENTITY (1, 1) NOT NULL,
    [Genre]   VARCHAR (50) NOT NULL,
    CONSTRAINT [PK_Genre] PRIMARY KEY CLUSTERED ([GenreID] ASC)
);


GO
PRINT N'Creating [dbo].[Medium]...';


GO
CREATE TABLE [dbo].[Medium] (
    [MediumID] TINYINT       IDENTITY (1, 1) NOT NULL,
    [Format]   NVARCHAR (50) NOT NULL,
    CONSTRAINT [PK_Medium] PRIMARY KEY CLUSTERED ([MediumID] ASC)
);


GO
PRINT N'Creating [dbo].[Movie]...';


GO
CREATE TABLE [dbo].[Movie] (
    [MovieID]       INT            IDENTITY (1, 1) NOT NULL,
    [Title]         NVARCHAR (255) NOT NULL,
    [CategoryID]    SMALLINT       NOT NULL,
    [YearOfRelease] SMALLINT       NOT NULL,
    [LengthMinutes] SMALLINT       NOT NULL,
    [DirectorID]    INT            NOT NULL,
    [MediumID]      TINYINT        NOT NULL,
    CONSTRAINT [PK_Movie] PRIMARY KEY CLUSTERED ([MovieID] ASC)
);


GO
PRINT N'Creating [dbo].[MovieActor]...';


GO
CREATE TABLE [dbo].[MovieActor] (
    [MovieActorID] INT IDENTITY (1, 1) NOT NULL,
    [MovieID]      INT NOT NULL,
    [ActorID]      INT NOT NULL,
    CONSTRAINT [PK_MovieActor] PRIMARY KEY CLUSTERED ([MovieActorID] ASC)
);


GO
PRINT N'Creating [dbo].[tblActors]...';


GO
CREATE TABLE [dbo].[tblActors] (
    [ActorID]   INT           NOT NULL,
    [FirstName] NVARCHAR (25) NULL,
    [LastName]  NVARCHAR (25) NULL
);


GO
PRINT N'Creating [dbo].[tblCategory]...';


GO
CREATE TABLE [dbo].[tblCategory] (
    [CategoryID] INT           NOT NULL,
    [Category]   NVARCHAR (50) NULL
);


GO
PRINT N'Creating [dbo].[tblDirector]...';


GO
CREATE TABLE [dbo].[tblDirector] (
    [ID]       INT           NOT NULL,
    [Director] NVARCHAR (50) NULL
);


GO
PRINT N'Creating [dbo].[tblMovies]...';


GO
CREATE TABLE [dbo].[tblMovies] (
    [MovieID]       INT           NOT NULL,
    [Title]         NVARCHAR (50) NOT NULL,
    [Medium]        CHAR (1)      NOT NULL,
    [CategoryID]    INT           NULL,
    [YearOfRelease] SMALLINT      NULL,
    [Length]        INT           NULL,
    [DirectorID]    INT           NULL
);


GO
PRINT N'Creating [dbo].[tblMovieStars]...';


GO
CREATE TABLE [dbo].[tblMovieStars] (
    [MovieID] INT NOT NULL,
    [ActorID] INT NOT NULL
);


GO
PRINT N'Creating [dbo].[FK_Movie_Category_CategoryID]...';


GO
ALTER TABLE [dbo].[Movie]
    ADD CONSTRAINT [FK_Movie_Category_CategoryID] FOREIGN KEY ([CategoryID]) REFERENCES [dbo].[Category] ([CategoryID]);


GO
PRINT N'Creating [dbo].[FK_Movie_Director_DirectorID]...';


GO
ALTER TABLE [dbo].[Movie]
    ADD CONSTRAINT [FK_Movie_Director_DirectorID] FOREIGN KEY ([DirectorID]) REFERENCES [dbo].[Director] ([DirectorID]);


GO
PRINT N'Creating [dbo].[FK_Movie_Medium_MediumID]...';


GO
ALTER TABLE [dbo].[Movie]
    ADD CONSTRAINT [FK_Movie_Medium_MediumID] FOREIGN KEY ([MediumID]) REFERENCES [dbo].[Medium] ([MediumID]);


GO
PRINT N'Creating [dbo].[FK_MovieActor_Actor_ActorID]...';


GO
ALTER TABLE [dbo].[MovieActor]
    ADD CONSTRAINT [FK_MovieActor_Actor_ActorID] FOREIGN KEY ([ActorID]) REFERENCES [dbo].[Actor] ([ActorID]);


GO
PRINT N'Creating [dbo].[FK_MovieActor_Movie_MovieID]...';


GO
ALTER TABLE [dbo].[MovieActor]
    ADD CONSTRAINT [FK_MovieActor_Movie_MovieID] FOREIGN KEY ([MovieID]) REFERENCES [dbo].[Movie] ([MovieID]);


GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
