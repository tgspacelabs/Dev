/*
Deployment script for VideoCollection_1

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "VideoCollection_1"
:setvar DefaultFilePrefix "VideoCollection_1"
:setvar DefaultDataPath "C:\Users\greentx.NA\AppData\Local\Microsoft\VisualStudio\SSDT\VideoCollection"
:setvar DefaultLogPath "C:\Users\greentx.NA\AppData\Local\Microsoft\VisualStudio\SSDT\VideoCollection"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS OFF,
                ANSI_PADDING OFF,
                ANSI_WARNINGS OFF,
                QUOTED_IDENTIFIER OFF,
                ANSI_NULL_DEFAULT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 120 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = AUTO, OPERATION_MODE = READ_WRITE) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating [dbo].[Actor]...';


GO
CREATE TABLE [dbo].[Actor] (
    [ActorID]   INT           IDENTITY (1, 1) NOT NULL,
    [FirstName] NVARCHAR (50) NOT NULL,
    [LastName]  NVARCHAR (50) NOT NULL,
    CONSTRAINT [PK_Actor] PRIMARY KEY CLUSTERED ([ActorID] ASC)
);


GO
PRINT N'Creating [dbo].[Category]...';


GO
CREATE TABLE [dbo].[Category] (
    [CategoryID] SMALLINT       IDENTITY (1, 1) NOT NULL,
    [Name]       NVARCHAR (100) NOT NULL,
    CONSTRAINT [PK_Category] PRIMARY KEY CLUSTERED ([CategoryID] ASC)
);


GO
PRINT N'Creating [dbo].[ConversionErrors]...';


GO
CREATE TABLE [dbo].[ConversionErrors] (
    [ObjectType]       NVARCHAR (255) NULL,
    [ObjectName]       NVARCHAR (255) NULL,
    [ErrorDescription] NVARCHAR (MAX) NULL,
    [SSMA_TimeStamp]   ROWVERSION     NOT NULL
);


GO
PRINT N'Creating [dbo].[Director]...';


GO
CREATE TABLE [dbo].[Director] (
    [DirectorID] INT            IDENTITY (1, 1) NOT NULL,
    [Director]   NVARCHAR (100) NOT NULL,
    CONSTRAINT [PK_Director] PRIMARY KEY CLUSTERED ([DirectorID] ASC)
);


GO
PRINT N'Creating [dbo].[Genre]...';


GO
CREATE TABLE [dbo].[Genre] (
    [GenreID] SMALLINT     IDENTITY (1, 1) NOT NULL,
    [Genre]   VARCHAR (50) NOT NULL,
    CONSTRAINT [PK_Genre] PRIMARY KEY CLUSTERED ([GenreID] ASC)
);


GO
PRINT N'Creating [dbo].[Medium]...';


GO
CREATE TABLE [dbo].[Medium] (
    [MediumID] TINYINT       IDENTITY (1, 1) NOT NULL,
    [Format]   NVARCHAR (50) NOT NULL,
    CONSTRAINT [PK_Medium] PRIMARY KEY CLUSTERED ([MediumID] ASC)
);


GO
PRINT N'Creating [dbo].[Movie]...';


GO
CREATE TABLE [dbo].[Movie] (
    [MovieID]       INT            IDENTITY (1, 1) NOT NULL,
    [Title]         NVARCHAR (255) NOT NULL,
    [CategoryID]    SMALLINT       NOT NULL,
    [YearOfRelease] SMALLINT       NOT NULL,
    [LengthMinutes] SMALLINT       NOT NULL,
    [DirectorID]    INT            NOT NULL,
    [MediumID]      TINYINT        NOT NULL,
    CONSTRAINT [PK_Movie] PRIMARY KEY CLUSTERED ([MovieID] ASC)
);


GO
PRINT N'Creating [dbo].[MovieActor]...';


GO
CREATE TABLE [dbo].[MovieActor] (
    [MovieActorID] INT IDENTITY (1, 1) NOT NULL,
    [MovieID]      INT NOT NULL,
    [ActorID]      INT NOT NULL,
    CONSTRAINT [PK_MovieActor] PRIMARY KEY CLUSTERED ([MovieActorID] ASC)
);


GO
PRINT N'Creating [dbo].[tblActors]...';


GO
CREATE TABLE [dbo].[tblActors] (
    [ActorID]   INT           NOT NULL,
    [FirstName] NVARCHAR (25) NULL,
    [LastName]  NVARCHAR (25) NULL
);


GO
PRINT N'Creating [dbo].[tblCategory]...';


GO
CREATE TABLE [dbo].[tblCategory] (
    [CategoryID] INT           NOT NULL,
    [Category]   NVARCHAR (50) NULL
);


GO
PRINT N'Creating [dbo].[tblDirector]...';


GO
CREATE TABLE [dbo].[tblDirector] (
    [ID]       INT           NOT NULL,
    [Director] NVARCHAR (50) NULL
);


GO
PRINT N'Creating [dbo].[tblMovies]...';


GO
CREATE TABLE [dbo].[tblMovies] (
    [MovieID]       INT           NOT NULL,
    [Title]         NVARCHAR (50) NOT NULL,
    [Medium]        CHAR (1)      NOT NULL,
    [CategoryID]    INT           NULL,
    [YearOfRelease] SMALLINT      NULL,
    [Length]        INT           NULL,
    [DirectorID]    INT           NULL
);


GO
PRINT N'Creating [dbo].[tblMovieStars]...';


GO
CREATE TABLE [dbo].[tblMovieStars] (
    [MovieID] INT NOT NULL,
    [ActorID] INT NOT NULL
);


GO
PRINT N'Creating [dbo].[FK_Movie_Category_CategoryID]...';


GO
ALTER TABLE [dbo].[Movie] WITH NOCHECK
    ADD CONSTRAINT [FK_Movie_Category_CategoryID] FOREIGN KEY ([CategoryID]) REFERENCES [dbo].[Category] ([CategoryID]);


GO
PRINT N'Creating [dbo].[FK_Movie_Director_DirectorID]...';


GO
ALTER TABLE [dbo].[Movie] WITH NOCHECK
    ADD CONSTRAINT [FK_Movie_Director_DirectorID] FOREIGN KEY ([DirectorID]) REFERENCES [dbo].[Director] ([DirectorID]);


GO
PRINT N'Creating [dbo].[FK_Movie_Medium_MediumID]...';


GO
ALTER TABLE [dbo].[Movie] WITH NOCHECK
    ADD CONSTRAINT [FK_Movie_Medium_MediumID] FOREIGN KEY ([MediumID]) REFERENCES [dbo].[Medium] ([MediumID]);


GO
PRINT N'Creating [dbo].[FK_MovieActor_Actor_ActorID]...';


GO
ALTER TABLE [dbo].[MovieActor] WITH NOCHECK
    ADD CONSTRAINT [FK_MovieActor_Actor_ActorID] FOREIGN KEY ([ActorID]) REFERENCES [dbo].[Actor] ([ActorID]);


GO
PRINT N'Creating [dbo].[FK_MovieActor_Movie_MovieID]...';


GO
ALTER TABLE [dbo].[MovieActor] WITH NOCHECK
    ADD CONSTRAINT [FK_MovieActor_Movie_MovieID] FOREIGN KEY ([MovieID]) REFERENCES [dbo].[Movie] ([MovieID]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Movie] WITH CHECK CHECK CONSTRAINT [FK_Movie_Category_CategoryID];

ALTER TABLE [dbo].[Movie] WITH CHECK CHECK CONSTRAINT [FK_Movie_Director_DirectorID];

ALTER TABLE [dbo].[Movie] WITH CHECK CHECK CONSTRAINT [FK_Movie_Medium_MediumID];

ALTER TABLE [dbo].[MovieActor] WITH CHECK CHECK CONSTRAINT [FK_MovieActor_Actor_ActorID];

ALTER TABLE [dbo].[MovieActor] WITH CHECK CHECK CONSTRAINT [FK_MovieActor_Movie_MovieID];


GO
PRINT N'Update complete.';


GO
