/*
Deployment script for TestTransactionDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "TestTransactionDB"
:setvar DefaultFilePrefix "TestTransactionDB"
:setvar DefaultDataPath "D:\SQLDATA\"
:setvar DefaultLogPath "D:\SQLDATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS OFF,
                ANSI_PADDING OFF,
                ANSI_WARNINGS OFF,
                ARITHABORT OFF,
                CONCAT_NULL_YIELDS_NULL OFF,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER OFF,
                ANSI_NULL_DEFAULT OFF,
                CURSOR_DEFAULT GLOBAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY CHECKSUM,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Clustered]...';


GO
CREATE TABLE [dbo].[Clustered] (
    [ClusterID] INT            IDENTITY (1, 1) NOT NULL,
    [FirstName] NVARCHAR (50)  NULL,
    [LastName]  NVARCHAR (50)  NULL,
    [City]      NVARCHAR (50)  NULL,
    [State]     NCHAR (2)      NULL,
    [ExtraData] NVARCHAR (MAX) NULL
);


GO
PRINT N'Creating [dbo].[ClusteredPK]...';


GO
CREATE TABLE [dbo].[ClusteredPK] (
    [ClusterID] INT            IDENTITY (1, 1) NOT NULL,
    [FirstName] NVARCHAR (50)  NULL,
    [LastName]  NVARCHAR (50)  NULL,
    [City]      NVARCHAR (50)  NULL,
    [State]     NCHAR (2)      NULL,
    [ExtraData] NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([ClusterID] ASC)
);


GO
PRINT N'Creating [dbo].[Company]...';


GO
CREATE TABLE [dbo].[Company] (
    [companyId]   INT           IDENTITY (1, 1) NOT NULL,
    [companyName] VARCHAR (100) NULL,
    [zipcode]     VARCHAR (10)  NULL,
    CONSTRAINT [PK_Company] PRIMARY KEY CLUSTERED ([companyId] ASC)
);


GO
PRINT N'Creating [dbo].[Deadlock]...';


GO
CREATE TABLE [dbo].[Deadlock] (
    [Creation_Date] DATETIME NULL,
    [Extend_Event]  XML      NULL
);


GO
PRINT N'Creating [dbo].[Employee]...';


GO
CREATE TABLE [dbo].[Employee] (
    [EmployeeID] INT           IDENTITY (1, 1) NOT NULL,
    [FirstName]  NVARCHAR (50) NOT NULL,
    [LastName]   NVARCHAR (50) NOT NULL,
    [Birthdate]  DATETIME2 (7) NULL,
    PRIMARY KEY CLUSTERED ([EmployeeID] ASC)
);


GO
PRINT N'Creating [dbo].[Employee].[IX_Employee_LastName]...';


GO
CREATE NONCLUSTERED INDEX [IX_Employee_LastName]
    ON [dbo].[Employee]([LastName] ASC);


GO
PRINT N'Creating [dbo].[Employee].[IX_Employee_LastName_FirstName]...';


GO
CREATE NONCLUSTERED INDEX [IX_Employee_LastName_FirstName]
    ON [dbo].[Employee]([LastName] ASC, [FirstName] ASC);


GO
PRINT N'Creating [dbo].[EventsDataX]...';


GO
CREATE TABLE [dbo].[EventsDataX] (
    [TimeStampUTC]   DATETIME         NOT NULL,
    [Id]             UNIQUEIDENTIFIER NOT NULL,
    [CategoryValue]  INT              NOT NULL,
    [Type]           INT              NOT NULL,
    [Subtype]        INT              NOT NULL,
    [Value1]         REAL             NOT NULL,
    [Value2]         REAL             NOT NULL,
    [Status]         INT              NOT NULL,
    [ValidLeads]     INT              NOT NULL,
    [TopicSessionId] UNIQUEIDENTIFIER NOT NULL,
    [FeedTypeId]     UNIQUEIDENTIFIER NOT NULL,
    [Sequence]       BIGINT           IDENTITY (1, 1) NOT NULL,
    CONSTRAINT [PK_EventsDataX_Sequence] PRIMARY KEY CLUSTERED ([Sequence] ASC)
);


GO
PRINT N'Creating [dbo].[FragmentationLog]...';


GO
CREATE TABLE [dbo].[FragmentationLog] (
    [LogDateTime]                    DATETIME2 (7)  NOT NULL,
    [DatabaseName]                   NVARCHAR (128) NULL,
    [TableName]                      NVARCHAR (128) NULL,
    [index_id]                       INT            NULL,
    [IndexName]                      NVARCHAR (128) NULL,
    [avg_fragmentation_in_percent]   FLOAT (53)     NULL,
    [avg_page_space_used_in_percent] FLOAT (53)     NULL,
    [index_type_desc]                NVARCHAR (60)  NULL
);


GO
PRINT N'Creating [dbo].[int_misc_code]...';


GO
CREATE TABLE [dbo].[int_misc_code] (
    [code_id]         INT              NOT NULL,
    [organization_id] UNIQUEIDENTIFIER NULL,
    [sys_id]          UNIQUEIDENTIFIER NULL,
    [category_cd]     CHAR (4)         NULL,
    [method_cd]       NVARCHAR (10)    NULL,
    [code]            NVARCHAR (80)    NULL,
    [verification_sw] TINYINT          NULL,
    [int_keystone_cd] NVARCHAR (80)    NULL,
    [short_dsc]       NVARCHAR (100)   NULL,
    [spc_pcs_code]    CHAR (1)         NULL
);


GO
PRINT N'Creating [dbo].[int_misc_code].[IX_int_misc_code_code_id]...';


GO
CREATE UNIQUE CLUSTERED INDEX [IX_int_misc_code_code_id]
    ON [dbo].[int_misc_code]([code_id] ASC) WITH (FILLFACTOR = 80);


GO
PRINT N'Creating [dbo].[int_misc_code].[IX_int_misc_code_category_cd_code_organization_id_sys_id_method_cd]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_int_misc_code_category_cd_code_organization_id_sys_id_method_cd]
    ON [dbo].[int_misc_code]([category_cd] ASC, [code] ASC, [organization_id] ASC, [sys_id] ASC, [method_cd] ASC) WITH (FILLFACTOR = 80);


GO
PRINT N'Creating [dbo].[int_misc_code].[IX_int_misc_code_code]...';


GO
CREATE NONCLUSTERED INDEX [IX_int_misc_code_code]
    ON [dbo].[int_misc_code]([code] ASC) WITH (FILLFACTOR = 80);


GO
PRINT N'Creating [dbo].[int_misc_code].[IX_int_misc_code_code_id_code_int_keystone_cd]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_int_misc_code_code_id_code_int_keystone_cd]
    ON [dbo].[int_misc_code]([code_id] ASC)
    INCLUDE([code], [int_keystone_cd]) WITH (FILLFACTOR = 80);


GO
PRINT N'Creating [dbo].[int_misc_code].[IX_int_misc_code_code_short_dsc_int_keystone_cd]...';


GO
CREATE NONCLUSTERED INDEX [IX_int_misc_code_code_short_dsc_int_keystone_cd]
    ON [dbo].[int_misc_code]([code] ASC, [short_dsc] ASC, [int_keystone_cd] ASC) WITH (FILLFACTOR = 80);


GO
PRINT N'Creating [dbo].[int_misc_code].[IX_int_misc_code_int_keystone_cd]...';


GO
CREATE NONCLUSTERED INDEX [IX_int_misc_code_int_keystone_cd]
    ON [dbo].[int_misc_code]([int_keystone_cd] ASC) WITH (FILLFACTOR = 65);


GO
PRINT N'Creating [dbo].[People]...';


GO
CREATE TABLE [dbo].[People] (
    [PersonID]   INT          IDENTITY (1, 1) NOT NULL,
    [PersonName] VARCHAR (20) NULL,
    PRIMARY KEY CLUSTERED ([PersonID] ASC)
);


GO
PRINT N'Creating [dbo].[Person]...';


GO
CREATE TABLE [dbo].[Person] (
    [personId]   INT           IDENTITY (1, 1) NOT NULL,
    [personName] VARCHAR (100) NULL,
    [companyId]  INT           NULL,
    CONSTRAINT [PK_Person] PRIMARY KEY CLUSTERED ([personId] ASC)
);


GO
PRINT N'Creating [dbo].[Pets]...';


GO
CREATE TABLE [dbo].[Pets] (
    [PetID]     INT          IDENTITY (1, 1) NOT NULL,
    [PetTypeID] INT          NULL,
    [PetName]   VARCHAR (10) NULL,
    [OwnerID]   INT          NOT NULL,
    PRIMARY KEY CLUSTERED ([PetID] ASC)
);


GO
PRINT N'Creating [dbo].[PetTypes]...';


GO
CREATE TABLE [dbo].[PetTypes] (
    [PetTypeID] INT          IDENTITY (1, 1) NOT NULL,
    [PetType]   VARCHAR (10) NULL,
    PRIMARY KEY CLUSTERED ([PetTypeID] ASC)
);


GO
PRINT N'Creating [dbo].[ResourceStrings]...';


GO
CREATE TABLE [dbo].[ResourceStrings] (
    [Locale]  NVARCHAR (50)  NOT NULL,
    [Name]    NVARCHAR (250) NOT NULL,
    [Value]   NVARCHAR (250) NULL,
    [Comment] NVARCHAR (250) NULL,
    CONSTRAINT [PK_ResourceStrings_Locale_Name] PRIMARY KEY CLUSTERED ([Locale] ASC, [Name] ASC)
);


GO
PRINT N'Creating [dbo].[ResourceStrings].[IX_ResourceStrings_Locale_Name_Value]...';


GO
CREATE NONCLUSTERED INDEX [IX_ResourceStrings_Locale_Name_Value]
    ON [dbo].[ResourceStrings]([Locale] ASC, [Name] ASC)
    INCLUDE([Value]);


GO
PRINT N'Creating [dbo].[SequentialTest]...';


GO
CREATE TABLE [dbo].[SequentialTest] (
    [ID]           INT              IDENTITY (1, 1) NOT NULL,
    [SequentialID] UNIQUEIDENTIFIER NOT NULL,
    [Data]         NVARCHAR (50)    NULL,
    CONSTRAINT [PK_SequentialTest] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[T]...';


GO
CREATE TABLE [dbo].[T] (
    [ID] INT IDENTITY (1, 1) NOT NULL,
    CONSTRAINT [PK_T_ID] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[T1]...';


GO
CREATE TABLE [dbo].[T1] (
    [n] BIGINT NULL
);


GO
PRINT N'Creating [dbo].[Table1]...';


GO
CREATE TABLE [dbo].[Table1] (
    [a] INT NOT NULL,
    [b] INT NULL,
    [c] AS  ([a] + [b]),
    PRIMARY KEY CLUSTERED ([a] ASC)
);


GO
PRINT N'Creating [dbo].[Table2]...';


GO
CREATE TABLE [dbo].[Table2] (
    [x] INT NOT NULL,
    [y] INT NOT NULL,
    [a] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([x] ASC, [y] ASC)
);


GO
PRINT N'Creating [dbo].[tblGUID_test]...';


GO
CREATE TABLE [dbo].[tblGUID_test] (
    [id]         UNIQUEIDENTIFIER NOT NULL,
    [name]       CHAR (969)       NOT NULL,
    [date_stamp] DATETIME         NOT NULL,
    CONSTRAINT [PK_tblGUID_test] PRIMARY KEY CLUSTERED ([id] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[tblINT_test]...';


GO
CREATE TABLE [dbo].[tblINT_test] (
    [id]         INT        IDENTITY (1, 1) NOT NULL,
    [name]       CHAR (981) NOT NULL,
    [date_stamp] DATETIME   NOT NULL,
    CONSTRAINT [PK_[tblINT_test] PRIMARY KEY CLUSTERED ([id] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[TenMillionRows]...';


GO
CREATE TABLE [dbo].[TenMillionRows] (
    [TheKey] INT      NOT NULL,
    [Col2]   CHAR (5) NOT NULL,
    [col3]   CHAR (5) NOT NULL
);


GO
PRINT N'Creating [dbo].[TestPages]...';


GO
CREATE TABLE [dbo].[TestPages] (
    [TestPagesID] INT          IDENTITY (1, 1) NOT NULL,
    [Filler]      NCHAR (2000) NULL,
    CONSTRAINT [PK_TestPages_ID] PRIMARY KEY CLUSTERED ([TestPagesID] ASC)
);


GO
PRINT N'Creating [dbo].[Untitled - 1]...';


GO
CREATE TABLE [dbo].[Untitled - 1] (
    [RowNumber]    INT            IDENTITY (0, 1) NOT NULL,
    [EventClass]   INT            NULL,
    [TextData]     NTEXT          NULL,
    [Duration]     BIGINT         NULL,
    [SPID]         INT            NULL,
    [DatabaseID]   INT            NULL,
    [DatabaseName] NVARCHAR (128) NULL,
    [ObjectType]   INT            NULL,
    [LoginName]    NVARCHAR (128) NULL,
    [BinaryData]   IMAGE          NULL,
    PRIMARY KEY CLUSTERED ([RowNumber] ASC)
);


GO
PRINT N'Creating [dbo].[WideTable]...';


GO
CREATE TABLE [dbo].[WideTable] (
    [ID]         INT         NOT NULL,
    [RandomInt]  INT         NOT NULL,
    [CharFiller] CHAR (1000) NULL,
    CONSTRAINT [PK_WideTable] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[WideTable].[WideTable_RandomInt]...';


GO
CREATE NONCLUSTERED INDEX [WideTable_RandomInt]
    ON [dbo].[WideTable]([RandomInt] ASC);


GO
PRINT N'Creating [dbo].[DF_EventsDataX_CategoryValue]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_CategoryValue] DEFAULT (0) FOR [CategoryValue];


GO
PRINT N'Creating [dbo].[DF_EventsDataX_FeedTypeId]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_FeedTypeId] DEFAULT (NEWID()) FOR [FeedTypeId];


GO
PRINT N'Creating [dbo].[DF_EventsDataX_Id]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_Id] DEFAULT (NEWID()) FOR [Id];


GO
PRINT N'Creating [dbo].[DF_EventsDataX_Status]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_Status] DEFAULT (0) FOR [Status];


GO
PRINT N'Creating [dbo].[DF_EventsDataX_Subtype]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_Subtype] DEFAULT (0) FOR [Subtype];


GO
PRINT N'Creating [dbo].[DF_EventsDataX_TimeStampUTC]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_TimeStampUTC] DEFAULT (SYSUTCDATETIME()) FOR [TimeStampUTC];


GO
PRINT N'Creating [dbo].[DF_EventsDataX_TopicSessionId]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_TopicSessionId] DEFAULT (NEWID()) FOR [TopicSessionId];


GO
PRINT N'Creating [dbo].[DF_EventsDataX_Type]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_Type] DEFAULT (0) FOR [Type];


GO
PRINT N'Creating [dbo].[DF_EventsDataX_ValidLeads]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_ValidLeads] DEFAULT (0) FOR [ValidLeads];


GO
PRINT N'Creating [dbo].[DF_EventsDataX_Value1]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_Value1] DEFAULT (0.0) FOR [Value1];


GO
PRINT N'Creating [dbo].[DF_EventsDataX_Value2]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_Value2] DEFAULT (0.0) FOR [Value2];


GO
PRINT N'Creating [dbo].[DF_SequentialTest_SequentialID]...';


GO
ALTER TABLE [dbo].[SequentialTest]
    ADD CONSTRAINT [DF_SequentialTest_SequentialID] DEFAULT (newsequentialid()) FOR [SequentialID];


GO
PRINT N'Creating [dbo].[FK_Person_CompanyId]...';


GO
ALTER TABLE [dbo].[Person]
    ADD CONSTRAINT [FK_Person_CompanyId] FOREIGN KEY ([companyId]) REFERENCES [dbo].[Company] ([companyId]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Pets]...';


GO
ALTER TABLE [dbo].[Pets]
    ADD FOREIGN KEY ([OwnerID]) REFERENCES [dbo].[People] ([PersonID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Pets]...';


GO
ALTER TABLE [dbo].[Pets]
    ADD FOREIGN KEY ([PetTypeID]) REFERENCES [dbo].[PetTypes] ([PetTypeID]);


GO
PRINT N'Creating [dbo].[FK_Table2_Table1]...';


GO
ALTER TABLE [dbo].[Table2]
    ADD CONSTRAINT [FK_Table2_Table1] FOREIGN KEY ([a]) REFERENCES [dbo].[Table1] ([a]);


GO
PRINT N'Creating [dbo].[AddOne]...';


GO
CREATE FUNCTION [dbo].[AddOne] (@n AS BIGINT)
RETURNS BIGINT
AS
BEGIN
    RETURN @n + 1;
END;
GO
PRINT N'Creating [dbo].[AddOneInline]...';


GO
CREATE FUNCTION [dbo].[AddOneInline] (@n AS BIGINT)
RETURNS BIGINT
AS
BEGIN
    RETURN 
        (SELECT
            @n + 1 AS [val]);
END;
GO
PRINT N'Creating [dbo].[AddOneTableValueFunction]...';


GO
CREATE FUNCTION [dbo].[AddOneTableValueFunction] (@n AS BIGINT)
RETURNS TABLE
    AS
RETURN
    SELECT
        @n + 1 AS [val];
GO
PRINT N'Creating [dbo].[Proc1]...';


GO
CREATE PROCEDURE [dbo].[Proc1]
AS
BEGIN
    SET NOCOUNT ON;

    UPDATE [dbo].[Table1]
    SET [a] = 100 
    WHERE [a] = 10;

    SELECT
        [t1].[a],
        [t1].[b],
        [t1].[c]
    FROM
        [dbo].[Table1] AS [t1];

    SELECT
        [t2].[x],
        [t2].[y]
    FROM
        [dbo].[Table2] AS [t2];
END;
GO
PRINT N'Creating [dbo].[Clustered].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = 'This is a test table for checking out clustered index fragmentation.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Clustered';


GO
PRINT N'Creating [dbo].[ClusteredPK].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = 'This is the clustered index and primary key for the test table for checking out clustered index fragmentation.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ClusteredPK';


GO
PRINT N'Creating [dbo].[Deadlock].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = 'Deadlock testing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Deadlock';


GO
/*
Post-Deployment Script Template                            
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.        
 Use SQLCMD syntax to include a file in the post-deployment script.            
 Example:      :r .\myfile.sql                                
 Use SQLCMD syntax to reference a variable in the post-deployment script.        
 Example:      :setvar TableName MyTable                            
               SELECT * FROM [$(TableName)]                    
--------------------------------------------------------------------------------------
*/


--TRUNCATE TABLE [dbo].[EventsDataX];
--GO

SET IDENTITY_INSERT [dbo].[EventsDataX] ON 
GO

INSERT [dbo].[EventsDataX] ([TimeStampUTC], [Id], [CategoryValue], [Type], [Subtype], [Value1], [Value2], [Status], [ValidLeads], [TopicSessionId], [FeedTypeId], [Sequence]) VALUES (CAST(N'2015-11-04 01:35:02.680' AS DateTime), N'6ca51466-e75c-49e3-a92a-c3449a284d8d', 1, 0, 0, 0, 0, 0, 0, N'97b0cea6-4563-4162-93d1-0895c6567a1a', N'004b8425-b277-46ca-9600-e344957dd97b', 1)
GO
INSERT [dbo].[EventsDataX] ([TimeStampUTC], [Id], [CategoryValue], [Type], [Subtype], [Value1], [Value2], [Status], [ValidLeads], [TopicSessionId], [FeedTypeId], [Sequence]) VALUES (CAST(N'2015-11-04 01:35:04.283' AS DateTime), N'4f63655d-0014-463a-82c8-408156cbf8f9', 2, 0, 0, 0, 0, 0, 0, N'13b03830-55e4-44e2-8483-75cfec6f577f', N'182e8dfe-75cd-4428-9efe-34495724de8e', 2)
GO
INSERT [dbo].[EventsDataX] ([TimeStampUTC], [Id], [CategoryValue], [Type], [Subtype], [Value1], [Value2], [Status], [ValidLeads], [TopicSessionId], [FeedTypeId], [Sequence]) VALUES (CAST(N'2015-11-04 01:35:04.883' AS DateTime), N'3e68d3ec-fdec-40ff-a71f-fcd40b983b12', 3, 0, 0, 0, 0, 0, 0, N'65774303-c946-40cf-bfe2-4996ab45d613', N'004287e7-59c6-4a23-b5bf-1f74201ada3f', 3)
GO
INSERT [dbo].[EventsDataX] ([TimeStampUTC], [Id], [CategoryValue], [Type], [Subtype], [Value1], [Value2], [Status], [ValidLeads], [TopicSessionId], [FeedTypeId], [Sequence]) VALUES (CAST(N'2015-11-04 01:35:05.477' AS DateTime), N'f8771f9d-e99d-49be-85e1-ce7caf21ab3d', 4, 0, 0, 0, 0, 0, 0, N'b3507c22-e5ae-4492-8bef-ebb1e4e40d28', N'2d0f5c68-7fab-42b9-b611-7021ea460ba7', 4)
GO
INSERT [dbo].[EventsDataX] ([TimeStampUTC], [Id], [CategoryValue], [Type], [Subtype], [Value1], [Value2], [Status], [ValidLeads], [TopicSessionId], [FeedTypeId], [Sequence]) VALUES (CAST(N'2015-11-04 01:35:07.057' AS DateTime), N'dd7b88f0-d59e-49e1-8d64-00efa0692724', 4, 0, 0, 0, 0, 0, 0, N'a5e15778-ce7f-4903-82e8-981415dfff17', N'57f7d906-6f0b-489a-9c69-6cb64a0d896f', 5)
GO
INSERT [dbo].[EventsDataX] ([TimeStampUTC], [Id], [CategoryValue], [Type], [Subtype], [Value1], [Value2], [Status], [ValidLeads], [TopicSessionId], [FeedTypeId], [Sequence]) VALUES (CAST(N'2015-11-04 01:35:09.360' AS DateTime), N'8deae7c2-6f35-42b9-ad6d-d3bd5d842267', 3, 0, 0, 0, 0, 0, 0, N'a0788e56-0bae-46ba-b57c-7ee4a6b722aa', N'1506c712-a856-4f48-a59f-55839e274b0c', 6)
GO
INSERT [dbo].[EventsDataX] ([TimeStampUTC], [Id], [CategoryValue], [Type], [Subtype], [Value1], [Value2], [Status], [ValidLeads], [TopicSessionId], [FeedTypeId], [Sequence]) VALUES (CAST(N'2015-11-04 01:35:09.823' AS DateTime), N'20a0a795-5d62-41ab-97a6-8aeae004e387', 2, 0, 0, 0, 0, 0, 0, N'704c917c-7fad-416a-8f6f-177aa176e61d', N'392ed54f-e038-4ffd-9b65-70dd13ea94d1', 7)
GO
INSERT [dbo].[EventsDataX] ([TimeStampUTC], [Id], [CategoryValue], [Type], [Subtype], [Value1], [Value2], [Status], [ValidLeads], [TopicSessionId], [FeedTypeId], [Sequence]) VALUES (CAST(N'2015-11-04 01:35:10.903' AS DateTime), N'9cae0092-ce8e-47ca-9aff-5ac9f2eb473d', 1, 0, 0, 0, 0, 0, 0, N'2b1bc1e7-02d5-4ef2-a2d8-e5d459f3d309', N'436c5262-b07b-455b-a88d-06c3a053334f', 8)
GO
INSERT [dbo].[EventsDataX] ([TimeStampUTC], [Id], [CategoryValue], [Type], [Subtype], [Value1], [Value2], [Status], [ValidLeads], [TopicSessionId], [FeedTypeId], [Sequence]) VALUES (CAST(N'2015-11-04 01:35:11.977' AS DateTime), N'8975cef7-7b1e-4493-aec3-4266e91f4f08', 6, 0, 0, 0, 0, 0, 0, N'a4b74ba2-4f35-40f6-971b-8b54013be8cf', N'11f6c3be-8fcc-41a2-b69a-075ea147d834', 9)
GO
INSERT [dbo].[EventsDataX] ([TimeStampUTC], [Id], [CategoryValue], [Type], [Subtype], [Value1], [Value2], [Status], [ValidLeads], [TopicSessionId], [FeedTypeId], [Sequence]) VALUES (CAST(N'2015-11-04 01:35:13.103' AS DateTime), N'c9a8c123-580d-4a00-9d3f-a89f8eff9318', 5, 0, 0, 0, 0, 0, 0, N'69ad8872-61e6-4b80-a364-800eac69ce34', N'a0707819-de26-4f5e-9a74-c5ed71b28ffe', 10)
GO
INSERT [dbo].[EventsDataX] ([TimeStampUTC], [Id], [CategoryValue], [Type], [Subtype], [Value1], [Value2], [Status], [ValidLeads], [TopicSessionId], [FeedTypeId], [Sequence]) VALUES (CAST(N'2015-11-04 01:35:14.430' AS DateTime), N'7f42a567-50f8-4d5a-9ca7-039488e2c095', 7, 0, 0, 0, 0, 0, 0, N'0fab62a9-0275-49f4-adcd-8e05f87b01fb', N'fb2da5d6-35cb-46e3-8117-655752c4c314', 11)
GO
INSERT [dbo].[EventsDataX] ([TimeStampUTC], [Id], [CategoryValue], [Type], [Subtype], [Value1], [Value2], [Status], [ValidLeads], [TopicSessionId], [FeedTypeId], [Sequence]) VALUES (CAST(N'2015-11-04 01:35:14.877' AS DateTime), N'544727e5-9d58-4e53-b397-e33e6a99d80e', 8, 0, 0, 0, 0, 0, 0, N'2f0b6401-f016-43b9-b3c3-40db46910738', N'389b6e1c-b8ae-4b32-a73e-ef5c175a1c85', 12)
GO
INSERT [dbo].[EventsDataX] ([TimeStampUTC], [Id], [CategoryValue], [Type], [Subtype], [Value1], [Value2], [Status], [ValidLeads], [TopicSessionId], [FeedTypeId], [Sequence]) VALUES (CAST(N'2015-11-04 01:35:16.130' AS DateTime), N'cebfa94f-8146-4f0e-af25-6e8d694b566d', 9, 0, 0, 0, 0, 0, 0, N'faa30839-71d0-4b61-82ad-a358c3651d5e', N'4127f22e-d426-4602-9e96-febb7601d65b', 13)
GO
INSERT [dbo].[EventsDataX] ([TimeStampUTC], [Id], [CategoryValue], [Type], [Subtype], [Value1], [Value2], [Status], [ValidLeads], [TopicSessionId], [FeedTypeId], [Sequence]) VALUES (CAST(N'2015-11-04 01:35:20.110' AS DateTime), N'3d0d2acb-1148-4241-b40c-42c49362c8d0', 4, 0, 0, 0, 0, 0, 0, N'5444223d-a0aa-43a8-bae8-7a1a405055c0', N'dcdc3f21-39c4-4c67-83cb-ad80bbc67879', 14)
GO
INSERT [dbo].[EventsDataX] ([TimeStampUTC], [Id], [CategoryValue], [Type], [Subtype], [Value1], [Value2], [Status], [ValidLeads], [TopicSessionId], [FeedTypeId], [Sequence]) VALUES (CAST(N'2015-11-04 01:35:21.097' AS DateTime), N'0b1352f9-06ea-4c84-b0b1-d000879583f7', 5, 0, 0, 0, 0, 0, 0, N'c4437ee8-ff27-4301-858f-f86a5c992d4d', N'293e68d0-3188-4d3d-80af-76e3b1ad7d2c', 15)
GO
INSERT [dbo].[EventsDataX] ([TimeStampUTC], [Id], [CategoryValue], [Type], [Subtype], [Value1], [Value2], [Status], [ValidLeads], [TopicSessionId], [FeedTypeId], [Sequence]) VALUES (CAST(N'2015-11-04 01:35:22.840' AS DateTime), N'2c4840ff-f1c2-455f-adc4-5298abb56d37', 6, 0, 0, 0, 0, 0, 0, N'19d81a15-d255-43e8-a6f0-d0f716c70469', N'eff78970-e472-40e4-8730-91bc5b625fb3', 16)
GO
INSERT [dbo].[EventsDataX] ([TimeStampUTC], [Id], [CategoryValue], [Type], [Subtype], [Value1], [Value2], [Status], [ValidLeads], [TopicSessionId], [FeedTypeId], [Sequence]) VALUES (CAST(N'2015-11-04 01:35:25.430' AS DateTime), N'f9daf9a8-62c5-4292-8c99-045f5d1016fe', 7, 0, 0, 0, 0, 0, 0, N'293a148c-1961-484c-b707-013fffcbecd1', N'7e5a9f71-3cd6-4d5d-91d5-c3614bd14ff3', 17)
GO
INSERT [dbo].[EventsDataX] ([TimeStampUTC], [Id], [CategoryValue], [Type], [Subtype], [Value1], [Value2], [Status], [ValidLeads], [TopicSessionId], [FeedTypeId], [Sequence]) VALUES (CAST(N'2015-11-04 01:35:26.393' AS DateTime), N'0a5d3c05-5050-4f85-a788-a75a658625de', 8, 0, 0, 0, 0, 0, 0, N'f5514451-51fc-46b6-89a2-ef9b727281af', N'65f2b42c-bfd8-4a07-9ec0-6e40c2c12e63', 18)
GO
INSERT [dbo].[EventsDataX] ([TimeStampUTC], [Id], [CategoryValue], [Type], [Subtype], [Value1], [Value2], [Status], [ValidLeads], [TopicSessionId], [FeedTypeId], [Sequence]) VALUES (CAST(N'2015-11-04 01:35:28.200' AS DateTime), N'e8e71f81-a6d5-4993-b527-8077cf566b7f', 9, 0, 0, 0, 0, 0, 0, N'b4df6ca6-2d6d-4add-8102-355ff6f987fd', N'bce5fa1f-7cdb-4e5f-b786-0f56e3fe75ba', 19)
GO

SET IDENTITY_INSERT [dbo].[EventsDataX] OFF
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
