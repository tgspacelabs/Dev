//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IcsPortalService
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class portalEntities : DbContext
    {
        public portalEntities()
            : base("name=portalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AlarmsStatusData> AlarmsStatusDatas { get; set; }
        public virtual DbSet<AnalysisEvent> AnalysisEvents { get; set; }
        public virtual DbSet<AnalysisTime> AnalysisTimes { get; set; }
        public virtual DbSet<ApplicationSetting> ApplicationSettings { get; set; }
        public virtual DbSet<AuditLogData> AuditLogDatas { get; set; }
        public virtual DbSet<cfgValuesFactory> cfgValuesFactories { get; set; }
        public virtual DbSet<cfgValuesGlobal> cfgValuesGlobals { get; set; }
        public virtual DbSet<cfgValuesPatient> cfgValuesPatients { get; set; }
        public virtual DbSet<cfgValuesUnit> cfgValuesUnits { get; set; }
        public virtual DbSet<ChannelInfoData> ChannelInfoDatas { get; set; }
        public virtual DbSet<DeviceInfoData> DeviceInfoDatas { get; set; }
        public virtual DbSet<Device> Devices { get; set; }
        public virtual DbSet<DeviceSession> DeviceSessions { get; set; }
        public virtual DbSet<Enum> Enums { get; set; }
        public virtual DbSet<EventsData> EventsDatas { get; set; }
        public virtual DbSet<GdsCodeMap> GdsCodeMaps { get; set; }
        public virtual DbSet<GeneralAlarmsData> GeneralAlarmsDatas { get; set; }
        public virtual DbSet<gts_input_rate> gts_input_rate { get; set; }
        public virtual DbSet<gts_waveform_index_rate> gts_waveform_index_rate { get; set; }
        public virtual DbSet<HL7InboundMessage> HL7InboundMessage { get; set; }
        public virtual DbSet<HL7PatientLink> HL7PatientLink { get; set; }
        public virtual DbSet<int_12lead_report> int_12lead_report { get; set; }
        public virtual DbSet<int_12lead_report_new> int_12lead_report_new { get; set; }
        public virtual DbSet<int_alarm> int_alarm { get; set; }
        public virtual DbSet<int_beat_time_log> int_beat_time_log { get; set; }
        public virtual DbSet<int_bin_info> int_bin_info { get; set; }
        public virtual DbSet<int_cfg_values> int_cfg_values { get; set; }
        public virtual DbSet<int_db_ver> int_db_ver { get; set; }
        public virtual DbSet<int_encounter> int_encounter { get; set; }
        public virtual DbSet<int_organization> int_organization { get; set; }
        public virtual DbSet<int_patient> int_patient { get; set; }
        public virtual DbSet<int_patient_link> int_patient_link { get; set; }
        public virtual DbSet<int_print_job> int_print_job { get; set; }
        public virtual DbSet<int_print_job_et_alarm> int_print_job_et_alarm { get; set; }
        public virtual DbSet<int_print_job_et_vitals> int_print_job_et_vitals { get; set; }
        public virtual DbSet<int_print_job_et_waveform> int_print_job_et_waveform { get; set; }
        public virtual DbSet<int_print_job_waveform> int_print_job_waveform { get; set; }
        public virtual DbSet<int_result> int_result { get; set; }
        public virtual DbSet<int_SavedEvent> int_SavedEvent { get; set; }
        public virtual DbSet<int_savedevent_beat_time_log> int_savedevent_beat_time_log { get; set; }
        public virtual DbSet<int_savedevent_calipers> int_savedevent_calipers { get; set; }
        public virtual DbSet<int_savedevent_event_log> int_savedevent_event_log { get; set; }
        public virtual DbSet<int_savedevent_vitals> int_savedevent_vitals { get; set; }
        public virtual DbSet<int_savedevent_waveform> int_savedevent_waveform { get; set; }
        public virtual DbSet<int_starter_set> int_starter_set { get; set; }
        public virtual DbSet<int_sysgen> int_sysgen { get; set; }
        public virtual DbSet<int_sysgen_audit> int_sysgen_audit { get; set; }
        public virtual DbSet<int_sysgen_comment> int_sysgen_comment { get; set; }
        public virtual DbSet<int_template_set_info> int_template_set_info { get; set; }
        public virtual DbSet<int_user> int_user { get; set; }
        public virtual DbSet<int_user_contact> int_user_contact { get; set; }
        public virtual DbSet<int_user_group> int_user_group { get; set; }
        public virtual DbSet<int_user_group_member> int_user_group_member { get; set; }
        public virtual DbSet<int_user_password> int_user_password { get; set; }
        public virtual DbSet<int_user_role> int_user_role { get; set; }
        public virtual DbSet<int_user_settings> int_user_settings { get; set; }
        public virtual DbSet<int_vital_live> int_vital_live { get; set; }
        public virtual DbSet<LeadConfiguration> LeadConfigurations { get; set; }
        public virtual DbSet<LimitAlarmsData> LimitAlarmsDatas { get; set; }
        public virtual DbSet<LimitChangeData> LimitChangeDatas { get; set; }
        public virtual DbSet<LiveData> LiveDatas { get; set; }
        public virtual DbSet<LogData> LogDatas { get; set; }
        public virtual DbSet<MetaData> MetaDatas { get; set; }
        public virtual DbSet<ml_duplicate_info> ml_duplicate_info { get; set; }
        public virtual DbSet<PacerSpikeLog> PacerSpikeLogs { get; set; }
        public virtual DbSet<PatientData> PatientDatas { get; set; }
        public virtual DbSet<PatientSession> PatientSessions { get; set; }
        public virtual DbSet<PatientSessionsMap> PatientSessionsMaps { get; set; }
        public virtual DbSet<PrintBlobData> PrintBlobDatas { get; set; }
        public virtual DbSet<PrintJob> PrintJobs { get; set; }
        public virtual DbSet<PrintRequestData> PrintRequestDatas { get; set; }
        public virtual DbSet<PrintRequestDescription> PrintRequestDescriptions { get; set; }
        public virtual DbSet<PrintRequest> PrintRequests { get; set; }
        public virtual DbSet<PurgerLog> PurgerLogs { get; set; }
        public virtual DbSet<RemovedAlarm> RemovedAlarms { get; set; }
        public virtual DbSet<ResourceString> ResourceStrings { get; set; }
        public virtual DbSet<StatusData> StatusDatas { get; set; }
        public virtual DbSet<StatusDataSet> StatusDataSets { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TableRowSpace> TableRowSpaces { get; set; }
        public virtual DbSet<tbl_ConfigurationData> tbl_ConfigurationData { get; set; }
        public virtual DbSet<TopicFeedType> TopicFeedTypes { get; set; }
        public virtual DbSet<TopicSession> TopicSessions { get; set; }
        public virtual DbSet<TopicType> TopicTypes { get; set; }
        public virtual DbSet<TrendData> TrendDatas { get; set; }
        public virtual DbSet<VitalsData> VitalsDatas { get; set; }
        public virtual DbSet<WaveformData> WaveformDatas { get; set; }
        public virtual DbSet<WaveformLiveData> WaveformLiveDatas { get; set; }
        public virtual DbSet<AlarmResource> AlarmResources { get; set; }
        public virtual DbSet<cdr_document_group> cdr_document_group { get; set; }
        public virtual DbSet<cdr_navigation_button> cdr_navigation_button { get; set; }
        public virtual DbSet<cdr_restricted_organization> cdr_restricted_organization { get; set; }
        public virtual DbSet<HL7_in_qhist> HL7_in_qhist { get; set; }
        public virtual DbSet<HL7_in_queue> HL7_in_queue { get; set; }
        public virtual DbSet<HL7_msg_ack> HL7_msg_ack { get; set; }
        public virtual DbSet<HL7_msg_list> HL7_msg_list { get; set; }
        public virtual DbSet<HL7_out_queue> HL7_out_queue { get; set; }
        public virtual DbSet<int_12lead_report_edit> int_12lead_report_edit { get; set; }
        public virtual DbSet<int_account> int_account { get; set; }
        public virtual DbSet<int_address> int_address { get; set; }
        public virtual DbSet<int_alarm_retrieved> int_alarm_retrieved { get; set; }
        public virtual DbSet<int_alarm_waveform> int_alarm_waveform { get; set; }
        public virtual DbSet<int_allergy> int_allergy { get; set; }
        public virtual DbSet<int_audit_log> int_audit_log { get; set; }
        public virtual DbSet<int_autoupdate> int_autoupdate { get; set; }
        public virtual DbSet<int_autoupdate_log> int_autoupdate_log { get; set; }
        public virtual DbSet<int_broadcast_msg> int_broadcast_msg { get; set; }
        public virtual DbSet<int_channel_type> int_channel_type { get; set; }
        public virtual DbSet<int_channel_vital> int_channel_vital { get; set; }
        public virtual DbSet<int_client_map> int_client_map { get; set; }
        public virtual DbSet<int_cmtry_report> int_cmtry_report { get; set; }
        public virtual DbSet<int_code_category> int_code_category { get; set; }
        public virtual DbSet<int_DataLoader_ETR_Temp_Settings> int_DataLoader_ETR_Temp_Settings { get; set; }
        public virtual DbSet<int_DataLoader_UV_Temp_Settings> int_DataLoader_UV_Temp_Settings { get; set; }
        public virtual DbSet<int_encounter_map> int_encounter_map { get; set; }
        public virtual DbSet<int_encounter_tfr_history> int_encounter_tfr_history { get; set; }
        public virtual DbSet<int_encounter_to_hcp_int> int_encounter_to_hcp_int { get; set; }
        public virtual DbSet<int_environment> int_environment { get; set; }
        public virtual DbSet<int_event_config> int_event_config { get; set; }
        public virtual DbSet<int_event_log> int_event_log { get; set; }
        public virtual DbSet<int_external_organization> int_external_organization { get; set; }
        public virtual DbSet<int_feature> int_feature { get; set; }
        public virtual DbSet<int_gateway> int_gateway { get; set; }
        public virtual DbSet<int_gateway_server> int_gateway_server { get; set; }
        public virtual DbSet<int_guarantor> int_guarantor { get; set; }
        public virtual DbSet<int_hcp> int_hcp { get; set; }
        public virtual DbSet<int_hcp_contact> int_hcp_contact { get; set; }
        public virtual DbSet<int_hcp_license> int_hcp_license { get; set; }
        public virtual DbSet<int_hcp_map> int_hcp_map { get; set; }
        public virtual DbSet<int_hcp_specialty> int_hcp_specialty { get; set; }
        public virtual DbSet<int_loader_parameter> int_loader_parameter { get; set; }
        public virtual DbSet<int_loader_stats> int_loader_stats { get; set; }
        public virtual DbSet<int_misc_code> int_misc_code { get; set; }
        public virtual DbSet<int_mon_request> int_mon_request { get; set; }
        public virtual DbSet<int_monitor> int_monitor { get; set; }
        public virtual DbSet<int_mrn_map> int_mrn_map { get; set; }
        public virtual DbSet<int_msg_log> int_msg_log { get; set; }
        public virtual DbSet<int_msg_template> int_msg_template { get; set; }
        public virtual DbSet<int_nok> int_nok { get; set; }
        public virtual DbSet<int_nxt_ascending_key> int_nxt_ascending_key { get; set; }
        public virtual DbSet<int_nxt_descending_key> int_nxt_descending_key { get; set; }
        public virtual DbSet<int_org_shift_sched> int_org_shift_sched { get; set; }
        public virtual DbSet<int_outbound_queue> int_outbound_queue { get; set; }
        public virtual DbSet<int_param_timetag> int_param_timetag { get; set; }
        public virtual DbSet<int_patient_channel> int_patient_channel { get; set; }
        public virtual DbSet<int_patient_document> int_patient_document { get; set; }
        public virtual DbSet<int_patient_image> int_patient_image { get; set; }
        public virtual DbSet<int_patient_list> int_patient_list { get; set; }
        public virtual DbSet<int_patient_list_detail> int_patient_list_detail { get; set; }
        public virtual DbSet<int_patient_list_link> int_patient_list_link { get; set; }
        public virtual DbSet<int_patient_monitor> int_patient_monitor { get; set; }
        public virtual DbSet<int_patient_procedure> int_patient_procedure { get; set; }
        public virtual DbSet<int_person> int_person { get; set; }
        public virtual DbSet<int_person_name> int_person_name { get; set; }
        public virtual DbSet<int_pref> int_pref { get; set; }
        public virtual DbSet<int_pref_diff> int_pref_diff { get; set; }
        public virtual DbSet<int_pref_lock> int_pref_lock { get; set; }
        public virtual DbSet<int_pref_pushdown> int_pref_pushdown { get; set; }
        public virtual DbSet<int_procedure> int_procedure { get; set; }
        public virtual DbSet<int_procedure_hcp_int> int_procedure_hcp_int { get; set; }
        public virtual DbSet<int_product> int_product { get; set; }
        public virtual DbSet<int_product_access> int_product_access { get; set; }
        public virtual DbSet<int_product_map> int_product_map { get; set; }
        public virtual DbSet<int_reference_range> int_reference_range { get; set; }
        public virtual DbSet<int_result_flag> int_result_flag { get; set; }
        public virtual DbSet<int_saved_event> int_saved_event { get; set; }
        public virtual DbSet<int_saved_event_waveform> int_saved_event_waveform { get; set; }
        public virtual DbSet<int_security> int_security { get; set; }
        public virtual DbSet<int_security_diff> int_security_diff { get; set; }
        public virtual DbSet<int_security_lock> int_security_lock { get; set; }
        public virtual DbSet<int_security_pushdown> int_security_pushdown { get; set; }
        public virtual DbSet<int_send_sys> int_send_sys { get; set; }
        public virtual DbSet<int_site_link> int_site_link { get; set; }
        public virtual DbSet<int_specimen> int_specimen { get; set; }
        public virtual DbSet<int_specimen_group> int_specimen_group { get; set; }
        public virtual DbSet<int_system_parameter> int_system_parameter { get; set; }
        public virtual DbSet<int_tech_map> int_tech_map { get; set; }
        public virtual DbSet<int_telephone> int_telephone { get; set; }
        public virtual DbSet<int_test_group> int_test_group { get; set; }
        public virtual DbSet<int_test_group_detail> int_test_group_detail { get; set; }
        public virtual DbSet<int_translate> int_translate { get; set; }
        public virtual DbSet<int_translate_list> int_translate_list { get; set; }
        public virtual DbSet<int_vital_live_temp> int_vital_live_temp { get; set; }
        public virtual DbSet<int_waveform> int_waveform { get; set; }
        public virtual DbSet<int_waveform_live> int_waveform_live { get; set; }
        public virtual DbSet<mpi_decision_field> mpi_decision_field { get; set; }
        public virtual DbSet<mpi_decision_log> mpi_decision_log { get; set; }
        public virtual DbSet<mpi_decision_queue> mpi_decision_queue { get; set; }
        public virtual DbSet<mpi_patient_link> mpi_patient_link { get; set; }
        public virtual DbSet<mpi_search_field> mpi_search_field { get; set; }
        public virtual DbSet<mpi_search_results> mpi_search_results { get; set; }
        public virtual DbSet<mpi_search_work> mpi_search_work { get; set; }
        public virtual DbSet<WaveformAnnotationData> WaveformAnnotationDatas { get; set; }
        public virtual DbSet<WaveformPrintData> WaveformPrintDatas { get; set; }
        public virtual DbSet<v_ActivePatientChannels> v_ActivePatientChannels { get; set; }
        public virtual DbSet<v_AvailableDataTypes> v_AvailableDataTypes { get; set; }
        public virtual DbSet<v_CombinedEncounters> v_CombinedEncounters { get; set; }
        public virtual DbSet<v_DevicePatientIdActive> v_DevicePatientIdActive { get; set; }
        public virtual DbSet<v_DeviceSessionAssignment> v_DeviceSessionAssignment { get; set; }
        public virtual DbSet<v_DeviceSessionInfo> v_DeviceSessionInfo { get; set; }
        public virtual DbSet<v_DeviceSessionOrganization> v_DeviceSessionOrganization { get; set; }
        public virtual DbSet<v_DiscardedOverlappingLegacyWaveformData> v_DiscardedOverlappingLegacyWaveformData { get; set; }
        public virtual DbSet<v_DiscardedOverlappingWaveformData> v_DiscardedOverlappingWaveformData { get; set; }
        public virtual DbSet<v_FeedGdsCodes> v_FeedGdsCodes { get; set; }
        public virtual DbSet<v_GeneralAlarms> v_GeneralAlarms { get; set; }
        public virtual DbSet<v_GeneralAlarmsLite> v_GeneralAlarmsLite { get; set; }
        public virtual DbSet<v_LegacyChannelTypes> v_LegacyChannelTypes { get; set; }
        public virtual DbSet<v_LegacyMonitor> v_LegacyMonitor { get; set; }
        public virtual DbSet<v_LegacyMonitorCombined> v_LegacyMonitorCombined { get; set; }
        public virtual DbSet<v_LegacyPatientMonitor> v_LegacyPatientMonitor { get; set; }
        public virtual DbSet<v_LegacyPatientMonitorCombined> v_LegacyPatientMonitorCombined { get; set; }
        public virtual DbSet<v_LegacyWaveform> v_LegacyWaveform { get; set; }
        public virtual DbSet<v_LimitAlarms> v_LimitAlarms { get; set; }
        public virtual DbSet<v_LimitAlarmsLite> v_LimitAlarmsLite { get; set; }
        public virtual DbSet<v_LiveVitalsData> v_LiveVitalsData { get; set; }
        public virtual DbSet<v_MetaData> v_MetaData { get; set; }
        public virtual DbSet<v_Monitors> v_Monitors { get; set; }
        public virtual DbSet<v_PatientChannelLegacy> v_PatientChannelLegacy { get; set; }
        public virtual DbSet<v_Patients> v_Patients { get; set; }
        public virtual DbSet<v_PatientSessionOrganization> v_PatientSessionOrganization { get; set; }
        public virtual DbSet<v_PatientSessions> v_PatientSessions { get; set; }
        public virtual DbSet<v_PatientTopicSessions> v_PatientTopicSessions { get; set; }
        public virtual DbSet<v_PrintJobs> v_PrintJobs { get; set; }
        public virtual DbSet<v_PrintJobsWaveform> v_PrintJobsWaveform { get; set; }
        public virtual DbSet<v_StatusData> v_StatusData { get; set; }
        public virtual DbSet<v_StitchedPatients> v_StitchedPatients { get; set; }
        public virtual DbSet<v_TopicTypes> v_TopicTypes { get; set; }
        public virtual DbSet<v_VitalsData> v_VitalsData { get; set; }
        public virtual DbSet<v_WaveformSampleRate> v_WaveformSampleRate { get; set; }
        public virtual DbSet<vwMetaDataValueNum> vwMetaDataValueNums { get; set; }
        public virtual DbSet<vwxLatestDeviceInformation> vwxLatestDeviceInformations { get; set; }
    
        [DbFunction("portalEntities", "fn_Split")]
        public virtual IQueryable<fn_Split_Result> fn_Split(string sText, string sDelim)
        {
            var sTextParameter = sText != null ?
                new ObjectParameter("sText", sText) :
                new ObjectParameter("sText", typeof(string));
    
            var sDelimParameter = sDelim != null ?
                new ObjectParameter("sDelim", sDelim) :
                new ObjectParameter("sDelim", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_Split_Result>("[portalEntities].[fn_Split](@sText, @sDelim)", sTextParameter, sDelimParameter);
        }
    
        [DbFunction("portalEntities", "fn_Vital_Merge")]
        public virtual IQueryable<fn_Vital_Merge_Result> fn_Vital_Merge(string sDelim)
        {
            var sDelimParameter = sDelim != null ?
                new ObjectParameter("sDelim", sDelim) :
                new ObjectParameter("sDelim", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_Vital_Merge_Result>("[portalEntities].[fn_Vital_Merge](@sDelim)", sDelimParameter);
        }
    
        [DbFunction("portalEntities", "fntDateTimeToFileTime")]
        public virtual IQueryable<fntDateTimeToFileTime_Result> fntDateTimeToFileTime(Nullable<System.DateTime> dateTime)
        {
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fntDateTimeToFileTime_Result>("[portalEntities].[fntDateTimeToFileTime](@DateTime)", dateTimeParameter);
        }
    
        [DbFunction("portalEntities", "fntDeviceInfoSelect")]
        public virtual IQueryable<fntDeviceInfoSelect_Result> fntDeviceInfoSelect(Nullable<System.Guid> deviceSessionId, string name)
        {
            var deviceSessionIdParameter = deviceSessionId.HasValue ?
                new ObjectParameter("DeviceSessionId", deviceSessionId) :
                new ObjectParameter("DeviceSessionId", typeof(System.Guid));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fntDeviceInfoSelect_Result>("[portalEntities].[fntDeviceInfoSelect](@DeviceSessionId, @Name)", deviceSessionIdParameter, nameParameter);
        }
    
        [DbFunction("portalEntities", "fntDeviceInfoSelectX")]
        public virtual IQueryable<fntDeviceInfoSelectX_Result> fntDeviceInfoSelectX(Nullable<System.Guid> deviceSessionId, string name)
        {
            var deviceSessionIdParameter = deviceSessionId.HasValue ?
                new ObjectParameter("DeviceSessionId", deviceSessionId) :
                new ObjectParameter("DeviceSessionId", typeof(System.Guid));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fntDeviceInfoSelectX_Result>("[portalEntities].[fntDeviceInfoSelectX](@DeviceSessionId, @Name)", deviceSessionIdParameter, nameParameter);
        }
    
        [DbFunction("portalEntities", "fntFileTimeToDateTime")]
        public virtual IQueryable<fntFileTimeToDateTime_Result> fntFileTimeToDateTime(Nullable<long> dateTime)
        {
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fntFileTimeToDateTime_Result>("[portalEntities].[fntFileTimeToDateTime](@DateTime)", dateTimeParameter);
        }
    
        [DbFunction("portalEntities", "fntFileTimeToUtc")]
        public virtual IQueryable<fntFileTimeToUtc_Result> fntFileTimeToUtc(Nullable<long> ftValue)
        {
            var ftValueParameter = ftValue.HasValue ?
                new ObjectParameter("FtValue", ftValue) :
                new ObjectParameter("FtValue", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fntFileTimeToUtc_Result>("[portalEntities].[fntFileTimeToUtc](@FtValue)", ftValueParameter);
        }
    
        [DbFunction("portalEntities", "fntUtcDateTimeToLocalTime")]
        public virtual IQueryable<fntUtcDateTimeToLocalTime_Result> fntUtcDateTimeToLocalTime(Nullable<System.DateTime> dateTime)
        {
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fntUtcDateTimeToLocalTime_Result>("[portalEntities].[fntUtcDateTimeToLocalTime](@DateTime)", dateTimeParameter);
        }
    
        [DbFunction("portalEntities", "fntZeroIfBigger")]
        public virtual IQueryable<fntZeroIfBigger_Result> fntZeroIfBigger(Nullable<int> value, Nullable<int> maxValue)
        {
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(int));
    
            var maxValueParameter = maxValue.HasValue ?
                new ObjectParameter("maxValue", maxValue) :
                new ObjectParameter("maxValue", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fntZeroIfBigger_Result>("[portalEntities].[fntZeroIfBigger](@value, @maxValue)", valueParameter, maxValueParameter);
        }
    
        [DbFunction("portalEntities", "ufnDeviceSessionInfo")]
        public virtual IQueryable<ufnDeviceSessionInfo_Result> ufnDeviceSessionInfo(Nullable<System.Guid> deviceSessionId, string name)
        {
            var deviceSessionIdParameter = deviceSessionId.HasValue ?
                new ObjectParameter("DeviceSessionId", deviceSessionId) :
                new ObjectParameter("DeviceSessionId", typeof(System.Guid));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufnDeviceSessionInfo_Result>("[portalEntities].[ufnDeviceSessionInfo](@DeviceSessionId, @Name)", deviceSessionIdParameter, nameParameter);
        }
    
        public virtual int AssignUserRole(Nullable<System.Guid> user_id, Nullable<System.Guid> user_role_id, string user_sid, string login_name)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(System.Guid));
    
            var user_role_idParameter = user_role_id.HasValue ?
                new ObjectParameter("user_role_id", user_role_id) :
                new ObjectParameter("user_role_id", typeof(System.Guid));
    
            var user_sidParameter = user_sid != null ?
                new ObjectParameter("user_sid", user_sid) :
                new ObjectParameter("user_sid", typeof(string));
    
            var login_nameParameter = login_name != null ?
                new ObjectParameter("login_name", login_name) :
                new ObjectParameter("login_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AssignUserRole", user_idParameter, user_role_idParameter, user_sidParameter, login_nameParameter);
        }
    
        public virtual int Change_Starter_Set(string lang_code)
        {
            var lang_codeParameter = lang_code != null ?
                new ObjectParameter("lang_code", lang_code) :
                new ObjectParameter("lang_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Change_Starter_Set", lang_codeParameter);
        }
    
        public virtual int ChangeUserRole(Nullable<System.Guid> user_id, Nullable<System.Guid> user_role_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(System.Guid));
    
            var user_role_idParameter = user_role_id.HasValue ?
                new ObjectParameter("user_role_id", user_role_id) :
                new ObjectParameter("user_role_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeUserRole", user_idParameter, user_role_idParameter);
        }
    
        public virtual int ClearAuditLogData(string patientId)
        {
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClearAuditLogData", patientIdParameter);
        }
    
        public virtual int ClearEventLogData(string patientId, Nullable<System.DateTime> startDate)
        {
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClearEventLogData", patientIdParameter, startDateParameter);
        }
    
        public virtual int CreateRole(Nullable<System.Guid> role_Id, string role_name, string role_desc, string xml_data)
        {
            var role_IdParameter = role_Id.HasValue ?
                new ObjectParameter("role_Id", role_Id) :
                new ObjectParameter("role_Id", typeof(System.Guid));
    
            var role_nameParameter = role_name != null ?
                new ObjectParameter("role_name", role_name) :
                new ObjectParameter("role_name", typeof(string));
    
            var role_descParameter = role_desc != null ?
                new ObjectParameter("role_desc", role_desc) :
                new ObjectParameter("role_desc", typeof(string));
    
            var xml_dataParameter = xml_data != null ?
                new ObjectParameter("xml_data", xml_data) :
                new ObjectParameter("xml_data", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateRole", role_IdParameter, role_nameParameter, role_descParameter, xml_dataParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> CreateUser(Nullable<System.Guid> user_role_id, string login_name)
        {
            var user_role_idParameter = user_role_id.HasValue ?
                new ObjectParameter("user_role_id", user_role_id) :
                new ObjectParameter("user_role_id", typeof(System.Guid));
    
            var login_nameParameter = login_name != null ?
                new ObjectParameter("login_name", login_name) :
                new ObjectParameter("login_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("CreateUser", user_role_idParameter, login_nameParameter);
        }
    
        public virtual int DeleteAnalysisTime(Nullable<System.Guid> userID, Nullable<System.Guid> patientId)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAnalysisTime", userIDParameter, patientIdParameter);
        }
    
        public virtual int DeleteBeatTimeLog(string userID, string patientId, Nullable<short> sampleRate)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var sampleRateParameter = sampleRate.HasValue ?
                new ObjectParameter("SampleRate", sampleRate) :
                new ObjectParameter("SampleRate", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteBeatTimeLog", userIDParameter, patientIdParameter, sampleRateParameter);
        }
    
        public virtual int DeleteBinInfo(string userID, string patientId, Nullable<int> templateSetIndex)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var templateSetIndexParameter = templateSetIndex.HasValue ?
                new ObjectParameter("TemplateSetIndex", templateSetIndex) :
                new ObjectParameter("TemplateSetIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteBinInfo", userIDParameter, patientIdParameter, templateSetIndexParameter);
        }
    
        public virtual int DeleteEventData(string userID, string patientId)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEventData", userIDParameter, patientIdParameter);
        }
    
        public virtual int DeletePacerSpikeLog(string userID, string patientId, Nullable<short> sampleRate)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var sampleRateParameter = sampleRate.HasValue ?
                new ObjectParameter("SampleRate", sampleRate) :
                new ObjectParameter("SampleRate", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePacerSpikeLog", userIDParameter, patientIdParameter, sampleRateParameter);
        }
    
        public virtual int DeletePatientSavedEvent(Nullable<System.Guid> patient_id, Nullable<System.Guid> event_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("event_id", event_id) :
                new ObjectParameter("event_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePatientSavedEvent", patient_idParameter, event_idParameter);
        }
    
        public virtual int DeletePatientTwelveLeadReport(Nullable<System.Guid> report_id)
        {
            var report_idParameter = report_id.HasValue ?
                new ObjectParameter("report_id", report_id) :
                new ObjectParameter("report_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePatientTwelveLeadReport", report_idParameter);
        }
    
        public virtual int DeleteRestrictedUnits(Nullable<System.Guid> user_role_id)
        {
            var user_role_idParameter = user_role_id.HasValue ?
                new ObjectParameter("user_role_id", user_role_id) :
                new ObjectParameter("user_role_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRestrictedUnits", user_role_idParameter);
        }
    
        public virtual int DeleteRole(Nullable<System.Guid> role_Id)
        {
            var role_IdParameter = role_Id.HasValue ?
                new ObjectParameter("role_Id", role_Id) :
                new ObjectParameter("role_Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRole", role_IdParameter);
        }
    
        public virtual int DeleteTemplateSetInfo(string userID, string patientId, Nullable<int> templateSetIndex)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var templateSetIndexParameter = templateSetIndex.HasValue ?
                new ObjectParameter("TemplateSetIndex", templateSetIndex) :
                new ObjectParameter("TemplateSetIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTemplateSetInfo", userIDParameter, patientIdParameter, templateSetIndexParameter);
        }
    
        public virtual int DeleteTrendData(string userID, string patientId)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTrendData", userIDParameter, patientIdParameter);
        }
    
        public virtual int DeleteUnitSetting(Nullable<System.Guid> unitID)
        {
            var unitIDParameter = unitID.HasValue ?
                new ObjectParameter("UnitID", unitID) :
                new ObjectParameter("UnitID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUnitSetting", unitIDParameter);
        }
    
        public virtual int DeleteUnitSettingByType(Nullable<System.Guid> unitID, string typeCd, string cfgName)
        {
            var unitIDParameter = unitID.HasValue ?
                new ObjectParameter("UnitID", unitID) :
                new ObjectParameter("UnitID", typeof(System.Guid));
    
            var typeCdParameter = typeCd != null ?
                new ObjectParameter("TypeCd", typeCd) :
                new ObjectParameter("TypeCd", typeof(string));
    
            var cfgNameParameter = cfgName != null ?
                new ObjectParameter("CfgName", cfgName) :
                new ObjectParameter("CfgName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUnitSettingByType", unitIDParameter, typeCdParameter, cfgNameParameter);
        }
    
        public virtual int DeleteUser(Nullable<System.Guid> user_Id)
        {
            var user_IdParameter = user_Id.HasValue ?
                new ObjectParameter("user_Id", user_Id) :
                new ObjectParameter("user_Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", user_IdParameter);
        }
    
        public virtual ObjectResult<Fix_FlowSheet_Detail_Result> Fix_FlowSheet_Detail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Fix_FlowSheet_Detail_Result>("Fix_FlowSheet_Detail");
        }
    
        public virtual ObjectResult<string> GetAccessSettings(Nullable<System.Guid> role_Id)
        {
            var role_IdParameter = role_Id.HasValue ?
                new ObjectParameter("role_Id", role_Id) :
                new ObjectParameter("role_Id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetAccessSettings", role_IdParameter);
        }
    
        public virtual ObjectResult<GetAllRoles_Result> GetAllRoles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllRoles_Result>("GetAllRoles");
        }
    
        public virtual ObjectResult<GetAnalysisTime_Result> GetAnalysisTime(Nullable<System.Guid> userID, Nullable<System.Guid> patientId)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAnalysisTime_Result>("GetAnalysisTime", userIDParameter, patientIdParameter);
        }
    
        public virtual ObjectResult<GetAuditLogData_Result> GetAuditLogData(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string itemName, string patientId, string application, string deviceName)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var applicationParameter = application != null ?
                new ObjectParameter("Application", application) :
                new ObjectParameter("Application", typeof(string));
    
            var deviceNameParameter = deviceName != null ?
                new ObjectParameter("DeviceName", deviceName) :
                new ObjectParameter("DeviceName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAuditLogData_Result>("GetAuditLogData", startDateParameter, endDateParameter, itemNameParameter, patientIdParameter, applicationParameter, deviceNameParameter);
        }
    
        public virtual ObjectResult<string> GetDefaultSettingNameList(string type_cd)
        {
            var type_cdParameter = type_cd != null ?
                new ObjectParameter("type_cd", type_cd) :
                new ObjectParameter("type_cd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetDefaultSettingNameList", type_cdParameter);
        }
    
        public virtual ObjectResult<GetETAlarms_Result> GetETAlarms(Nullable<System.Guid> patientId, Nullable<long> alarmType, Nullable<long> startTime, Nullable<long> endTime)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            var alarmTypeParameter = alarmType.HasValue ?
                new ObjectParameter("AlarmType", alarmType) :
                new ObjectParameter("AlarmType", typeof(long));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(long));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetETAlarms_Result>("GetETAlarms", patientIdParameter, alarmTypeParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<GetETBeatTimeLog_Result> GetETBeatTimeLog(Nullable<System.Guid> patient_id, Nullable<long> startFileTimeUTC, Nullable<long> endFileTimeUTC)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var startFileTimeUTCParameter = startFileTimeUTC.HasValue ?
                new ObjectParameter("StartFileTimeUTC", startFileTimeUTC) :
                new ObjectParameter("StartFileTimeUTC", typeof(long));
    
            var endFileTimeUTCParameter = endFileTimeUTC.HasValue ?
                new ObjectParameter("EndFileTimeUTC", endFileTimeUTC) :
                new ObjectParameter("EndFileTimeUTC", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetETBeatTimeLog_Result>("GetETBeatTimeLog", patient_idParameter, startFileTimeUTCParameter, endFileTimeUTCParameter);
        }
    
        public virtual ObjectResult<GetETEventsBySubtype_Result> GetETEventsBySubtype(Nullable<System.Guid> patient_id, Nullable<int> subtype, Nullable<long> startTime, Nullable<long> endTime)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var subtypeParameter = subtype.HasValue ?
                new ObjectParameter("Subtype", subtype) :
                new ObjectParameter("Subtype", typeof(int));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(long));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetETEventsBySubtype_Result>("GetETEventsBySubtype", patient_idParameter, subtypeParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<GetETEventsByType_Result> GetETEventsByType(Nullable<System.Guid> patient_id, Nullable<int> category, Nullable<int> type, Nullable<long> startTime, Nullable<long> endTime)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(long));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetETEventsByType_Result>("GetETEventsByType", patient_idParameter, categoryParameter, typeParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<GetETStatusEvents_Result> GetETStatusEvents(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetETStatusEvents_Result>("GetETStatusEvents", patient_idParameter);
        }
    
        public virtual ObjectResult<GetETTechAlarms_Result> GetETTechAlarms(Nullable<System.Guid> patientId, Nullable<long> startTime, Nullable<long> endTime)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(long));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetETTechAlarms_Result>("GetETTechAlarms", patientIdParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<GetFacilities_Result> GetFacilities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFacilities_Result>("GetFacilities");
        }
    
        public virtual ObjectResult<string> GetFacilityNameByUnitId(Nullable<System.Guid> unit_id)
        {
            var unit_idParameter = unit_id.HasValue ?
                new ObjectParameter("unit_id", unit_id) :
                new ObjectParameter("unit_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetFacilityNameByUnitId", unit_idParameter);
        }
    
        public virtual ObjectResult<GetGDSChannelList_Result> GetGDSChannelList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGDSChannelList_Result>("GetGDSChannelList");
        }
    
        public virtual ObjectResult<string> GetIntCfgValues(string keyname)
        {
            var keynameParameter = keyname != null ?
                new ObjectParameter("keyname", keyname) :
                new ObjectParameter("keyname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetIntCfgValues", keynameParameter);
        }
    
        public virtual ObjectResult<GetLeadList_Result> GetLeadList(string patientId, Nullable<int> timeTagType, Nullable<long> startTime, Nullable<long> endTime)
        {
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var timeTagTypeParameter = timeTagType.HasValue ?
                new ObjectParameter("TimeTagType", timeTagType) :
                new ObjectParameter("TimeTagType", typeof(int));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(long));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLeadList_Result>("GetLeadList", patientIdParameter, timeTagTypeParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<GetLegacyPatientAlarms_Result> GetLegacyPatientAlarms(Nullable<System.Guid> patient_id, Nullable<long> start_ft, Nullable<long> end_ft, string locale)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var start_ftParameter = start_ft.HasValue ?
                new ObjectParameter("start_ft", start_ft) :
                new ObjectParameter("start_ft", typeof(long));
    
            var end_ftParameter = end_ft.HasValue ?
                new ObjectParameter("end_ft", end_ft) :
                new ObjectParameter("end_ft", typeof(long));
    
            var localeParameter = locale != null ?
                new ObjectParameter("locale", locale) :
                new ObjectParameter("locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLegacyPatientAlarms_Result>("GetLegacyPatientAlarms", patient_idParameter, start_ftParameter, end_ftParameter, localeParameter);
        }
    
        public virtual ObjectResult<GetLegacyPatientChannelList_Result> GetLegacyPatientChannelList(Nullable<System.Guid> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLegacyPatientChannelList_Result>("GetLegacyPatientChannelList", patientIdParameter);
        }
    
        public virtual ObjectResult<GetLegacyPatientChannelTimes_Result> GetLegacyPatientChannelTimes(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLegacyPatientChannelTimes_Result>("GetLegacyPatientChannelTimes", patient_idParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> GetLegacyPatientStartftFromVitals(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetLegacyPatientStartftFromVitals", patient_idParameter);
        }
    
        public virtual int GetLegacyPatientVitalsByGDSCodes(Nullable<System.Guid> patient_id, Nullable<System.DateTime> start_dt_utc, Nullable<System.DateTime> end_dt_utc)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var start_dt_utcParameter = start_dt_utc.HasValue ?
                new ObjectParameter("start_dt_utc", start_dt_utc) :
                new ObjectParameter("start_dt_utc", typeof(System.DateTime));
    
            var end_dt_utcParameter = end_dt_utc.HasValue ?
                new ObjectParameter("end_dt_utc", end_dt_utc) :
                new ObjectParameter("end_dt_utc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetLegacyPatientVitalsByGDSCodes", patient_idParameter, start_dt_utcParameter, end_dt_utcParameter);
        }
    
        public virtual ObjectResult<GetLegacyPatientVitalsByType_Result> GetLegacyPatientVitalsByType(Nullable<System.Guid> patient_id, Nullable<int> type)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLegacyPatientVitalsByType_Result>("GetLegacyPatientVitalsByType", patient_idParameter, typeParameter);
        }
    
        public virtual ObjectResult<GetLegacyPatientVitalsByTypeUpdate_Result> GetLegacyPatientVitalsByTypeUpdate(Nullable<System.Guid> patient_id, Nullable<int> type, Nullable<long> seq_num_after, Nullable<long> dateAfter)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var seq_num_afterParameter = seq_num_after.HasValue ?
                new ObjectParameter("seq_num_after", seq_num_after) :
                new ObjectParameter("seq_num_after", typeof(long));
    
            var dateAfterParameter = dateAfter.HasValue ?
                new ObjectParameter("dateAfter", dateAfter) :
                new ObjectParameter("dateAfter", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLegacyPatientVitalsByTypeUpdate_Result>("GetLegacyPatientVitalsByTypeUpdate", patient_idParameter, typeParameter, seq_num_afterParameter, dateAfterParameter);
        }
    
        public virtual int GetLegacyPatientVitalSignByChannels(Nullable<System.Guid> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetLegacyPatientVitalSignByChannels", patientIdParameter);
        }
    
        public virtual ObjectResult<GetLegacyPatientVitalsTimeHistory_Result> GetLegacyPatientVitalsTimeHistory(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLegacyPatientVitalsTimeHistory_Result>("GetLegacyPatientVitalsTimeHistory", patient_idParameter);
        }
    
        public virtual ObjectResult<GetLegacyPatientVitalsTimeUpdate_Result> GetLegacyPatientVitalsTimeUpdate(Nullable<System.Guid> patient_id, Nullable<long> after_ft)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var after_ftParameter = after_ft.HasValue ?
                new ObjectParameter("after_ft", after_ft) :
                new ObjectParameter("after_ft", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLegacyPatientVitalsTimeUpdate_Result>("GetLegacyPatientVitalsTimeUpdate", patient_idParameter, after_ftParameter);
        }
    
        public virtual ObjectResult<GetLegacyPatientVitalsTypes_Result> GetLegacyPatientVitalsTypes(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLegacyPatientVitalsTypes_Result>("GetLegacyPatientVitalsTypes", patient_idParameter);
        }
    
        public virtual int GetLegacyPatientWaveFormDataByChannels(Nullable<System.Guid> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetLegacyPatientWaveFormDataByChannels", patientIdParameter);
        }
    
        public virtual ObjectResult<GetLegacyPatientWaveFormTimeHistory_Result> GetLegacyPatientWaveFormTimeHistory(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLegacyPatientWaveFormTimeHistory_Result>("GetLegacyPatientWaveFormTimeHistory", patient_idParameter);
        }
    
        public virtual ObjectResult<GetLicensedPersonAndPatientDataByPatientId_Result> GetLicensedPersonAndPatientDataByPatientId(Nullable<System.Guid> patient_id, Nullable<System.Guid> monitot_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var monitot_idParameter = monitot_id.HasValue ?
                new ObjectParameter("monitot_id", monitot_id) :
                new ObjectParameter("monitot_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLicensedPersonAndPatientDataByPatientId_Result>("GetLicensedPersonAndPatientDataByPatientId", patient_idParameter, monitot_idParameter);
        }
    
        public virtual ObjectResult<GetLogData_Result> GetLogData(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string logType, string patientId, string application, string deviceName)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var logTypeParameter = logType != null ?
                new ObjectParameter("LogType", logType) :
                new ObjectParameter("LogType", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var applicationParameter = application != null ?
                new ObjectParameter("Application", application) :
                new ObjectParameter("Application", typeof(string));
    
            var deviceNameParameter = deviceName != null ?
                new ObjectParameter("DeviceName", deviceName) :
                new ObjectParameter("DeviceName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLogData_Result>("GetLogData", startDateParameter, endDateParameter, logTypeParameter, patientIdParameter, applicationParameter, deviceNameParameter);
        }
    
        public virtual ObjectResult<GetMinMaxPatientTimes_Result> GetMinMaxPatientTimes(string patient_id, Nullable<bool> getAll)
        {
            var patient_idParameter = patient_id != null ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(string));
    
            var getAllParameter = getAll.HasValue ?
                new ObjectParameter("getAll", getAll) :
                new ObjectParameter("getAll", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMinMaxPatientTimes_Result>("GetMinMaxPatientTimes", patient_idParameter, getAllParameter);
        }
    
        public virtual ObjectResult<GetMinMaxPatientTimesFromVitals_Result> GetMinMaxPatientTimesFromVitals(string patient_id, Nullable<bool> getAll)
        {
            var patient_idParameter = patient_id != null ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(string));
    
            var getAllParameter = getAll.HasValue ?
                new ObjectParameter("getAll", getAll) :
                new ObjectParameter("getAll", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMinMaxPatientTimesFromVitals_Result>("GetMinMaxPatientTimesFromVitals", patient_idParameter, getAllParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetNumLeadConfigs(string patientId, Nullable<int> timeTagType, Nullable<long> startTime, Nullable<long> endTime)
        {
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var timeTagTypeParameter = timeTagType.HasValue ?
                new ObjectParameter("TimeTagType", timeTagType) :
                new ObjectParameter("TimeTagType", typeof(int));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(long));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetNumLeadConfigs", patientIdParameter, timeTagTypeParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetNumProcStats(string patientId, Nullable<int> timeTagType, Nullable<long> startTime, Nullable<long> endTime)
        {
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var timeTagTypeParameter = timeTagType.HasValue ?
                new ObjectParameter("TimeTagType", timeTagType) :
                new ObjectParameter("TimeTagType", typeof(int));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(long));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetNumProcStats", patientIdParameter, timeTagTypeParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<GetOrganizationData_Result> GetOrganizationData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrganizationData_Result>("GetOrganizationData");
        }
    
        public virtual ObjectResult<string> GetOrganizationDataAsXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetOrganizationDataAsXml");
        }
    
        public virtual ObjectResult<GetPatientAlarms_Result> GetPatientAlarms(Nullable<System.Guid> patient_id, Nullable<long> start_ft, Nullable<long> end_ft, string locale)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var start_ftParameter = start_ft.HasValue ?
                new ObjectParameter("start_ft", start_ft) :
                new ObjectParameter("start_ft", typeof(long));
    
            var end_ftParameter = end_ft.HasValue ?
                new ObjectParameter("end_ft", end_ft) :
                new ObjectParameter("end_ft", typeof(long));
    
            var localeParameter = locale != null ?
                new ObjectParameter("locale", locale) :
                new ObjectParameter("locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientAlarms_Result>("GetPatientAlarms", patient_idParameter, start_ftParameter, end_ftParameter, localeParameter);
        }
    
        public virtual ObjectResult<GetPatientAlarmsByType_Result> GetPatientAlarmsByType(Nullable<System.Guid> patient_id, Nullable<int> alarm_type, Nullable<long> start_ft, Nullable<long> end_ft)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var alarm_typeParameter = alarm_type.HasValue ?
                new ObjectParameter("alarm_type", alarm_type) :
                new ObjectParameter("alarm_type", typeof(int));
    
            var start_ftParameter = start_ft.HasValue ?
                new ObjectParameter("start_ft", start_ft) :
                new ObjectParameter("start_ft", typeof(long));
    
            var end_ftParameter = end_ft.HasValue ?
                new ObjectParameter("end_ft", end_ft) :
                new ObjectParameter("end_ft", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientAlarmsByType_Result>("GetPatientAlarmsByType", patient_idParameter, alarm_typeParameter, start_ftParameter, end_ftParameter);
        }
    
        public virtual ObjectResult<GetPatientAlarmTypes_Result> GetPatientAlarmTypes(Nullable<System.Guid> patient_id, Nullable<long> start_ft, Nullable<long> end_ft)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var start_ftParameter = start_ft.HasValue ?
                new ObjectParameter("start_ft", start_ft) :
                new ObjectParameter("start_ft", typeof(long));
    
            var end_ftParameter = end_ft.HasValue ?
                new ObjectParameter("end_ft", end_ft) :
                new ObjectParameter("end_ft", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientAlarmTypes_Result>("GetPatientAlarmTypes", patient_idParameter, start_ftParameter, end_ftParameter);
        }
    
        public virtual ObjectResult<GetPatientAuditLogData_Result> GetPatientAuditLogData(string patientId)
        {
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientAuditLogData_Result>("GetPatientAuditLogData", patientIdParameter);
        }
    
        public virtual ObjectResult<GetPatientByExternalID_Result> GetPatientByExternalID(string patientExtID)
        {
            var patientExtIDParameter = patientExtID != null ?
                new ObjectParameter("patientExtID", patientExtID) :
                new ObjectParameter("patientExtID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientByExternalID_Result>("GetPatientByExternalID", patientExtIDParameter);
        }
    
        public virtual ObjectResult<GetPatientByExternalIdAndDevice_Result> GetPatientByExternalIdAndDevice(string mrn_id, string device, string login_name, string is_vip_searchable, string is_restricted_unit_searchable)
        {
            var mrn_idParameter = mrn_id != null ?
                new ObjectParameter("mrn_id", mrn_id) :
                new ObjectParameter("mrn_id", typeof(string));
    
            var deviceParameter = device != null ?
                new ObjectParameter("device", device) :
                new ObjectParameter("device", typeof(string));
    
            var login_nameParameter = login_name != null ?
                new ObjectParameter("login_name", login_name) :
                new ObjectParameter("login_name", typeof(string));
    
            var is_vip_searchableParameter = is_vip_searchable != null ?
                new ObjectParameter("is_vip_searchable", is_vip_searchable) :
                new ObjectParameter("is_vip_searchable", typeof(string));
    
            var is_restricted_unit_searchableParameter = is_restricted_unit_searchable != null ?
                new ObjectParameter("is_restricted_unit_searchable", is_restricted_unit_searchable) :
                new ObjectParameter("is_restricted_unit_searchable", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientByExternalIdAndDevice_Result>("GetPatientByExternalIdAndDevice", mrn_idParameter, deviceParameter, login_nameParameter, is_vip_searchableParameter, is_restricted_unit_searchableParameter);
        }
    
        public virtual ObjectResult<GetPatientChannelList_Result> GetPatientChannelList(Nullable<System.Guid> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientChannelList_Result>("GetPatientChannelList", patientIdParameter);
        }
    
        public virtual ObjectResult<GetPatientChannelTimes_Result> GetPatientChannelTimes(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientChannelTimes_Result>("GetPatientChannelTimes", patient_idParameter);
        }
    
        public virtual ObjectResult<GetPatientChannelTimesFromVitals_Result> GetPatientChannelTimesFromVitals(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientChannelTimesFromVitals_Result>("GetPatientChannelTimesFromVitals", patient_idParameter);
        }
    
        public virtual ObjectResult<GetPatientData_Result> GetPatientData(string patientId)
        {
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientData_Result>("GetPatientData", patientIdParameter);
        }
    
        public virtual ObjectResult<GetPatientEventsByType_Result> GetPatientEventsByType(Nullable<System.Guid> user_id, Nullable<System.Guid> patient_id, Nullable<int> type)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(System.Guid));
    
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientEventsByType_Result>("GetPatientEventsByType", user_idParameter, patient_idParameter, typeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetPatientEventsCountByType(Nullable<System.Guid> user_id, Nullable<System.Guid> patient_id, Nullable<int> type)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(System.Guid));
    
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetPatientEventsCountByType", user_idParameter, patient_idParameter, typeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetPatientEventTypes(Nullable<System.Guid> user_id, Nullable<System.Guid> patient_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(System.Guid));
    
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetPatientEventTypes", user_idParameter, patient_idParameter);
        }
    
        public virtual ObjectResult<GetPatientInformation_Result> GetPatientInformation(string patientId, string orgId)
        {
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var orgIdParameter = orgId != null ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientInformation_Result>("GetPatientInformation", patientIdParameter, orgIdParameter);
        }
    
        public virtual ObjectResult<GetPatientLeadChangeLog_Result> GetPatientLeadChangeLog(Nullable<System.Guid> patient_id, Nullable<long> start_ft, Nullable<long> end_ft)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var start_ftParameter = start_ft.HasValue ?
                new ObjectParameter("start_ft", start_ft) :
                new ObjectParameter("start_ft", typeof(long));
    
            var end_ftParameter = end_ft.HasValue ?
                new ObjectParameter("end_ft", end_ft) :
                new ObjectParameter("end_ft", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientLeadChangeLog_Result>("GetPatientLeadChangeLog", patient_idParameter, start_ftParameter, end_ftParameter);
        }
    
        public virtual ObjectResult<GetPatientMonitorData_Result> GetPatientMonitorData(Nullable<System.Guid> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientMonitorData_Result>("GetPatientMonitorData", patientIdParameter);
        }
    
        public virtual ObjectResult<GetPatientSavedEvent_Result> GetPatientSavedEvent(Nullable<System.Guid> patient_id, Nullable<System.Guid> event_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("event_id", event_id) :
                new ObjectParameter("event_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientSavedEvent_Result>("GetPatientSavedEvent", patient_idParameter, event_idParameter);
        }
    
        public virtual ObjectResult<GetPatientSavedEventCalipers_Result> GetPatientSavedEventCalipers(Nullable<System.Guid> patient_id, Nullable<System.Guid> event_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("event_id", event_id) :
                new ObjectParameter("event_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientSavedEventCalipers_Result>("GetPatientSavedEventCalipers", patient_idParameter, event_idParameter);
        }
    
        public virtual ObjectResult<GetPatientSavedEventLeadLog_Result> GetPatientSavedEventLeadLog(Nullable<System.Guid> patient_id, Nullable<System.Guid> event_id, Nullable<bool> primary_channel, Nullable<int> timetag_type)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("event_id", event_id) :
                new ObjectParameter("event_id", typeof(System.Guid));
    
            var primary_channelParameter = primary_channel.HasValue ?
                new ObjectParameter("primary_channel", primary_channel) :
                new ObjectParameter("primary_channel", typeof(bool));
    
            var timetag_typeParameter = timetag_type.HasValue ?
                new ObjectParameter("timetag_type", timetag_type) :
                new ObjectParameter("timetag_type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientSavedEventLeadLog_Result>("GetPatientSavedEventLeadLog", patient_idParameter, event_idParameter, primary_channelParameter, timetag_typeParameter);
        }
    
        public virtual ObjectResult<GetPatientSavedEventMonitorLog_Result> GetPatientSavedEventMonitorLog(Nullable<System.Guid> patient_id, Nullable<System.Guid> event_id, Nullable<int> timetag_type)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("event_id", event_id) :
                new ObjectParameter("event_id", typeof(System.Guid));
    
            var timetag_typeParameter = timetag_type.HasValue ?
                new ObjectParameter("timetag_type", timetag_type) :
                new ObjectParameter("timetag_type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientSavedEventMonitorLog_Result>("GetPatientSavedEventMonitorLog", patient_idParameter, event_idParameter, timetag_typeParameter);
        }
    
        public virtual ObjectResult<GetPatientSavedEventSummary_Result> GetPatientSavedEventSummary(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientSavedEventSummary_Result>("GetPatientSavedEventSummary", patient_idParameter);
        }
    
        public virtual ObjectResult<GetPatientSavedEventVitals_Result> GetPatientSavedEventVitals(Nullable<System.Guid> patient_id, Nullable<System.Guid> event_id, string gds_code)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("event_id", event_id) :
                new ObjectParameter("event_id", typeof(System.Guid));
    
            var gds_codeParameter = gds_code != null ?
                new ObjectParameter("gds_code", gds_code) :
                new ObjectParameter("gds_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientSavedEventVitals_Result>("GetPatientSavedEventVitals", patient_idParameter, event_idParameter, gds_codeParameter);
        }
    
        public virtual ObjectResult<GetPatientSavedEventVitalsNew_Result> GetPatientSavedEventVitalsNew(Nullable<System.Guid> patient_id, Nullable<System.Guid> event_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("event_id", event_id) :
                new ObjectParameter("event_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientSavedEventVitalsNew_Result>("GetPatientSavedEventVitalsNew", patient_idParameter, event_idParameter);
        }
    
        public virtual ObjectResult<GetPatientSavedEventWaveForm_Result> GetPatientSavedEventWaveForm(Nullable<System.Guid> patient_id, Nullable<System.Guid> event_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("event_id", event_id) :
                new ObjectParameter("event_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientSavedEventWaveForm_Result>("GetPatientSavedEventWaveForm", patient_idParameter, event_idParameter);
        }
    
        public virtual int GetPatientsBySearch(string last_name, string first_name, string mrn_id, string login_name, string is_vip_searchable, string is_restricted_unit_searchable, Nullable<bool> debug)
        {
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var mrn_idParameter = mrn_id != null ?
                new ObjectParameter("mrn_id", mrn_id) :
                new ObjectParameter("mrn_id", typeof(string));
    
            var login_nameParameter = login_name != null ?
                new ObjectParameter("login_name", login_name) :
                new ObjectParameter("login_name", typeof(string));
    
            var is_vip_searchableParameter = is_vip_searchable != null ?
                new ObjectParameter("is_vip_searchable", is_vip_searchable) :
                new ObjectParameter("is_vip_searchable", typeof(string));
    
            var is_restricted_unit_searchableParameter = is_restricted_unit_searchable != null ?
                new ObjectParameter("is_restricted_unit_searchable", is_restricted_unit_searchable) :
                new ObjectParameter("is_restricted_unit_searchable", typeof(string));
    
            var debugParameter = debug.HasValue ?
                new ObjectParameter("Debug", debug) :
                new ObjectParameter("Debug", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPatientsBySearch", last_nameParameter, first_nameParameter, mrn_idParameter, login_nameParameter, is_vip_searchableParameter, is_restricted_unit_searchableParameter, debugParameter);
        }
    
        public virtual ObjectResult<GetPatientsList_Result> GetPatientsList(string unit_id, string status)
        {
            var unit_idParameter = unit_id != null ?
                new ObjectParameter("unit_id", unit_id) :
                new ObjectParameter("unit_id", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientsList_Result>("GetPatientsList", unit_idParameter, statusParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> GetPatientStartftFromVitals(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetPatientStartftFromVitals", patient_idParameter);
        }
    
        public virtual ObjectResult<GetPatientTimeOfDay_Result> GetPatientTimeOfDay(Nullable<System.Guid> patient_id, Nullable<long> start_ft)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var start_ftParameter = start_ft.HasValue ?
                new ObjectParameter("start_ft", start_ft) :
                new ObjectParameter("start_ft", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientTimeOfDay_Result>("GetPatientTimeOfDay", patient_idParameter, start_ftParameter);
        }
    
        public virtual ObjectResult<GetPatientTimes_Result> GetPatientTimes(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientTimes_Result>("GetPatientTimes", patient_idParameter);
        }
    
        public virtual ObjectResult<GetPatientTwelveLeadReport_Result> GetPatientTwelveLeadReport(Nullable<System.Guid> patient_id, Nullable<System.Guid> report_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var report_idParameter = report_id.HasValue ?
                new ObjectParameter("report_id", report_id) :
                new ObjectParameter("report_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientTwelveLeadReport_Result>("GetPatientTwelveLeadReport", patient_idParameter, report_idParameter);
        }
    
        public virtual ObjectResult<GetPatientTwelveLeadReportNew_Result> GetPatientTwelveLeadReportNew(Nullable<System.Guid> patient_id, Nullable<System.Guid> report_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var report_idParameter = report_id.HasValue ?
                new ObjectParameter("report_id", report_id) :
                new ObjectParameter("report_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientTwelveLeadReportNew_Result>("GetPatientTwelveLeadReportNew", patient_idParameter, report_idParameter);
        }
    
        public virtual ObjectResult<GetPatientTwelveLeadReports_Result> GetPatientTwelveLeadReports(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientTwelveLeadReports_Result>("GetPatientTwelveLeadReports", patient_idParameter);
        }
    
        public virtual int GetPatientVitalsByGDSCodes(Nullable<System.Guid> patient_id, Nullable<System.DateTime> start_dt_utc, Nullable<System.DateTime> end_dt_utc)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var start_dt_utcParameter = start_dt_utc.HasValue ?
                new ObjectParameter("start_dt_utc", start_dt_utc) :
                new ObjectParameter("start_dt_utc", typeof(System.DateTime));
    
            var end_dt_utcParameter = end_dt_utc.HasValue ?
                new ObjectParameter("end_dt_utc", end_dt_utc) :
                new ObjectParameter("end_dt_utc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPatientVitalsByGDSCodes", patient_idParameter, start_dt_utcParameter, end_dt_utcParameter);
        }
    
        public virtual ObjectResult<GetPatientVitalsByType_Result> GetPatientVitalsByType(Nullable<System.Guid> patient_id, Nullable<int> type)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientVitalsByType_Result>("GetPatientVitalsByType", patient_idParameter, typeParameter);
        }
    
        public virtual ObjectResult<GetPatientVitalsByTypeUpdate_Result> GetPatientVitalsByTypeUpdate(Nullable<System.Guid> patient_id, Nullable<int> type, Nullable<long> seq_num_after, Nullable<long> dateAfter)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var seq_num_afterParameter = seq_num_after.HasValue ?
                new ObjectParameter("seq_num_after", seq_num_after) :
                new ObjectParameter("seq_num_after", typeof(long));
    
            var dateAfterParameter = dateAfter.HasValue ?
                new ObjectParameter("dateAfter", dateAfter) :
                new ObjectParameter("dateAfter", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientVitalsByTypeUpdate_Result>("GetPatientVitalsByTypeUpdate", patient_idParameter, typeParameter, seq_num_afterParameter, dateAfterParameter);
        }
    
        public virtual int GetPatientVitalSignByChannels(Nullable<System.Guid> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPatientVitalSignByChannels", patientIdParameter);
        }
    
        public virtual int GetPatientVitalsTimeHistory(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPatientVitalsTimeHistory", patient_idParameter);
        }
    
        public virtual ObjectResult<GetPatientVitalsTimeUpdate_Result> GetPatientVitalsTimeUpdate(Nullable<System.Guid> patient_id, Nullable<long> after_ft)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var after_ftParameter = after_ft.HasValue ?
                new ObjectParameter("after_ft", after_ft) :
                new ObjectParameter("after_ft", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientVitalsTimeUpdate_Result>("GetPatientVitalsTimeUpdate", patient_idParameter, after_ftParameter);
        }
    
        public virtual ObjectResult<GetPatientVitalsTypes_Result> GetPatientVitalsTypes(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientVitalsTypes_Result>("GetPatientVitalsTypes", patient_idParameter);
        }
    
        public virtual int GetPatientWaveFormDataByChannels(Nullable<System.Guid> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPatientWaveFormDataByChannels", patientIdParameter);
        }
    
        public virtual ObjectResult<GetPatientWaveFormTimeHistory_Result> GetPatientWaveFormTimeHistory(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientWaveFormTimeHistory_Result>("GetPatientWaveFormTimeHistory", patient_idParameter);
        }
    
        public virtual ObjectResult<GetPatientWaveFormTimeUpdate_Result> GetPatientWaveFormTimeUpdate(Nullable<System.Guid> patient_id, Nullable<long> after_ft)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var after_ftParameter = after_ft.HasValue ?
                new ObjectParameter("after_ft", after_ft) :
                new ObjectParameter("after_ft", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientWaveFormTimeUpdate_Result>("GetPatientWaveFormTimeUpdate", patient_idParameter, after_ftParameter);
        }
    
        public virtual ObjectResult<GetProcStatList_Result> GetProcStatList(string patientId, Nullable<int> timeTagType, Nullable<long> startTime, Nullable<long> endTime)
        {
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var timeTagTypeParameter = timeTagType.HasValue ?
                new ObjectParameter("TimeTagType", timeTagType) :
                new ObjectParameter("TimeTagType", typeof(int));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(long));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProcStatList_Result>("GetProcStatList", patientIdParameter, timeTagTypeParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<Nullable<short>> GetProductAccess(string productCd, Nullable<System.Guid> unitId)
        {
            var productCdParameter = productCd != null ?
                new ObjectParameter("ProductCd", productCd) :
                new ObjectParameter("ProductCd", typeof(string));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<short>>("GetProductAccess", productCdParameter, unitIdParameter);
        }
    
        public virtual ObjectResult<GetQryLivePatientVitals_Result> GetQryLivePatientVitals(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQryLivePatientVitals_Result>("GetQryLivePatientVitals", patient_idParameter);
        }
    
        public virtual ObjectResult<GetQryLivePatientVitalsByMonitor_Result> GetQryLivePatientVitalsByMonitor(Nullable<System.Guid> patient_id, Nullable<System.Guid> monitor_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var monitor_idParameter = monitor_id.HasValue ?
                new ObjectParameter("monitor_id", monitor_id) :
                new ObjectParameter("monitor_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQryLivePatientVitalsByMonitor_Result>("GetQryLivePatientVitalsByMonitor", patient_idParameter, monitor_idParameter);
        }
    
        public virtual ObjectResult<GetRawECGData_Result> GetRawECGData(string patientId, string channelTypeID, Nullable<long> startTime, Nullable<long> endTime)
        {
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var channelTypeIDParameter = channelTypeID != null ?
                new ObjectParameter("ChannelTypeID", channelTypeID) :
                new ObjectParameter("ChannelTypeID", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(long));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRawECGData_Result>("GetRawECGData", patientIdParameter, channelTypeIDParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual ObjectResult<GetRecvSendAndOrderInfo_Result> GetRecvSendAndOrderInfo(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRecvSendAndOrderInfo_Result>("GetRecvSendAndOrderInfo", patient_idParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> GetRestrictedUnitList(Nullable<System.Guid> user_Role_ID)
        {
            var user_Role_IDParameter = user_Role_ID.HasValue ?
                new ObjectParameter("User_Role_ID", user_Role_ID) :
                new ObjectParameter("User_Role_ID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("GetRestrictedUnitList", user_Role_IDParameter);
        }
    
        public virtual ObjectResult<GetSavedEventBeatTimeLog_Result> GetSavedEventBeatTimeLog(Nullable<System.Guid> patient_id, Nullable<System.Guid> event_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("event_id", event_id) :
                new ObjectParameter("event_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSavedEventBeatTimeLog_Result>("GetSavedEventBeatTimeLog", patient_idParameter, event_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetSavedEventWaveFormType(Nullable<System.Guid> patient_id, Nullable<System.Guid> event_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("event_id", event_id) :
                new ObjectParameter("event_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetSavedEventWaveFormType", patient_idParameter, event_idParameter);
        }
    
        public virtual ObjectResult<GetSaveEventArrhythmiaEventTime_Result> GetSaveEventArrhythmiaEventTime(string patient_id, Nullable<System.Guid> event_id, Nullable<int> timetag_type)
        {
            var patient_idParameter = patient_id != null ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(string));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("event_id", event_id) :
                new ObjectParameter("event_id", typeof(System.Guid));
    
            var timetag_typeParameter = timetag_type.HasValue ?
                new ObjectParameter("timetag_type", timetag_type) :
                new ObjectParameter("timetag_type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSaveEventArrhythmiaEventTime_Result>("GetSaveEventArrhythmiaEventTime", patient_idParameter, event_idParameter, timetag_typeParameter);
        }
    
        public virtual ObjectResult<GetTwelveLeadReports_Result> GetTwelveLeadReports()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTwelveLeadReports_Result>("GetTwelveLeadReports");
        }
    
        public virtual ObjectResult<Nullable<int>> GetUnitAutoCollectInterval(Nullable<System.Guid> unit_id)
        {
            var unit_idParameter = unit_id.HasValue ?
                new ObjectParameter("unit_id", unit_id) :
                new ObjectParameter("unit_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetUnitAutoCollectInterval", unit_idParameter);
        }
    
        public virtual ObjectResult<GetUnitsByFacility_Result> GetUnitsByFacility(string facility_id, string login_name)
        {
            var facility_idParameter = facility_id != null ?
                new ObjectParameter("facility_id", facility_id) :
                new ObjectParameter("facility_id", typeof(string));
    
            var login_nameParameter = login_name != null ?
                new ObjectParameter("login_name", login_name) :
                new ObjectParameter("login_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUnitsByFacility_Result>("GetUnitsByFacility", facility_idParameter, login_nameParameter);
        }
    
        public virtual ObjectResult<GetUserByGuid_Result> GetUserByGuid(string user_id)
        {
            var user_idParameter = user_id != null ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserByGuid_Result>("GetUserByGuid", user_idParameter);
        }
    
        public virtual ObjectResult<GetUserByName_Result> GetUserByName(string login_name)
        {
            var login_nameParameter = login_name != null ?
                new ObjectParameter("login_name", login_name) :
                new ObjectParameter("login_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserByName_Result>("GetUserByName", login_nameParameter);
        }
    
        public virtual ObjectResult<GetUserByUsId_Result> GetUserByUsId(string user_sid)
        {
            var user_sidParameter = user_sid != null ?
                new ObjectParameter("user_sid", user_sid) :
                new ObjectParameter("user_sid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserByUsId_Result>("GetUserByUsId", user_sidParameter);
        }
    
        public virtual int GetUserPatientsList(string unit_id, string status, Nullable<bool> is_vip_searchable)
        {
            var unit_idParameter = unit_id != null ?
                new ObjectParameter("unit_id", unit_id) :
                new ObjectParameter("unit_id", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var is_vip_searchableParameter = is_vip_searchable.HasValue ?
                new ObjectParameter("is_vip_searchable", is_vip_searchable) :
                new ObjectParameter("is_vip_searchable", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetUserPatientsList", unit_idParameter, statusParameter, is_vip_searchableParameter);
        }
    
        public virtual ObjectResult<GetUsers_Result> GetUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsers_Result>("GetUsers");
        }
    
        public virtual ObjectResult<string> GetUserSettingByType(Nullable<System.Guid> user_id, string cfg_name)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(System.Guid));
    
            var cfg_nameParameter = cfg_name != null ?
                new ObjectParameter("cfg_name", cfg_name) :
                new ObjectParameter("cfg_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetUserSettingByType", user_idParameter, cfg_nameParameter);
        }
    
        public virtual ObjectResult<GetVersionNumber_Result> GetVersionNumber()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVersionNumber_Result>("GetVersionNumber");
        }
    
        public virtual ObjectResult<Nullable<int>> GetvsvAccess(Nullable<System.Guid> patient_monitor_id)
        {
            var patient_monitor_idParameter = patient_monitor_id.HasValue ?
                new ObjectParameter("patient_monitor_id", patient_monitor_id) :
                new ObjectParameter("patient_monitor_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetvsvAccess", patient_monitor_idParameter);
        }
    
        public virtual ObjectResult<GetWaveFormTimes_Result> GetWaveFormTimes(string patientID, Nullable<short> channel1Code, Nullable<short> channel2Code)
        {
            var patientIDParameter = patientID != null ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(string));
    
            var channel1CodeParameter = channel1Code.HasValue ?
                new ObjectParameter("Channel1Code", channel1Code) :
                new ObjectParameter("Channel1Code", typeof(short));
    
            var channel2CodeParameter = channel2Code.HasValue ?
                new ObjectParameter("Channel2Code", channel2Code) :
                new ObjectParameter("Channel2Code", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetWaveFormTimes_Result>("GetWaveFormTimes", patientIDParameter, channel1CodeParameter, channel2CodeParameter);
        }
    
        public virtual int InsertAdminAuditLogData(string login_id, string application_id, string patient_id, string audit_type, string device_name, string audit_descr)
        {
            var login_idParameter = login_id != null ?
                new ObjectParameter("login_id", login_id) :
                new ObjectParameter("login_id", typeof(string));
    
            var application_idParameter = application_id != null ?
                new ObjectParameter("application_id", application_id) :
                new ObjectParameter("application_id", typeof(string));
    
            var patient_idParameter = patient_id != null ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(string));
    
            var audit_typeParameter = audit_type != null ?
                new ObjectParameter("audit_type", audit_type) :
                new ObjectParameter("audit_type", typeof(string));
    
            var device_nameParameter = device_name != null ?
                new ObjectParameter("device_name", device_name) :
                new ObjectParameter("device_name", typeof(string));
    
            var audit_descrParameter = audit_descr != null ?
                new ObjectParameter("audit_descr", audit_descr) :
                new ObjectParameter("audit_descr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertAdminAuditLogData", login_idParameter, application_idParameter, patient_idParameter, audit_typeParameter, device_nameParameter, audit_descrParameter);
        }
    
        public virtual int InsertAuditLogData(string auditId, string patientId, string application, string deviceName, string message, string itemName, string originalValue, string newValue, string changedBy, byte[] hashedValue)
        {
            var auditIdParameter = auditId != null ?
                new ObjectParameter("AuditId", auditId) :
                new ObjectParameter("AuditId", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var applicationParameter = application != null ?
                new ObjectParameter("Application", application) :
                new ObjectParameter("Application", typeof(string));
    
            var deviceNameParameter = deviceName != null ?
                new ObjectParameter("DeviceName", deviceName) :
                new ObjectParameter("DeviceName", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            var originalValueParameter = originalValue != null ?
                new ObjectParameter("OriginalValue", originalValue) :
                new ObjectParameter("OriginalValue", typeof(string));
    
            var newValueParameter = newValue != null ?
                new ObjectParameter("NewValue", newValue) :
                new ObjectParameter("NewValue", typeof(string));
    
            var changedByParameter = changedBy != null ?
                new ObjectParameter("ChangedBy", changedBy) :
                new ObjectParameter("ChangedBy", typeof(string));
    
            var hashedValueParameter = hashedValue != null ?
                new ObjectParameter("HashedValue", hashedValue) :
                new ObjectParameter("HashedValue", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertAuditLogData", auditIdParameter, patientIdParameter, applicationParameter, deviceNameParameter, messageParameter, itemNameParameter, originalValueParameter, newValueParameter, changedByParameter, hashedValueParameter);
        }
    
        public virtual int InsertEventLogData(string logId, string patientId, string application, string deviceName, string message, string localizedMessage, Nullable<int> messageId, string logType)
        {
            var logIdParameter = logId != null ?
                new ObjectParameter("LogId", logId) :
                new ObjectParameter("LogId", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var applicationParameter = application != null ?
                new ObjectParameter("Application", application) :
                new ObjectParameter("Application", typeof(string));
    
            var deviceNameParameter = deviceName != null ?
                new ObjectParameter("DeviceName", deviceName) :
                new ObjectParameter("DeviceName", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var localizedMessageParameter = localizedMessage != null ?
                new ObjectParameter("LocalizedMessage", localizedMessage) :
                new ObjectParameter("LocalizedMessage", typeof(string));
    
            var messageIdParameter = messageId.HasValue ?
                new ObjectParameter("MessageId", messageId) :
                new ObjectParameter("MessageId", typeof(int));
    
            var logTypeParameter = logType != null ?
                new ObjectParameter("LogType", logType) :
                new ObjectParameter("LogType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEventLogData", logIdParameter, patientIdParameter, applicationParameter, deviceNameParameter, messageParameter, localizedMessageParameter, messageIdParameter, logTypeParameter);
        }
    
        public virtual int InsertPatientInformation(Nullable<System.Guid> patientId, Nullable<System.Guid> newPatientId, string organDonorSw, string livingWillSw, Nullable<byte> birthOrder, Nullable<int> veteranStatusCid, string birthPlace, string ssn, Nullable<int> mpiSsn1, Nullable<int> mpiSsn2, Nullable<int> mpiSsn3, Nullable<int> mpiSsn4, string drivLicNo, string mpiDl1, string mpiDl2, string mpiDl3, string mpiDl4, string drivLicStateCode, string dob, string deathdt, Nullable<int> nationalityCid, Nullable<int> citizenshipCid, Nullable<int> ethnicGroupCid, Nullable<int> raceCid, Nullable<int> genderCid, Nullable<int> primaryLanguageCid, Nullable<int> maritalStatusCid, Nullable<int> religionCid, Nullable<int> monitorInterval, Nullable<double> height, Nullable<double> weight, Nullable<double> bsa)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            var newPatientIdParameter = newPatientId.HasValue ?
                new ObjectParameter("NewPatientId", newPatientId) :
                new ObjectParameter("NewPatientId", typeof(System.Guid));
    
            var organDonorSwParameter = organDonorSw != null ?
                new ObjectParameter("OrganDonorSw", organDonorSw) :
                new ObjectParameter("OrganDonorSw", typeof(string));
    
            var livingWillSwParameter = livingWillSw != null ?
                new ObjectParameter("LivingWillSw", livingWillSw) :
                new ObjectParameter("LivingWillSw", typeof(string));
    
            var birthOrderParameter = birthOrder.HasValue ?
                new ObjectParameter("BirthOrder", birthOrder) :
                new ObjectParameter("BirthOrder", typeof(byte));
    
            var veteranStatusCidParameter = veteranStatusCid.HasValue ?
                new ObjectParameter("VeteranStatusCid", veteranStatusCid) :
                new ObjectParameter("VeteranStatusCid", typeof(int));
    
            var birthPlaceParameter = birthPlace != null ?
                new ObjectParameter("BirthPlace", birthPlace) :
                new ObjectParameter("BirthPlace", typeof(string));
    
            var ssnParameter = ssn != null ?
                new ObjectParameter("Ssn", ssn) :
                new ObjectParameter("Ssn", typeof(string));
    
            var mpiSsn1Parameter = mpiSsn1.HasValue ?
                new ObjectParameter("MpiSsn1", mpiSsn1) :
                new ObjectParameter("MpiSsn1", typeof(int));
    
            var mpiSsn2Parameter = mpiSsn2.HasValue ?
                new ObjectParameter("MpiSsn2", mpiSsn2) :
                new ObjectParameter("MpiSsn2", typeof(int));
    
            var mpiSsn3Parameter = mpiSsn3.HasValue ?
                new ObjectParameter("MpiSsn3", mpiSsn3) :
                new ObjectParameter("MpiSsn3", typeof(int));
    
            var mpiSsn4Parameter = mpiSsn4.HasValue ?
                new ObjectParameter("MpiSsn4", mpiSsn4) :
                new ObjectParameter("MpiSsn4", typeof(int));
    
            var drivLicNoParameter = drivLicNo != null ?
                new ObjectParameter("DrivLicNo", drivLicNo) :
                new ObjectParameter("DrivLicNo", typeof(string));
    
            var mpiDl1Parameter = mpiDl1 != null ?
                new ObjectParameter("MpiDl1", mpiDl1) :
                new ObjectParameter("MpiDl1", typeof(string));
    
            var mpiDl2Parameter = mpiDl2 != null ?
                new ObjectParameter("MpiDl2", mpiDl2) :
                new ObjectParameter("MpiDl2", typeof(string));
    
            var mpiDl3Parameter = mpiDl3 != null ?
                new ObjectParameter("MpiDl3", mpiDl3) :
                new ObjectParameter("MpiDl3", typeof(string));
    
            var mpiDl4Parameter = mpiDl4 != null ?
                new ObjectParameter("MpiDl4", mpiDl4) :
                new ObjectParameter("MpiDl4", typeof(string));
    
            var drivLicStateCodeParameter = drivLicStateCode != null ?
                new ObjectParameter("DrivLicStateCode", drivLicStateCode) :
                new ObjectParameter("DrivLicStateCode", typeof(string));
    
            var dobParameter = dob != null ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(string));
    
            var deathdtParameter = deathdt != null ?
                new ObjectParameter("deathdt", deathdt) :
                new ObjectParameter("deathdt", typeof(string));
    
            var nationalityCidParameter = nationalityCid.HasValue ?
                new ObjectParameter("NationalityCid", nationalityCid) :
                new ObjectParameter("NationalityCid", typeof(int));
    
            var citizenshipCidParameter = citizenshipCid.HasValue ?
                new ObjectParameter("CitizenshipCid", citizenshipCid) :
                new ObjectParameter("CitizenshipCid", typeof(int));
    
            var ethnicGroupCidParameter = ethnicGroupCid.HasValue ?
                new ObjectParameter("EthnicGroupCid", ethnicGroupCid) :
                new ObjectParameter("EthnicGroupCid", typeof(int));
    
            var raceCidParameter = raceCid.HasValue ?
                new ObjectParameter("RaceCid", raceCid) :
                new ObjectParameter("RaceCid", typeof(int));
    
            var genderCidParameter = genderCid.HasValue ?
                new ObjectParameter("GenderCid", genderCid) :
                new ObjectParameter("GenderCid", typeof(int));
    
            var primaryLanguageCidParameter = primaryLanguageCid.HasValue ?
                new ObjectParameter("PrimaryLanguageCid", primaryLanguageCid) :
                new ObjectParameter("PrimaryLanguageCid", typeof(int));
    
            var maritalStatusCidParameter = maritalStatusCid.HasValue ?
                new ObjectParameter("MaritalStatusCid", maritalStatusCid) :
                new ObjectParameter("MaritalStatusCid", typeof(int));
    
            var religionCidParameter = religionCid.HasValue ?
                new ObjectParameter("ReligionCid", religionCid) :
                new ObjectParameter("ReligionCid", typeof(int));
    
            var monitorIntervalParameter = monitorInterval.HasValue ?
                new ObjectParameter("MonitorInterval", monitorInterval) :
                new ObjectParameter("MonitorInterval", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(double));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(double));
    
            var bsaParameter = bsa.HasValue ?
                new ObjectParameter("Bsa", bsa) :
                new ObjectParameter("Bsa", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPatientInformation", patientIdParameter, newPatientIdParameter, organDonorSwParameter, livingWillSwParameter, birthOrderParameter, veteranStatusCidParameter, birthPlaceParameter, ssnParameter, mpiSsn1Parameter, mpiSsn2Parameter, mpiSsn3Parameter, mpiSsn4Parameter, drivLicNoParameter, mpiDl1Parameter, mpiDl2Parameter, mpiDl3Parameter, mpiDl4Parameter, drivLicStateCodeParameter, dobParameter, deathdtParameter, nationalityCidParameter, citizenshipCidParameter, ethnicGroupCidParameter, raceCidParameter, genderCidParameter, primaryLanguageCidParameter, maritalStatusCidParameter, religionCidParameter, monitorIntervalParameter, heightParameter, weightParameter, bsaParameter);
        }
    
        public virtual int p_Duplicated_Patient_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Duplicated_Patient_List");
        }
    
        public virtual int p_enc_det_drs(Nullable<System.Guid> enc_id)
        {
            var enc_idParameter = enc_id.HasValue ?
                new ObjectParameter("enc_id", enc_id) :
                new ObjectParameter("enc_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_enc_det_drs", enc_idParameter);
        }
    
        public virtual int p_Encounters_det(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Encounters_det", patient_idParameter);
        }
    
        public virtual int p_Encounters_Detail(Nullable<System.Guid> patient_id, string strNotAvail)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var strNotAvailParameter = strNotAvail != null ?
                new ObjectParameter("strNotAvail", strNotAvail) :
                new ObjectParameter("strNotAvail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Encounters_Detail", patient_idParameter, strNotAvailParameter);
        }
    
        public virtual ObjectResult<p_fs_Distrib_Result> p_fs_Distrib(Nullable<System.Guid> patient_id, Nullable<System.Guid> fs_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var fs_idParameter = fs_id.HasValue ?
                new ObjectParameter("fs_id", fs_id) :
                new ObjectParameter("fs_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_fs_Distrib_Result>("p_fs_Distrib", patient_idParameter, fs_idParameter);
        }
    
        public virtual ObjectResult<p_fs_Results_Result> p_fs_Results(Nullable<System.Guid> patient_id, Nullable<System.DateTime> min_date, Nullable<System.DateTime> max_date, Nullable<System.Guid> fs_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var min_dateParameter = min_date.HasValue ?
                new ObjectParameter("min_date", min_date) :
                new ObjectParameter("min_date", typeof(System.DateTime));
    
            var max_dateParameter = max_date.HasValue ?
                new ObjectParameter("max_date", max_date) :
                new ObjectParameter("max_date", typeof(System.DateTime));
    
            var fs_idParameter = fs_id.HasValue ?
                new ObjectParameter("fs_id", fs_id) :
                new ObjectParameter("fs_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_fs_Results_Result>("p_fs_Results", patient_idParameter, min_dateParameter, max_dateParameter, fs_idParameter);
        }
    
        public virtual ObjectResult<string> p_Get_cfg_Values(string keyname)
        {
            var keynameParameter = keyname != null ?
                new ObjectParameter("keyname", keyname) :
                new ObjectParameter("keyname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("p_Get_cfg_Values", keynameParameter);
        }
    
        public virtual int p_Get_Lang()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Get_Lang");
        }
    
        public virtual ObjectResult<p_gts_Channels_Info_Result> p_gts_Channels_Info()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_gts_Channels_Info_Result>("p_gts_Channels_Info");
        }
    
        public virtual ObjectResult<p_gts_Input_Rate_Result> p_gts_Input_Rate(Nullable<int> minutesTimeSlice, string save, Nullable<System.DateTime> referenceTime)
        {
            var minutesTimeSliceParameter = minutesTimeSlice.HasValue ?
                new ObjectParameter("MinutesTimeSlice", minutesTimeSlice) :
                new ObjectParameter("MinutesTimeSlice", typeof(int));
    
            var saveParameter = save != null ?
                new ObjectParameter("Save", save) :
                new ObjectParameter("Save", typeof(string));
    
            var referenceTimeParameter = referenceTime.HasValue ?
                new ObjectParameter("referenceTime", referenceTime) :
                new ObjectParameter("referenceTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_gts_Input_Rate_Result>("p_gts_Input_Rate", minutesTimeSliceParameter, saveParameter, referenceTimeParameter);
        }
    
        public virtual ObjectResult<p_gts_mp_List_Result> p_gts_mp_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_gts_mp_List_Result>("p_gts_mp_List");
        }
    
        public virtual int p_gts_Purge_gts_Tables(Nullable<int> days)
        {
            var daysParameter = days.HasValue ?
                new ObjectParameter("Days", days) :
                new ObjectParameter("Days", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_gts_Purge_gts_Tables", daysParameter);
        }
    
        public virtual ObjectResult<p_gts_WaveForm_Index_Rate_Result> p_gts_WaveForm_Index_Rate(Nullable<int> minutesTimeSlice, string save, Nullable<System.DateTime> referenceTime)
        {
            var minutesTimeSliceParameter = minutesTimeSlice.HasValue ?
                new ObjectParameter("MinutesTimeSlice", minutesTimeSlice) :
                new ObjectParameter("MinutesTimeSlice", typeof(int));
    
            var saveParameter = save != null ?
                new ObjectParameter("Save", save) :
                new ObjectParameter("Save", typeof(string));
    
            var referenceTimeParameter = referenceTime.HasValue ?
                new ObjectParameter("referenceTime", referenceTime) :
                new ObjectParameter("referenceTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_gts_WaveForm_Index_Rate_Result>("p_gts_WaveForm_Index_Rate", minutesTimeSliceParameter, saveParameter, referenceTimeParameter);
        }
    
        public virtual ObjectResult<p_HL7_Status_Result> p_HL7_Status()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_HL7_Status_Result>("p_HL7_Status");
        }
    
        public virtual int p_Ins_Guarantor(Nullable<System.Guid> patient_id, Nullable<System.Guid> enc_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var enc_idParameter = enc_id.HasValue ?
                new ObjectParameter("enc_id", enc_id) :
                new ObjectParameter("enc_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Ins_Guarantor", patient_idParameter, enc_idParameter);
        }
    
        public virtual int p_Ins_Plcys(Nullable<System.Guid> patient_id, Nullable<System.Guid> acct_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var acct_idParameter = acct_id.HasValue ?
                new ObjectParameter("acct_id", acct_id) :
                new ObjectParameter("acct_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Ins_Plcys", patient_idParameter, acct_idParameter);
        }
    
        public virtual ObjectResult<p_Load_fs_Detail_Result> p_Load_fs_Detail(Nullable<System.Guid> flowsheetID)
        {
            var flowsheetIDParameter = flowsheetID.HasValue ?
                new ObjectParameter("flowsheetID", flowsheetID) :
                new ObjectParameter("flowsheetID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_Load_fs_Detail_Result>("p_Load_fs_Detail", flowsheetIDParameter);
        }
    
        public virtual ObjectResult<p_Loader_Pat_Poll_Result> p_Loader_Pat_Poll(Nullable<System.Guid> org_id, string network_id)
        {
            var org_idParameter = org_id.HasValue ?
                new ObjectParameter("org_id", org_id) :
                new ObjectParameter("org_id", typeof(System.Guid));
    
            var network_idParameter = network_id != null ?
                new ObjectParameter("network_id", network_id) :
                new ObjectParameter("network_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_Loader_Pat_Poll_Result>("p_Loader_Pat_Poll", org_idParameter, network_idParameter);
        }
    
        public virtual int p_ml_Delete_Duplicate_Info(string duplicate_Monitor)
        {
            var duplicate_MonitorParameter = duplicate_Monitor != null ?
                new ObjectParameter("Duplicate_Monitor", duplicate_Monitor) :
                new ObjectParameter("Duplicate_Monitor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_ml_Delete_Duplicate_Info", duplicate_MonitorParameter);
        }
    
        public virtual int p_ml_Insert_Duplicate_Info(string original_ID, string duplicate_Id, string original_Monitor, string duplicate_Monitor)
        {
            var original_IDParameter = original_ID != null ?
                new ObjectParameter("Original_ID", original_ID) :
                new ObjectParameter("Original_ID", typeof(string));
    
            var duplicate_IdParameter = duplicate_Id != null ?
                new ObjectParameter("Duplicate_Id", duplicate_Id) :
                new ObjectParameter("Duplicate_Id", typeof(string));
    
            var original_MonitorParameter = original_Monitor != null ?
                new ObjectParameter("Original_Monitor", original_Monitor) :
                new ObjectParameter("Original_Monitor", typeof(string));
    
            var duplicate_MonitorParameter = duplicate_Monitor != null ?
                new ObjectParameter("Duplicate_Monitor", duplicate_Monitor) :
                new ObjectParameter("Duplicate_Monitor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_ml_Insert_Duplicate_Info", original_IDParameter, duplicate_IdParameter, original_MonitorParameter, duplicate_MonitorParameter);
        }
    
        public virtual ObjectResult<p_ml_Is_Id_On_Monitor_Result> p_ml_Is_Id_On_Monitor(string patId, string currentMonitor)
        {
            var patIdParameter = patId != null ?
                new ObjectParameter("PatId", patId) :
                new ObjectParameter("PatId", typeof(string));
    
            var currentMonitorParameter = currentMonitor != null ?
                new ObjectParameter("CurrentMonitor", currentMonitor) :
                new ObjectParameter("CurrentMonitor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_ml_Is_Id_On_Monitor_Result>("p_ml_Is_Id_On_Monitor", patIdParameter, currentMonitorParameter);
        }
    
        public virtual ObjectResult<p_ml_Load_Monitor_By_Gateway_Info_Result> p_ml_Load_Monitor_By_Gateway_Info(string networkID, string nodeID, string bedID)
        {
            var networkIDParameter = networkID != null ?
                new ObjectParameter("networkID", networkID) :
                new ObjectParameter("networkID", typeof(string));
    
            var nodeIDParameter = nodeID != null ?
                new ObjectParameter("nodeID", nodeID) :
                new ObjectParameter("nodeID", typeof(string));
    
            var bedIDParameter = bedID != null ?
                new ObjectParameter("bedID", bedID) :
                new ObjectParameter("bedID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_ml_Load_Monitor_By_Gateway_Info_Result>("p_ml_Load_Monitor_By_Gateway_Info", networkIDParameter, nodeIDParameter, bedIDParameter);
        }
    
        public virtual ObjectResult<p_ml_Load_Monitor_By_Id_Result> p_ml_Load_Monitor_By_Id(Nullable<System.Guid> monitorID)
        {
            var monitorIDParameter = monitorID.HasValue ?
                new ObjectParameter("monitorID", monitorID) :
                new ObjectParameter("monitorID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_ml_Load_Monitor_By_Id_Result>("p_ml_Load_Monitor_By_Id", monitorIDParameter);
        }
    
        public virtual ObjectResult<p_ml_Load_Patient_By_Pat_Id_Result> p_ml_Load_Patient_By_Pat_Id(Nullable<System.Guid> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_ml_Load_Patient_By_Pat_Id_Result>("p_ml_Load_Patient_By_Pat_Id", patientIdParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> p_Newest_fs_Result_Date(Nullable<System.Guid> patient_id, Nullable<System.Guid> fs_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var fs_idParameter = fs_id.HasValue ?
                new ObjectParameter("fs_id", fs_id) :
                new ObjectParameter("fs_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("p_Newest_fs_Result_Date", patient_idParameter, fs_idParameter);
        }
    
        public virtual int p_Node_Distrib(Nullable<System.Guid> patient_id, Nullable<int> node_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var node_idParameter = node_id.HasValue ?
                new ObjectParameter("node_id", node_id) :
                new ObjectParameter("node_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Node_Distrib", patient_idParameter, node_idParameter);
        }
    
        public virtual int p_Node_Results(Nullable<System.Guid> patient_id, Nullable<System.DateTime> min_date, Nullable<System.DateTime> max_date, Nullable<int> node_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var min_dateParameter = min_date.HasValue ?
                new ObjectParameter("min_date", min_date) :
                new ObjectParameter("min_date", typeof(System.DateTime));
    
            var max_dateParameter = max_date.HasValue ?
                new ObjectParameter("max_date", max_date) :
                new ObjectParameter("max_date", typeof(System.DateTime));
    
            var node_idParameter = node_id.HasValue ?
                new ObjectParameter("node_id", node_id) :
                new ObjectParameter("node_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Node_Results", patient_idParameter, min_dateParameter, max_dateParameter, node_idParameter);
        }
    
        public virtual ObjectResult<p_Nok_Result> p_Nok(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_Nok_Result>("p_Nok", patient_idParameter);
        }
    
        public virtual ObjectResult<p_On_Monitor_Result> p_On_Monitor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_On_Monitor_Result>("p_On_Monitor");
        }
    
        public virtual int p_Parents(Nullable<System.Guid> person_id)
        {
            var person_idParameter = person_id.HasValue ?
                new ObjectParameter("person_id", person_id) :
                new ObjectParameter("person_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Parents", person_idParameter);
        }
    
        public virtual ObjectResult<string> p_Pat_Summary(string mrn)
        {
            var mrnParameter = mrn != null ?
                new ObjectParameter("mrn", mrn) :
                new ObjectParameter("mrn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("p_Pat_Summary", mrnParameter);
        }
    
        public virtual ObjectResult<string> p_Purge(string mrn)
        {
            var mrnParameter = mrn != null ?
                new ObjectParameter("mrn", mrn) :
                new ObjectParameter("mrn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("p_Purge", mrnParameter);
        }
    
        public virtual int p_Purge_12Lead_Data(Nullable<int> fChunkSize, Nullable<System.DateTime> purgeDate, ObjectParameter twelveLeadRowsPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            var purgeDateParameter = purgeDate.HasValue ?
                new ObjectParameter("PurgeDate", purgeDate) :
                new ObjectParameter("PurgeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Purge_12Lead_Data", fChunkSizeParameter, purgeDateParameter, twelveLeadRowsPurged);
        }
    
        public virtual int p_Purge_Alarm_Data(Nullable<int> fChunkSize, Nullable<System.DateTime> purgeDate, ObjectParameter alarmsRowsPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            var purgeDateParameter = purgeDate.HasValue ?
                new ObjectParameter("PurgeDate", purgeDate) :
                new ObjectParameter("PurgeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Purge_Alarm_Data", fChunkSizeParameter, purgeDateParameter, alarmsRowsPurged);
        }
    
        public virtual int p_Purge_All_Patient_Data()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Purge_All_Patient_Data");
        }
    
        public virtual int p_Purge_CEI_Log_Data(Nullable<int> fChunkSize, Nullable<System.DateTime> purgeDate, ObjectParameter cEILogPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            var purgeDateParameter = purgeDate.HasValue ?
                new ObjectParameter("PurgeDate", purgeDate) :
                new ObjectParameter("PurgeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Purge_CEI_Log_Data", fChunkSizeParameter, purgeDateParameter, cEILogPurged);
        }
    
        public virtual int p_Purge_ch_Audit_Log(Nullable<int> fChunkSize, Nullable<System.DateTime> purgeDate, ObjectParameter chAuditDataPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            var purgeDateParameter = purgeDate.HasValue ?
                new ObjectParameter("PurgeDate", purgeDate) :
                new ObjectParameter("PurgeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Purge_ch_Audit_Log", fChunkSizeParameter, purgeDateParameter, chAuditDataPurged);
        }
    
        public virtual int p_Purge_ch_Log_Data(Nullable<int> fChunkSize, Nullable<System.DateTime> purgeDate, ObjectParameter cHLogDataPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            var purgeDateParameter = purgeDate.HasValue ?
                new ObjectParameter("PurgeDate", purgeDate) :
                new ObjectParameter("PurgeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Purge_ch_Log_Data", fChunkSizeParameter, purgeDateParameter, cHLogDataPurged);
        }
    
        public virtual int p_Purge_ch_Patient_Settings(Nullable<int> fChunkSize, Nullable<System.DateTime> purgeDate, ObjectParameter patientSettingsDataPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            var purgeDateParameter = purgeDate.HasValue ?
                new ObjectParameter("PurgeDate", purgeDate) :
                new ObjectParameter("PurgeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Purge_ch_Patient_Settings", fChunkSizeParameter, purgeDateParameter, patientSettingsDataPurged);
        }
    
        public virtual int p_Purge_Encounter_Data(Nullable<int> fChunkSize, ObjectParameter encounterDataPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Purge_Encounter_Data", fChunkSizeParameter, encounterDataPurged);
        }
    
        public virtual int p_Purge_ETPrintJobs_Data(Nullable<int> fChunkSize, Nullable<System.DateTime> purgeDate, ObjectParameter printJobsPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            var purgeDateParameter = purgeDate.HasValue ?
                new ObjectParameter("PurgeDate", purgeDate) :
                new ObjectParameter("PurgeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Purge_ETPrintJobs_Data", fChunkSizeParameter, purgeDateParameter, printJobsPurged);
        }
    
        public virtual ObjectResult<p_Purge_eval_Result> p_Purge_eval(Nullable<System.DateTime> referenceDate)
        {
            var referenceDateParameter = referenceDate.HasValue ?
                new ObjectParameter("ReferenceDate", referenceDate) :
                new ObjectParameter("ReferenceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_Purge_eval_Result>("p_Purge_eval", referenceDateParameter);
        }
    
        public virtual ObjectResult<string> p_Purge_Get_Task(string taskName)
        {
            var taskNameParameter = taskName != null ?
                new ObjectParameter("TaskName", taskName) :
                new ObjectParameter("TaskName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("p_Purge_Get_Task", taskNameParameter);
        }
    
        public virtual ObjectResult<p_Purge_Get_Task_List_Result> p_Purge_Get_Task_List()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_Purge_Get_Task_List_Result>("p_Purge_Get_Task_List");
        }
    
        public virtual ObjectResult<string> p_Purge_Get_wf_Hours()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("p_Purge_Get_wf_Hours");
        }
    
        public virtual int p_Purge_HL7_Error(Nullable<int> fChunkSize, Nullable<System.DateTime> purgeDate, ObjectParameter hL7ErrorRowsPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            var purgeDateParameter = purgeDate.HasValue ?
                new ObjectParameter("PurgeDate", purgeDate) :
                new ObjectParameter("PurgeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Purge_HL7_Error", fChunkSizeParameter, purgeDateParameter, hL7ErrorRowsPurged);
        }
    
        public virtual int p_Purge_HL7_Not_Read(Nullable<int> fChunkSize, Nullable<System.DateTime> purgeDate, ObjectParameter hL7NotReadPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            var purgeDateParameter = purgeDate.HasValue ?
                new ObjectParameter("PurgeDate", purgeDate) :
                new ObjectParameter("PurgeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Purge_HL7_Not_Read", fChunkSizeParameter, purgeDateParameter, hL7NotReadPurged);
        }
    
        public virtual int p_Purge_HL7_Pending(Nullable<int> fChunkSize, Nullable<System.DateTime> purgeDate, ObjectParameter hL7PendingDataPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            var purgeDateParameter = purgeDate.HasValue ?
                new ObjectParameter("PurgeDate", purgeDate) :
                new ObjectParameter("PurgeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Purge_HL7_Pending", fChunkSizeParameter, purgeDateParameter, hL7PendingDataPurged);
        }
    
        public virtual int p_Purge_HL7_Success(Nullable<int> fChunkSize, Nullable<System.DateTime> purgeDate, ObjectParameter hL7SuccessRowsPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            var purgeDateParameter = purgeDate.HasValue ?
                new ObjectParameter("PurgeDate", purgeDate) :
                new ObjectParameter("PurgeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Purge_HL7_Success", fChunkSizeParameter, purgeDateParameter, hL7SuccessRowsPurged);
        }
    
        public virtual ObjectResult<p_Purge_Input_Rate_Result> p_Purge_Input_Rate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_Purge_Input_Rate_Result>("p_Purge_Input_Rate");
        }
    
        public virtual int p_Purge_msg_Log_Data(Nullable<int> fChunkSize, Nullable<System.DateTime> purgeDate, ObjectParameter messageLogPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            var purgeDateParameter = purgeDate.HasValue ?
                new ObjectParameter("PurgeDate", purgeDate) :
                new ObjectParameter("PurgeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Purge_msg_Log_Data", fChunkSizeParameter, purgeDateParameter, messageLogPurged);
        }
    
        public virtual int p_Purge_Print_Job_Data(Nullable<int> fChunkSize, Nullable<System.DateTime> purgeDate, ObjectParameter printJobsPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            var purgeDateParameter = purgeDate.HasValue ?
                new ObjectParameter("PurgeDate", purgeDate) :
                new ObjectParameter("PurgeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Purge_Print_Job_Data", fChunkSizeParameter, purgeDateParameter, printJobsPurged);
        }
    
        public virtual int p_Purge_Release_Data()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Purge_Release_Data");
        }
    
        public virtual int p_Purge_Result_Data(Nullable<int> fChunkSize, Nullable<System.DateTime> purgeDate, ObjectParameter hL7MonitorRowsPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            var purgeDateParameter = purgeDate.HasValue ?
                new ObjectParameter("PurgeDate", purgeDate) :
                new ObjectParameter("PurgeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Purge_Result_Data", fChunkSizeParameter, purgeDateParameter, hL7MonitorRowsPurged);
        }
    
        public virtual int p_Purge_Set_Task(string taskName, string taskVal)
        {
            var taskNameParameter = taskName != null ?
                new ObjectParameter("TaskName", taskName) :
                new ObjectParameter("TaskName", typeof(string));
    
            var taskValParameter = taskVal != null ?
                new ObjectParameter("TaskVal", taskVal) :
                new ObjectParameter("TaskVal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Purge_Set_Task", taskNameParameter, taskValParameter);
        }
    
        public virtual int p_Purge_WaveForm_Data(Nullable<int> fChunkSize, Nullable<System.DateTime> purgeDate, ObjectParameter waveformDataPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            var purgeDateParameter = purgeDate.HasValue ?
                new ObjectParameter("PurgeDate", purgeDate) :
                new ObjectParameter("PurgeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Purge_WaveForm_Data", fChunkSizeParameter, purgeDateParameter, waveformDataPurged);
        }
    
        public virtual int p_rel_CleanUp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_rel_CleanUp");
        }
    
        public virtual int p_Set_cfg_Values(string keyname, string keyvalue)
        {
            var keynameParameter = keyname != null ?
                new ObjectParameter("keyname", keyname) :
                new ObjectParameter("keyname", typeof(string));
    
            var keyvalueParameter = keyvalue != null ?
                new ObjectParameter("keyvalue", keyvalue) :
                new ObjectParameter("keyvalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Set_cfg_Values", keynameParameter, keyvalueParameter);
        }
    
        public virtual int p_Set_Lang(string iCSLang)
        {
            var iCSLangParameter = iCSLang != null ?
                new ObjectParameter("ICSLang", iCSLang) :
                new ObjectParameter("ICSLang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Set_Lang", iCSLangParameter);
        }
    
        public virtual int p_Test_Groups(Nullable<int> node_id)
        {
            var node_idParameter = node_id.HasValue ?
                new ObjectParameter("node_id", node_id) :
                new ObjectParameter("node_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_Test_Groups", node_idParameter);
        }
    
        public virtual int p_ugTest(string table, string col)
        {
            var tableParameter = table != null ?
                new ObjectParameter("table", table) :
                new ObjectParameter("table", typeof(string));
    
            var colParameter = col != null ?
                new ObjectParameter("col", col) :
                new ObjectParameter("col", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_ugTest", tableParameter, colParameter);
        }
    
        public virtual int p_update_vital_live_temp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_update_vital_live_temp");
        }
    
        public virtual int PurgerParameters(string name, ObjectParameter purgeDate, ObjectParameter chunkSize)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PurgerParameters", nameParameter, purgeDate, chunkSize);
        }
    
        public virtual int PurgerWaveformParameters(ObjectParameter purgeDate, ObjectParameter chunkSize)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PurgerWaveformParameters", purgeDate, chunkSize);
        }
    
        public virtual int RemoveAlarm(Nullable<System.Guid> alarm_id, Nullable<byte> remove_flag)
        {
            var alarm_idParameter = alarm_id.HasValue ?
                new ObjectParameter("alarm_id", alarm_id) :
                new ObjectParameter("alarm_id", typeof(System.Guid));
    
            var remove_flagParameter = remove_flag.HasValue ?
                new ObjectParameter("remove_flag", remove_flag) :
                new ObjectParameter("remove_flag", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveAlarm", alarm_idParameter, remove_flagParameter);
        }
    
        public virtual int RestrictUnit(Nullable<System.Guid> user_role_id, Nullable<System.Guid> organization_id)
        {
            var user_role_idParameter = user_role_id.HasValue ?
                new ObjectParameter("user_role_id", user_role_id) :
                new ObjectParameter("user_role_id", typeof(System.Guid));
    
            var organization_idParameter = organization_id.HasValue ?
                new ObjectParameter("organization_id", organization_id) :
                new ObjectParameter("organization_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RestrictUnit", user_role_idParameter, organization_idParameter);
        }
    
        public virtual ObjectResult<RetrieveBeatTimeLog_Result> RetrieveBeatTimeLog(string userID, string patientId)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveBeatTimeLog_Result>("RetrieveBeatTimeLog", userIDParameter, patientIdParameter);
        }
    
        public virtual ObjectResult<RetrieveBeatTimeLogWithSampleRate_Result> RetrieveBeatTimeLogWithSampleRate(string userID, string patientId, Nullable<short> sampleRate)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var sampleRateParameter = sampleRate.HasValue ?
                new ObjectParameter("SampleRate", sampleRate) :
                new ObjectParameter("SampleRate", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveBeatTimeLogWithSampleRate_Result>("RetrieveBeatTimeLogWithSampleRate", userIDParameter, patientIdParameter, sampleRateParameter);
        }
    
        public virtual ObjectResult<RetrieveBinInfo_Result> RetrieveBinInfo(string userID, string patientId, Nullable<int> templateSetIndex)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var templateSetIndexParameter = templateSetIndex.HasValue ?
                new ObjectParameter("TemplateSetIndex", templateSetIndex) :
                new ObjectParameter("TemplateSetIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveBinInfo_Result>("RetrieveBinInfo", userIDParameter, patientIdParameter, templateSetIndexParameter);
        }
    
        public virtual ObjectResult<RetrievePacerSpikeLog_Result> RetrievePacerSpikeLog(string userID, string patientId, Nullable<short> sampleRate)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var sampleRateParameter = sampleRate.HasValue ?
                new ObjectParameter("SampleRate", sampleRate) :
                new ObjectParameter("SampleRate", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrievePacerSpikeLog_Result>("RetrievePacerSpikeLog", userIDParameter, patientIdParameter, sampleRateParameter);
        }
    
        public virtual ObjectResult<RetrieveTemplateSetInfo_Result> RetrieveTemplateSetInfo(string userID, string patientId, Nullable<int> templateSetIndex)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var templateSetIndexParameter = templateSetIndex.HasValue ?
                new ObjectParameter("TemplateSetIndex", templateSetIndex) :
                new ObjectParameter("TemplateSetIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveTemplateSetInfo_Result>("RetrieveTemplateSetInfo", userIDParameter, patientIdParameter, templateSetIndexParameter);
        }
    
        public virtual ObjectResult<RetrieveTrendData_Result> RetrieveTrendData(string userID, string patientId)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RetrieveTrendData_Result>("RetrieveTrendData", userIDParameter, patientIdParameter);
        }
    
        public virtual int SaveArrhythmiaEventTime(string patient_id, Nullable<System.Guid> event_id, Nullable<int> timetag_type, Nullable<int> arrhythmia_event_type, Nullable<long> start_ms, Nullable<long> end_ms)
        {
            var patient_idParameter = patient_id != null ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(string));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("event_id", event_id) :
                new ObjectParameter("event_id", typeof(System.Guid));
    
            var timetag_typeParameter = timetag_type.HasValue ?
                new ObjectParameter("timetag_type", timetag_type) :
                new ObjectParameter("timetag_type", typeof(int));
    
            var arrhythmia_event_typeParameter = arrhythmia_event_type.HasValue ?
                new ObjectParameter("arrhythmia_event_type", arrhythmia_event_type) :
                new ObjectParameter("arrhythmia_event_type", typeof(int));
    
            var start_msParameter = start_ms.HasValue ?
                new ObjectParameter("start_ms", start_ms) :
                new ObjectParameter("start_ms", typeof(long));
    
            var end_msParameter = end_ms.HasValue ?
                new ObjectParameter("end_ms", end_ms) :
                new ObjectParameter("end_ms", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveArrhythmiaEventTime", patient_idParameter, event_idParameter, timetag_typeParameter, arrhythmia_event_typeParameter, start_msParameter, end_msParameter);
        }
    
        public virtual int SaveEvent(Nullable<System.Guid> patient_id, Nullable<System.Guid> user_id, Nullable<System.Guid> event_id, Nullable<System.DateTime> insert_dt, Nullable<int> orig_event_category, Nullable<System.DateTime> start_dt, Nullable<long> start_ms, Nullable<int> duration, Nullable<int> print_format, string title, string comment, Nullable<byte> annotate_data, Nullable<byte> beat_color, Nullable<int> num_waveforms, Nullable<int> sweep_speed, Nullable<int> minutes_per_page, Nullable<int> thumbnailChannel)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(System.Guid));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("event_id", event_id) :
                new ObjectParameter("event_id", typeof(System.Guid));
    
            var insert_dtParameter = insert_dt.HasValue ?
                new ObjectParameter("insert_dt", insert_dt) :
                new ObjectParameter("insert_dt", typeof(System.DateTime));
    
            var orig_event_categoryParameter = orig_event_category.HasValue ?
                new ObjectParameter("orig_event_category", orig_event_category) :
                new ObjectParameter("orig_event_category", typeof(int));
    
            var start_dtParameter = start_dt.HasValue ?
                new ObjectParameter("start_dt", start_dt) :
                new ObjectParameter("start_dt", typeof(System.DateTime));
    
            var start_msParameter = start_ms.HasValue ?
                new ObjectParameter("start_ms", start_ms) :
                new ObjectParameter("start_ms", typeof(long));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(int));
    
            var print_formatParameter = print_format.HasValue ?
                new ObjectParameter("print_format", print_format) :
                new ObjectParameter("print_format", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            var annotate_dataParameter = annotate_data.HasValue ?
                new ObjectParameter("annotate_data", annotate_data) :
                new ObjectParameter("annotate_data", typeof(byte));
    
            var beat_colorParameter = beat_color.HasValue ?
                new ObjectParameter("beat_color", beat_color) :
                new ObjectParameter("beat_color", typeof(byte));
    
            var num_waveformsParameter = num_waveforms.HasValue ?
                new ObjectParameter("num_waveforms", num_waveforms) :
                new ObjectParameter("num_waveforms", typeof(int));
    
            var sweep_speedParameter = sweep_speed.HasValue ?
                new ObjectParameter("sweep_speed", sweep_speed) :
                new ObjectParameter("sweep_speed", typeof(int));
    
            var minutes_per_pageParameter = minutes_per_page.HasValue ?
                new ObjectParameter("minutes_per_page", minutes_per_page) :
                new ObjectParameter("minutes_per_page", typeof(int));
    
            var thumbnailChannelParameter = thumbnailChannel.HasValue ?
                new ObjectParameter("thumbnailChannel", thumbnailChannel) :
                new ObjectParameter("thumbnailChannel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveEvent", patient_idParameter, user_idParameter, event_idParameter, insert_dtParameter, orig_event_categoryParameter, start_dtParameter, start_msParameter, durationParameter, print_formatParameter, titleParameter, commentParameter, annotate_dataParameter, beat_colorParameter, num_waveformsParameter, sweep_speedParameter, minutes_per_pageParameter, thumbnailChannelParameter);
        }
    
        public virtual int SaveEventBeatTimeLog(Nullable<System.Guid> patient_id, Nullable<System.Guid> event_id, Nullable<long> patient_start_ft, Nullable<long> start_ft, Nullable<int> num_beats, Nullable<short> sampleRate, byte[] beat_data)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("event_id", event_id) :
                new ObjectParameter("event_id", typeof(System.Guid));
    
            var patient_start_ftParameter = patient_start_ft.HasValue ?
                new ObjectParameter("patient_start_ft", patient_start_ft) :
                new ObjectParameter("patient_start_ft", typeof(long));
    
            var start_ftParameter = start_ft.HasValue ?
                new ObjectParameter("start_ft", start_ft) :
                new ObjectParameter("start_ft", typeof(long));
    
            var num_beatsParameter = num_beats.HasValue ?
                new ObjectParameter("num_beats", num_beats) :
                new ObjectParameter("num_beats", typeof(int));
    
            var sampleRateParameter = sampleRate.HasValue ?
                new ObjectParameter("sampleRate", sampleRate) :
                new ObjectParameter("sampleRate", typeof(short));
    
            var beat_dataParameter = beat_data != null ?
                new ObjectParameter("beat_data", beat_data) :
                new ObjectParameter("beat_data", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveEventBeatTimeLog", patient_idParameter, event_idParameter, patient_start_ftParameter, start_ftParameter, num_beatsParameter, sampleRateParameter, beat_dataParameter);
        }
    
        public virtual int SaveEventCalipers(Nullable<System.Guid> patient_id, Nullable<System.Guid> event_id, Nullable<int> channel_type, Nullable<int> caliper_type, string calipers_orientation, string caliper_text, Nullable<long> caliper_start_ms, Nullable<long> caliper_end_ms, Nullable<int> caliper_top, Nullable<int> caliper_bottom)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("event_id", event_id) :
                new ObjectParameter("event_id", typeof(System.Guid));
    
            var channel_typeParameter = channel_type.HasValue ?
                new ObjectParameter("channel_type", channel_type) :
                new ObjectParameter("channel_type", typeof(int));
    
            var caliper_typeParameter = caliper_type.HasValue ?
                new ObjectParameter("caliper_type", caliper_type) :
                new ObjectParameter("caliper_type", typeof(int));
    
            var calipers_orientationParameter = calipers_orientation != null ?
                new ObjectParameter("calipers_orientation", calipers_orientation) :
                new ObjectParameter("calipers_orientation", typeof(string));
    
            var caliper_textParameter = caliper_text != null ?
                new ObjectParameter("caliper_text", caliper_text) :
                new ObjectParameter("caliper_text", typeof(string));
    
            var caliper_start_msParameter = caliper_start_ms.HasValue ?
                new ObjectParameter("caliper_start_ms", caliper_start_ms) :
                new ObjectParameter("caliper_start_ms", typeof(long));
    
            var caliper_end_msParameter = caliper_end_ms.HasValue ?
                new ObjectParameter("caliper_end_ms", caliper_end_ms) :
                new ObjectParameter("caliper_end_ms", typeof(long));
    
            var caliper_topParameter = caliper_top.HasValue ?
                new ObjectParameter("caliper_top", caliper_top) :
                new ObjectParameter("caliper_top", typeof(int));
    
            var caliper_bottomParameter = caliper_bottom.HasValue ?
                new ObjectParameter("caliper_bottom", caliper_bottom) :
                new ObjectParameter("caliper_bottom", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveEventCalipers", patient_idParameter, event_idParameter, channel_typeParameter, caliper_typeParameter, calipers_orientationParameter, caliper_textParameter, caliper_start_msParameter, caliper_end_msParameter, caliper_topParameter, caliper_bottomParameter);
        }
    
        public virtual int SaveEventLeadLog(Nullable<System.Guid> patient_id, Nullable<System.Guid> event_id, Nullable<bool> primary_channel, Nullable<int> timetag_type, Nullable<int> lead_type, Nullable<long> start_ms)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("event_id", event_id) :
                new ObjectParameter("event_id", typeof(System.Guid));
    
            var primary_channelParameter = primary_channel.HasValue ?
                new ObjectParameter("primary_channel", primary_channel) :
                new ObjectParameter("primary_channel", typeof(bool));
    
            var timetag_typeParameter = timetag_type.HasValue ?
                new ObjectParameter("timetag_type", timetag_type) :
                new ObjectParameter("timetag_type", typeof(int));
    
            var lead_typeParameter = lead_type.HasValue ?
                new ObjectParameter("lead_type", lead_type) :
                new ObjectParameter("lead_type", typeof(int));
    
            var start_msParameter = start_ms.HasValue ?
                new ObjectParameter("start_ms", start_ms) :
                new ObjectParameter("start_ms", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveEventLeadLog", patient_idParameter, event_idParameter, primary_channelParameter, timetag_typeParameter, lead_typeParameter, start_msParameter);
        }
    
        public virtual int SaveEventMonitorEventLog(Nullable<System.Guid> patient_id, Nullable<System.Guid> event_id, Nullable<int> timetag_type, Nullable<int> monitor_event_type, Nullable<long> start_ms, Nullable<long> end_ms)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("event_id", event_id) :
                new ObjectParameter("event_id", typeof(System.Guid));
    
            var timetag_typeParameter = timetag_type.HasValue ?
                new ObjectParameter("timetag_type", timetag_type) :
                new ObjectParameter("timetag_type", typeof(int));
    
            var monitor_event_typeParameter = monitor_event_type.HasValue ?
                new ObjectParameter("monitor_event_type", monitor_event_type) :
                new ObjectParameter("monitor_event_type", typeof(int));
    
            var start_msParameter = start_ms.HasValue ?
                new ObjectParameter("start_ms", start_ms) :
                new ObjectParameter("start_ms", typeof(long));
    
            var end_msParameter = end_ms.HasValue ?
                new ObjectParameter("end_ms", end_ms) :
                new ObjectParameter("end_ms", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveEventMonitorEventLog", patient_idParameter, event_idParameter, timetag_typeParameter, monitor_event_typeParameter, start_msParameter, end_msParameter);
        }
    
        public virtual int SaveEventVitals(Nullable<System.Guid> patient_id, Nullable<System.Guid> event_id, string gds_code, Nullable<System.DateTime> result_dt, string result_value)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("event_id", event_id) :
                new ObjectParameter("event_id", typeof(System.Guid));
    
            var gds_codeParameter = gds_code != null ?
                new ObjectParameter("gds_code", gds_code) :
                new ObjectParameter("gds_code", typeof(string));
    
            var result_dtParameter = result_dt.HasValue ?
                new ObjectParameter("result_dt", result_dt) :
                new ObjectParameter("result_dt", typeof(System.DateTime));
    
            var result_valueParameter = result_value != null ?
                new ObjectParameter("result_value", result_value) :
                new ObjectParameter("result_value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveEventVitals", patient_idParameter, event_idParameter, gds_codeParameter, result_dtParameter, result_valueParameter);
        }
    
        public virtual int SaveEventWaveForm(Nullable<System.Guid> patient_id, Nullable<System.Guid> event_id, Nullable<int> wave_index, Nullable<int> waveform_category, Nullable<int> lead, Nullable<int> resolution, Nullable<int> height, Nullable<int> waveform_type, Nullable<byte> visible, Nullable<System.Guid> channel_id, Nullable<double> scale, Nullable<int> scale_type, Nullable<int> scale_min, Nullable<int> scale_max, Nullable<int> duration, Nullable<int> sample_rate, Nullable<long> sample_count, Nullable<int> num_Ypoints, Nullable<int> baseline, Nullable<double> ypoints_per_unit, byte[] waveform_data, string waveform_color, Nullable<int> scale_unit_type)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("event_id", event_id) :
                new ObjectParameter("event_id", typeof(System.Guid));
    
            var wave_indexParameter = wave_index.HasValue ?
                new ObjectParameter("wave_index", wave_index) :
                new ObjectParameter("wave_index", typeof(int));
    
            var waveform_categoryParameter = waveform_category.HasValue ?
                new ObjectParameter("waveform_category", waveform_category) :
                new ObjectParameter("waveform_category", typeof(int));
    
            var leadParameter = lead.HasValue ?
                new ObjectParameter("lead", lead) :
                new ObjectParameter("lead", typeof(int));
    
            var resolutionParameter = resolution.HasValue ?
                new ObjectParameter("resolution", resolution) :
                new ObjectParameter("resolution", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("height", height) :
                new ObjectParameter("height", typeof(int));
    
            var waveform_typeParameter = waveform_type.HasValue ?
                new ObjectParameter("waveform_type", waveform_type) :
                new ObjectParameter("waveform_type", typeof(int));
    
            var visibleParameter = visible.HasValue ?
                new ObjectParameter("visible", visible) :
                new ObjectParameter("visible", typeof(byte));
    
            var channel_idParameter = channel_id.HasValue ?
                new ObjectParameter("channel_id", channel_id) :
                new ObjectParameter("channel_id", typeof(System.Guid));
    
            var scaleParameter = scale.HasValue ?
                new ObjectParameter("scale", scale) :
                new ObjectParameter("scale", typeof(double));
    
            var scale_typeParameter = scale_type.HasValue ?
                new ObjectParameter("scale_type", scale_type) :
                new ObjectParameter("scale_type", typeof(int));
    
            var scale_minParameter = scale_min.HasValue ?
                new ObjectParameter("scale_min", scale_min) :
                new ObjectParameter("scale_min", typeof(int));
    
            var scale_maxParameter = scale_max.HasValue ?
                new ObjectParameter("scale_max", scale_max) :
                new ObjectParameter("scale_max", typeof(int));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(int));
    
            var sample_rateParameter = sample_rate.HasValue ?
                new ObjectParameter("sample_rate", sample_rate) :
                new ObjectParameter("sample_rate", typeof(int));
    
            var sample_countParameter = sample_count.HasValue ?
                new ObjectParameter("sample_count", sample_count) :
                new ObjectParameter("sample_count", typeof(long));
    
            var num_YpointsParameter = num_Ypoints.HasValue ?
                new ObjectParameter("num_Ypoints", num_Ypoints) :
                new ObjectParameter("num_Ypoints", typeof(int));
    
            var baselineParameter = baseline.HasValue ?
                new ObjectParameter("baseline", baseline) :
                new ObjectParameter("baseline", typeof(int));
    
            var ypoints_per_unitParameter = ypoints_per_unit.HasValue ?
                new ObjectParameter("Ypoints_per_unit", ypoints_per_unit) :
                new ObjectParameter("Ypoints_per_unit", typeof(double));
    
            var waveform_dataParameter = waveform_data != null ?
                new ObjectParameter("waveform_data", waveform_data) :
                new ObjectParameter("waveform_data", typeof(byte[]));
    
            var waveform_colorParameter = waveform_color != null ?
                new ObjectParameter("waveform_color", waveform_color) :
                new ObjectParameter("waveform_color", typeof(string));
    
            var scale_unit_typeParameter = scale_unit_type.HasValue ?
                new ObjectParameter("scale_unit_type", scale_unit_type) :
                new ObjectParameter("scale_unit_type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveEventWaveForm", patient_idParameter, event_idParameter, wave_indexParameter, waveform_categoryParameter, leadParameter, resolutionParameter, heightParameter, waveform_typeParameter, visibleParameter, channel_idParameter, scaleParameter, scale_typeParameter, scale_minParameter, scale_maxParameter, durationParameter, sample_rateParameter, sample_countParameter, num_YpointsParameter, baselineParameter, ypoints_per_unitParameter, waveform_dataParameter, waveform_colorParameter, scale_unit_typeParameter);
        }
    
        public virtual int SendRequestPatientTwelveLeadReport(Nullable<System.Guid> report_id, Nullable<short> send_request)
        {
            var report_idParameter = report_id.HasValue ?
                new ObjectParameter("report_id", report_id) :
                new ObjectParameter("report_id", typeof(System.Guid));
    
            var send_requestParameter = send_request.HasValue ?
                new ObjectParameter("send_request", send_request) :
                new ObjectParameter("send_request", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendRequestPatientTwelveLeadReport", report_idParameter, send_requestParameter);
        }
    
        public virtual int SetPatientDataCollect(Nullable<System.Guid> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetPatientDataCollect", patientIdParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UpdateAnalysisInsertDt(Nullable<System.Guid> patient_id, Nullable<System.Guid> user_id, Nullable<System.DateTime> insert_dt)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(System.Guid));
    
            var insert_dtParameter = insert_dt.HasValue ?
                new ObjectParameter("insert_dt", insert_dt) :
                new ObjectParameter("insert_dt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAnalysisInsertDt", patient_idParameter, user_idParameter, insert_dtParameter);
        }
    
        public virtual int UpdatePatientSavedEvent(Nullable<System.Guid> patient_id, Nullable<System.Guid> event_id, string title, string comment)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var event_idParameter = event_id.HasValue ?
                new ObjectParameter("event_id", event_id) :
                new ObjectParameter("event_id", typeof(System.Guid));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePatientSavedEvent", patient_idParameter, event_idParameter, titleParameter, commentParameter);
        }
    
        public virtual int UpdatePatientTwelveLeadReport(Nullable<System.Guid> report_id, string interpretation)
        {
            var report_idParameter = report_id.HasValue ?
                new ObjectParameter("report_id", report_id) :
                new ObjectParameter("report_id", typeof(System.Guid));
    
            var interpretationParameter = interpretation != null ?
                new ObjectParameter("Interpretation", interpretation) :
                new ObjectParameter("Interpretation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePatientTwelveLeadReport", report_idParameter, interpretationParameter);
        }
    
        public virtual int UpdatePatientTwelveLeadReportNew(Nullable<System.Guid> report_id, string interpretation, Nullable<System.Guid> user_id)
        {
            var report_idParameter = report_id.HasValue ?
                new ObjectParameter("report_id", report_id) :
                new ObjectParameter("report_id", typeof(System.Guid));
    
            var interpretationParameter = interpretation != null ?
                new ObjectParameter("interpretation", interpretation) :
                new ObjectParameter("interpretation", typeof(string));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePatientTwelveLeadReportNew", report_idParameter, interpretationParameter, user_idParameter);
        }
    
        public virtual int UpdateRole(Nullable<System.Guid> role_Id, string role_name, string role_desc, string xml_data)
        {
            var role_IdParameter = role_Id.HasValue ?
                new ObjectParameter("role_Id", role_Id) :
                new ObjectParameter("role_Id", typeof(System.Guid));
    
            var role_nameParameter = role_name != null ?
                new ObjectParameter("role_name", role_name) :
                new ObjectParameter("role_name", typeof(string));
    
            var role_descParameter = role_desc != null ?
                new ObjectParameter("role_desc", role_desc) :
                new ObjectParameter("role_desc", typeof(string));
    
            var xml_dataParameter = xml_data != null ?
                new ObjectParameter("xml_data", xml_data) :
                new ObjectParameter("xml_data", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRole", role_IdParameter, role_nameParameter, role_descParameter, xml_dataParameter);
        }
    
        public virtual int UpdateUserSetting(Nullable<System.Guid> user_id, string cfg_name, string cfg_xml_value)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(System.Guid));
    
            var cfg_nameParameter = cfg_name != null ?
                new ObjectParameter("cfg_name", cfg_name) :
                new ObjectParameter("cfg_name", typeof(string));
    
            var cfg_xml_valueParameter = cfg_xml_value != null ?
                new ObjectParameter("cfg_xml_value", cfg_xml_value) :
                new ObjectParameter("cfg_xml_value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserSetting", user_idParameter, cfg_nameParameter, cfg_xml_valueParameter);
        }
    
        public virtual int UpdateXmlValue(string type_cd, string cfg_name, string isGlobal, string filename)
        {
            var type_cdParameter = type_cd != null ?
                new ObjectParameter("type_cd", type_cd) :
                new ObjectParameter("type_cd", typeof(string));
    
            var cfg_nameParameter = cfg_name != null ?
                new ObjectParameter("cfg_name", cfg_name) :
                new ObjectParameter("cfg_name", typeof(string));
    
            var isGlobalParameter = isGlobal != null ?
                new ObjectParameter("isGlobal", isGlobal) :
                new ObjectParameter("isGlobal", typeof(string));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("Filename", filename) :
                new ObjectParameter("Filename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateXmlValue", type_cdParameter, cfg_nameParameter, isGlobalParameter, filenameParameter);
        }
    
        public virtual int usp_AddApplicationSettings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddApplicationSettings");
        }
    
        public virtual int usp_AddNewGatewaySettings(Nullable<System.Guid> gateway_id, string gateway_type, string network_id, Nullable<byte> enable_sw, string recv_app, string send_app, Nullable<System.Guid> organization_id, Nullable<System.Guid> send_sys_id, Nullable<int> results_usid, Nullable<int> sleep_secs, Nullable<int> debug_level, Nullable<System.Guid> unit_org_id, string patient_id_type, Nullable<byte> auto_assign_id_sw, string new_mrn_format, Nullable<byte> auto_chan_attach_sw, Nullable<byte> live_vitals_sw, Nullable<int> live_waveform_size, Nullable<int> decnet_node, string node_name, string nodes_excluded, string nodes_included, Nullable<byte> timemaster_sw, Nullable<int> waveform_size, Nullable<byte> print_enabled_sw, Nullable<byte> auto_record_alarm_sw, Nullable<byte> collect_12_lead_sw, Nullable<byte> print_auto_record_sw, Nullable<bool> encryption_status)
        {
            var gateway_idParameter = gateway_id.HasValue ?
                new ObjectParameter("gateway_id", gateway_id) :
                new ObjectParameter("gateway_id", typeof(System.Guid));
    
            var gateway_typeParameter = gateway_type != null ?
                new ObjectParameter("gateway_type", gateway_type) :
                new ObjectParameter("gateway_type", typeof(string));
    
            var network_idParameter = network_id != null ?
                new ObjectParameter("network_id", network_id) :
                new ObjectParameter("network_id", typeof(string));
    
            var enable_swParameter = enable_sw.HasValue ?
                new ObjectParameter("enable_sw", enable_sw) :
                new ObjectParameter("enable_sw", typeof(byte));
    
            var recv_appParameter = recv_app != null ?
                new ObjectParameter("recv_app", recv_app) :
                new ObjectParameter("recv_app", typeof(string));
    
            var send_appParameter = send_app != null ?
                new ObjectParameter("send_app", send_app) :
                new ObjectParameter("send_app", typeof(string));
    
            var organization_idParameter = organization_id.HasValue ?
                new ObjectParameter("organization_id", organization_id) :
                new ObjectParameter("organization_id", typeof(System.Guid));
    
            var send_sys_idParameter = send_sys_id.HasValue ?
                new ObjectParameter("send_sys_id", send_sys_id) :
                new ObjectParameter("send_sys_id", typeof(System.Guid));
    
            var results_usidParameter = results_usid.HasValue ?
                new ObjectParameter("results_usid", results_usid) :
                new ObjectParameter("results_usid", typeof(int));
    
            var sleep_secsParameter = sleep_secs.HasValue ?
                new ObjectParameter("sleep_secs", sleep_secs) :
                new ObjectParameter("sleep_secs", typeof(int));
    
            var debug_levelParameter = debug_level.HasValue ?
                new ObjectParameter("debug_level", debug_level) :
                new ObjectParameter("debug_level", typeof(int));
    
            var unit_org_idParameter = unit_org_id.HasValue ?
                new ObjectParameter("unit_org_id", unit_org_id) :
                new ObjectParameter("unit_org_id", typeof(System.Guid));
    
            var patient_id_typeParameter = patient_id_type != null ?
                new ObjectParameter("patient_id_type", patient_id_type) :
                new ObjectParameter("patient_id_type", typeof(string));
    
            var auto_assign_id_swParameter = auto_assign_id_sw.HasValue ?
                new ObjectParameter("auto_assign_id_sw", auto_assign_id_sw) :
                new ObjectParameter("auto_assign_id_sw", typeof(byte));
    
            var new_mrn_formatParameter = new_mrn_format != null ?
                new ObjectParameter("new_mrn_format", new_mrn_format) :
                new ObjectParameter("new_mrn_format", typeof(string));
    
            var auto_chan_attach_swParameter = auto_chan_attach_sw.HasValue ?
                new ObjectParameter("auto_chan_attach_sw", auto_chan_attach_sw) :
                new ObjectParameter("auto_chan_attach_sw", typeof(byte));
    
            var live_vitals_swParameter = live_vitals_sw.HasValue ?
                new ObjectParameter("live_vitals_sw", live_vitals_sw) :
                new ObjectParameter("live_vitals_sw", typeof(byte));
    
            var live_waveform_sizeParameter = live_waveform_size.HasValue ?
                new ObjectParameter("live_waveform_size", live_waveform_size) :
                new ObjectParameter("live_waveform_size", typeof(int));
    
            var decnet_nodeParameter = decnet_node.HasValue ?
                new ObjectParameter("decnet_node", decnet_node) :
                new ObjectParameter("decnet_node", typeof(int));
    
            var node_nameParameter = node_name != null ?
                new ObjectParameter("node_name", node_name) :
                new ObjectParameter("node_name", typeof(string));
    
            var nodes_excludedParameter = nodes_excluded != null ?
                new ObjectParameter("nodes_excluded", nodes_excluded) :
                new ObjectParameter("nodes_excluded", typeof(string));
    
            var nodes_includedParameter = nodes_included != null ?
                new ObjectParameter("nodes_included", nodes_included) :
                new ObjectParameter("nodes_included", typeof(string));
    
            var timemaster_swParameter = timemaster_sw.HasValue ?
                new ObjectParameter("timemaster_sw", timemaster_sw) :
                new ObjectParameter("timemaster_sw", typeof(byte));
    
            var waveform_sizeParameter = waveform_size.HasValue ?
                new ObjectParameter("waveform_size", waveform_size) :
                new ObjectParameter("waveform_size", typeof(int));
    
            var print_enabled_swParameter = print_enabled_sw.HasValue ?
                new ObjectParameter("print_enabled_sw", print_enabled_sw) :
                new ObjectParameter("print_enabled_sw", typeof(byte));
    
            var auto_record_alarm_swParameter = auto_record_alarm_sw.HasValue ?
                new ObjectParameter("auto_record_alarm_sw", auto_record_alarm_sw) :
                new ObjectParameter("auto_record_alarm_sw", typeof(byte));
    
            var collect_12_lead_swParameter = collect_12_lead_sw.HasValue ?
                new ObjectParameter("collect_12_lead_sw", collect_12_lead_sw) :
                new ObjectParameter("collect_12_lead_sw", typeof(byte));
    
            var print_auto_record_swParameter = print_auto_record_sw.HasValue ?
                new ObjectParameter("print_auto_record_sw", print_auto_record_sw) :
                new ObjectParameter("print_auto_record_sw", typeof(byte));
    
            var encryption_statusParameter = encryption_status.HasValue ?
                new ObjectParameter("encryption_status", encryption_status) :
                new ObjectParameter("encryption_status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddNewGatewaySettings", gateway_idParameter, gateway_typeParameter, network_idParameter, enable_swParameter, recv_appParameter, send_appParameter, organization_idParameter, send_sys_idParameter, results_usidParameter, sleep_secsParameter, debug_levelParameter, unit_org_idParameter, patient_id_typeParameter, auto_assign_id_swParameter, new_mrn_formatParameter, auto_chan_attach_swParameter, live_vitals_swParameter, live_waveform_sizeParameter, decnet_nodeParameter, node_nameParameter, nodes_excludedParameter, nodes_includedParameter, timemaster_swParameter, waveform_sizeParameter, print_enabled_swParameter, auto_record_alarm_swParameter, collect_12_lead_swParameter, print_auto_record_swParameter, encryption_statusParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> usp_CA_CheckETSession(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("usp_CA_CheckETSession", patient_idParameter);
        }
    
        public virtual ObjectResult<byte[]> usp_CA_Get12LeadPrintJobByPatientnPrintJobsIDs(Nullable<System.Guid> patient_id, Nullable<System.Guid> print_job_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var print_job_idParameter = print_job_id.HasValue ?
                new ObjectParameter("print_job_id", print_job_id) :
                new ObjectParameter("print_job_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("usp_CA_Get12LeadPrintJobByPatientnPrintJobsIDs", patient_idParameter, print_job_idParameter);
        }
    
        public virtual ObjectResult<byte[]> usp_CA_Get12LeadPrintJobByPatientnReportIDs(Nullable<System.Guid> patient_id, Nullable<System.Guid> report_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var report_idParameter = report_id.HasValue ?
                new ObjectParameter("report_id", report_id) :
                new ObjectParameter("report_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("usp_CA_Get12LeadPrintJobByPatientnReportIDs", patient_idParameter, report_idParameter);
        }
    
        public virtual ObjectResult<usp_CA_GetEtPrintJobs_Result> usp_CA_GetEtPrintJobs(Nullable<System.Guid> patientId, Nullable<System.DateTime> alarmStartMinUTC, Nullable<System.DateTime> alarmStartMaxUTC, string locale)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            var alarmStartMinUTCParameter = alarmStartMinUTC.HasValue ?
                new ObjectParameter("alarmStartMinUTC", alarmStartMinUTC) :
                new ObjectParameter("alarmStartMinUTC", typeof(System.DateTime));
    
            var alarmStartMaxUTCParameter = alarmStartMaxUTC.HasValue ?
                new ObjectParameter("alarmStartMaxUTC", alarmStartMaxUTC) :
                new ObjectParameter("alarmStartMaxUTC", typeof(System.DateTime));
    
            var localeParameter = locale != null ?
                new ObjectParameter("locale", locale) :
                new ObjectParameter("locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CA_GetEtPrintJobs_Result>("usp_CA_GetEtPrintJobs", patientIdParameter, alarmStartMinUTCParameter, alarmStartMaxUTCParameter, localeParameter);
        }
    
        public virtual ObjectResult<usp_CA_GetFactorySettings_Result> usp_CA_GetFactorySettings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CA_GetFactorySettings_Result>("usp_CA_GetFactorySettings");
        }
    
        public virtual ObjectResult<usp_CA_GetGlobalSettings_Result> usp_CA_GetGlobalSettings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CA_GetGlobalSettings_Result>("usp_CA_GetGlobalSettings");
        }
    
        public virtual int usp_CA_GetLegacyPatientWaveForms(Nullable<System.Guid> patient_id, Nullable<long> start_ft, Nullable<long> end_ft)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var start_ftParameter = start_ft.HasValue ?
                new ObjectParameter("start_ft", start_ft) :
                new ObjectParameter("start_ft", typeof(long));
    
            var end_ftParameter = end_ft.HasValue ?
                new ObjectParameter("end_ft", end_ft) :
                new ObjectParameter("end_ft", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CA_GetLegacyPatientWaveForms", patient_idParameter, start_ftParameter, end_ftParameter);
        }
    
        public virtual int usp_CA_GetPatientSettings(Nullable<System.Guid> patient_id, Nullable<System.Guid> unit_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var unit_idParameter = unit_id.HasValue ?
                new ObjectParameter("unit_id", unit_id) :
                new ObjectParameter("unit_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CA_GetPatientSettings", patient_idParameter, unit_idParameter);
        }
    
        public virtual int usp_CA_GetPatientWaveForms(Nullable<System.Guid> patient_id, Nullable<long> start_ft, Nullable<long> end_ft)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var start_ftParameter = start_ft.HasValue ?
                new ObjectParameter("start_ft", start_ft) :
                new ObjectParameter("start_ft", typeof(long));
    
            var end_ftParameter = end_ft.HasValue ?
                new ObjectParameter("end_ft", end_ft) :
                new ObjectParameter("end_ft", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CA_GetPatientWaveForms", patient_idParameter, start_ftParameter, end_ftParameter);
        }
    
        public virtual ObjectResult<usp_CA_GetPrintJobBitMapByJobIDnPageNo_Result> usp_CA_GetPrintJobBitMapByJobIDnPageNo(Nullable<System.Guid> print_job_id, Nullable<int> page_number)
        {
            var print_job_idParameter = print_job_id.HasValue ?
                new ObjectParameter("print_job_id", print_job_id) :
                new ObjectParameter("print_job_id", typeof(System.Guid));
    
            var page_numberParameter = page_number.HasValue ?
                new ObjectParameter("page_number", page_number) :
                new ObjectParameter("page_number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CA_GetPrintJobBitMapByJobIDnPageNo_Result>("usp_CA_GetPrintJobBitMapByJobIDnPageNo", print_job_idParameter, page_numberParameter);
        }
    
        public virtual ObjectResult<usp_CA_GetPrintJobByPatientnPrintJobIDsnPageNo_Result> usp_CA_GetPrintJobByPatientnPrintJobIDsnPageNo(Nullable<System.Guid> patient_id, Nullable<System.Guid> print_job_id, Nullable<int> page_number)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var print_job_idParameter = print_job_id.HasValue ?
                new ObjectParameter("print_job_id", print_job_id) :
                new ObjectParameter("print_job_id", typeof(System.Guid));
    
            var page_numberParameter = page_number.HasValue ?
                new ObjectParameter("page_number", page_number) :
                new ObjectParameter("page_number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CA_GetPrintJobByPatientnPrintJobIDsnPageNo_Result>("usp_CA_GetPrintJobByPatientnPrintJobIDsnPageNo", patient_idParameter, print_job_idParameter, page_numberParameter);
        }
    
        public virtual ObjectResult<usp_CA_GetPrintJobsListByPatientIDnStartnEndDt_Result> usp_CA_GetPrintJobsListByPatientIDnStartnEndDt(Nullable<System.Guid> patient_id, string startDt)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var startDtParameter = startDt != null ?
                new ObjectParameter("startDt", startDt) :
                new ObjectParameter("startDt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CA_GetPrintJobsListByPatientIDnStartnEndDt_Result>("usp_CA_GetPrintJobsListByPatientIDnStartnEndDt", patient_idParameter, startDtParameter);
        }
    
        public virtual ObjectResult<usp_CA_GetPrintJobWaveformData_Result> usp_CA_GetPrintJobWaveformData(Nullable<System.Guid> print_job_id, Nullable<int> page_number)
        {
            var print_job_idParameter = print_job_id.HasValue ?
                new ObjectParameter("print_job_id", print_job_id) :
                new ObjectParameter("print_job_id", typeof(System.Guid));
    
            var page_numberParameter = page_number.HasValue ?
                new ObjectParameter("page_number", page_number) :
                new ObjectParameter("page_number", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CA_GetPrintJobWaveformData_Result>("usp_CA_GetPrintJobWaveformData", print_job_idParameter, page_numberParameter);
        }
    
        public virtual ObjectResult<usp_CA_GetProcStatList_Result> usp_CA_GetProcStatList(string patientId, Nullable<int> timeTagType, Nullable<long> startTime, Nullable<long> endTime)
        {
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var timeTagTypeParameter = timeTagType.HasValue ?
                new ObjectParameter("TimeTagType", timeTagType) :
                new ObjectParameter("TimeTagType", typeof(int));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(long));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CA_GetProcStatList_Result>("usp_CA_GetProcStatList", patientIdParameter, timeTagTypeParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual int usp_CA_GetUnitSettings(Nullable<System.Guid> unit_id)
        {
            var unit_idParameter = unit_id.HasValue ?
                new ObjectParameter("unit_id", unit_id) :
                new ObjectParameter("unit_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CA_GetUnitSettings", unit_idParameter);
        }
    
        public virtual int usp_CA_SaveConfigurationSetting(Nullable<int> setting_type, Nullable<System.Guid> patient_id, Nullable<System.Guid> unit_id, string type_cd, string cfg_name, string cfg_value, string cfg_xml_value, Nullable<bool> global_type, string value_type)
        {
            var setting_typeParameter = setting_type.HasValue ?
                new ObjectParameter("setting_type", setting_type) :
                new ObjectParameter("setting_type", typeof(int));
    
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var unit_idParameter = unit_id.HasValue ?
                new ObjectParameter("unit_id", unit_id) :
                new ObjectParameter("unit_id", typeof(System.Guid));
    
            var type_cdParameter = type_cd != null ?
                new ObjectParameter("type_cd", type_cd) :
                new ObjectParameter("type_cd", typeof(string));
    
            var cfg_nameParameter = cfg_name != null ?
                new ObjectParameter("cfg_name", cfg_name) :
                new ObjectParameter("cfg_name", typeof(string));
    
            var cfg_valueParameter = cfg_value != null ?
                new ObjectParameter("cfg_value", cfg_value) :
                new ObjectParameter("cfg_value", typeof(string));
    
            var cfg_xml_valueParameter = cfg_xml_value != null ?
                new ObjectParameter("cfg_xml_value", cfg_xml_value) :
                new ObjectParameter("cfg_xml_value", typeof(string));
    
            var global_typeParameter = global_type.HasValue ?
                new ObjectParameter("global_type", global_type) :
                new ObjectParameter("global_type", typeof(bool));
    
            var value_typeParameter = value_type != null ?
                new ObjectParameter("value_type", value_type) :
                new ObjectParameter("value_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CA_SaveConfigurationSetting", setting_typeParameter, patient_idParameter, unit_idParameter, type_cdParameter, cfg_nameParameter, cfg_valueParameter, cfg_xml_valueParameter, global_typeParameter, value_typeParameter);
        }
    
        public virtual ObjectResult<usp_CEI_DL_GetLiveVitals_Result> usp_CEI_DL_GetLiveVitals()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CEI_DL_GetLiveVitals_Result>("usp_CEI_DL_GetLiveVitals");
        }
    
        public virtual ObjectResult<usp_CEI_GetAlarmTextAnd12SecWaveForm_Result> usp_CEI_GetAlarmTextAnd12SecWaveForm()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CEI_GetAlarmTextAnd12SecWaveForm_Result>("usp_CEI_GetAlarmTextAnd12SecWaveForm");
        }
    
        public virtual ObjectResult<usp_CEI_GetAlarmTextAnd6SecWaveForm_Result> usp_CEI_GetAlarmTextAnd6SecWaveForm()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CEI_GetAlarmTextAnd6SecWaveForm_Result>("usp_CEI_GetAlarmTextAnd6SecWaveForm");
        }
    
        public virtual ObjectResult<usp_CEI_GetAlarmTextOnly_Result> usp_CEI_GetAlarmTextOnly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CEI_GetAlarmTextOnly_Result>("usp_CEI_GetAlarmTextOnly");
        }
    
        public virtual ObjectResult<usp_CEI_GetAlarmWaveform_Result> usp_CEI_GetAlarmWaveform(Nullable<System.Guid> patientId, Nullable<System.Guid> channeltypeId, Nullable<System.DateTime> startDateTimeUTC, Nullable<System.DateTime> endDateTimeUTC)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            var channeltypeIdParameter = channeltypeId.HasValue ?
                new ObjectParameter("channeltypeId", channeltypeId) :
                new ObjectParameter("channeltypeId", typeof(System.Guid));
    
            var startDateTimeUTCParameter = startDateTimeUTC.HasValue ?
                new ObjectParameter("StartDateTimeUTC", startDateTimeUTC) :
                new ObjectParameter("StartDateTimeUTC", typeof(System.DateTime));
    
            var endDateTimeUTCParameter = endDateTimeUTC.HasValue ?
                new ObjectParameter("EndDateTimeUTC", endDateTimeUTC) :
                new ObjectParameter("EndDateTimeUTC", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CEI_GetAlarmWaveform_Result>("usp_CEI_GetAlarmWaveform", patientIdParameter, channeltypeIdParameter, startDateTimeUTCParameter, endDateTimeUTCParameter);
        }
    
        public virtual ObjectResult<usp_CEI_GetLatestAlarms_Result> usp_CEI_GetLatestAlarms(Nullable<System.DateTime> cutOffTimeUTC, string locale)
        {
            var cutOffTimeUTCParameter = cutOffTimeUTC.HasValue ?
                new ObjectParameter("CutOffTimeUTC", cutOffTimeUTC) :
                new ObjectParameter("CutOffTimeUTC", typeof(System.DateTime));
    
            var localeParameter = locale != null ?
                new ObjectParameter("locale", locale) :
                new ObjectParameter("locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CEI_GetLatestAlarms_Result>("usp_CEI_GetLatestAlarms", cutOffTimeUTCParameter, localeParameter);
        }
    
        public virtual ObjectResult<string> usp_CEI_GetLicense()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_CEI_GetLicense");
        }
    
        public virtual ObjectResult<string> usp_CEI_GetLicenseUnits()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_CEI_GetLicenseUnits");
        }
    
        public virtual ObjectResult<usp_CEI_GetQueryCode_Result> usp_CEI_GetQueryCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CEI_GetQueryCode_Result>("usp_CEI_GetQueryCode");
        }
    
        public virtual ObjectResult<usp_CEI_GetSettings_Result> usp_CEI_GetSettings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CEI_GetSettings_Result>("usp_CEI_GetSettings");
        }
    
        public virtual ObjectResult<usp_CEI_GetTwo6SecWaveSeperate_Result> usp_CEI_GetTwo6SecWaveSeperate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CEI_GetTwo6SecWaveSeperate_Result>("usp_CEI_GetTwo6SecWaveSeperate");
        }
    
        public virtual ObjectResult<usp_CEI_GetVitalSigns_Result> usp_CEI_GetVitalSigns()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CEI_GetVitalSigns_Result>("usp_CEI_GetVitalSigns");
        }
    
        public virtual int usp_CEI_InsertLog(Nullable<System.Guid> eventId, Nullable<System.Guid> patientId, string type, Nullable<System.DateTime> eventDt, Nullable<int> seqNum, string client, string description, Nullable<int> status)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(System.Guid));
    
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var eventDtParameter = eventDt.HasValue ?
                new ObjectParameter("eventDt", eventDt) :
                new ObjectParameter("eventDt", typeof(System.DateTime));
    
            var seqNumParameter = seqNum.HasValue ?
                new ObjectParameter("seqNum", seqNum) :
                new ObjectParameter("seqNum", typeof(int));
    
            var clientParameter = client != null ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CEI_InsertLog", eventIdParameter, patientIdParameter, typeParameter, eventDtParameter, seqNumParameter, clientParameter, descriptionParameter, statusParameter);
        }
    
        public virtual int usp_CEI_UpdateLog(Nullable<int> status, string description, Nullable<System.Guid> eventId, Nullable<int> seqNum, string client)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("eventId", eventId) :
                new ObjectParameter("eventId", typeof(System.Guid));
    
            var seqNumParameter = seqNum.HasValue ?
                new ObjectParameter("seqNum", seqNum) :
                new ObjectParameter("seqNum", typeof(int));
    
            var clientParameter = client != null ?
                new ObjectParameter("client", client) :
                new ObjectParameter("client", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CEI_UpdateLog", statusParameter, descriptionParameter, eventIdParameter, seqNumParameter, clientParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_CheckCodeUnique(string value, Nullable<System.Guid> orgID, Nullable<System.Guid> parentID)
        {
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            var orgIDParameter = orgID.HasValue ?
                new ObjectParameter("orgID", orgID) :
                new ObjectParameter("orgID", typeof(System.Guid));
    
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("parentID", parentID) :
                new ObjectParameter("parentID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_CheckCodeUnique", valueParameter, orgIDParameter, parentIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_CheckNewIDUnique(Nullable<int> value)
        {
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_CheckNewIDUnique", valueParameter);
        }
    
        public virtual int usp_Delete_OrganizationEntityByCategory(Nullable<System.Guid> organization_id, string category_Code)
        {
            var organization_idParameter = organization_id.HasValue ?
                new ObjectParameter("organization_id", organization_id) :
                new ObjectParameter("organization_id", typeof(System.Guid));
    
            var category_CodeParameter = category_Code != null ?
                new ObjectParameter("category_Code", category_Code) :
                new ObjectParameter("category_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Delete_OrganizationEntityByCategory", organization_idParameter, category_CodeParameter);
        }
    
        public virtual int usp_DeleteApplicationSettings(string applicationType, string instanceId, string key)
        {
            var applicationTypeParameter = applicationType != null ?
                new ObjectParameter("applicationType", applicationType) :
                new ObjectParameter("applicationType", typeof(string));
    
            var instanceIdParameter = instanceId != null ?
                new ObjectParameter("instanceId", instanceId) :
                new ObjectParameter("instanceId", typeof(string));
    
            var keyParameter = key != null ?
                new ObjectParameter("key", key) :
                new ObjectParameter("key", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteApplicationSettings", applicationTypeParameter, instanceIdParameter, keyParameter);
        }
    
        public virtual int usp_DeleteFacilityWithChildren()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteFacilityWithChildren");
        }
    
        public virtual int usp_DeleteGatewayDetails(Nullable<System.Guid> gatewayID)
        {
            var gatewayIDParameter = gatewayID.HasValue ?
                new ObjectParameter("gatewayID", gatewayID) :
                new ObjectParameter("gatewayID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteGatewayDetails", gatewayIDParameter);
        }
    
        public virtual int usp_DeleteGatewayServerDetails(Nullable<System.Guid> gatewayID)
        {
            var gatewayIDParameter = gatewayID.HasValue ?
                new ObjectParameter("gatewayID", gatewayID) :
                new ObjectParameter("gatewayID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteGatewayServerDetails", gatewayIDParameter);
        }
    
        public virtual int usp_DeleteMiscCode(Nullable<int> code_id)
        {
            var code_idParameter = code_id.HasValue ?
                new ObjectParameter("code_id", code_id) :
                new ObjectParameter("code_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteMiscCode", code_idParameter);
        }
    
        public virtual int usp_DeleteMonitor(Nullable<System.Guid> monitor_id)
        {
            var monitor_idParameter = monitor_id.HasValue ?
                new ObjectParameter("monitor_id", monitor_id) :
                new ObjectParameter("monitor_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteMonitor", monitor_idParameter);
        }
    
        public virtual int usp_DeleteSendSys(Nullable<System.Guid> sys_id)
        {
            var sys_idParameter = sys_id.HasValue ?
                new ObjectParameter("sys_id", sys_id) :
                new ObjectParameter("sys_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteSendSys", sys_idParameter);
        }
    
        public virtual int usp_DL_ETR_AddGatewaySettings(Nullable<System.Guid> gateway_id, string gateway_type, string farm_name, string network, Nullable<byte> et_do_not_store_waveforms, string include_trans_chs, string exclude_trans_chs, Nullable<byte> et_print_alarms)
        {
            var gateway_idParameter = gateway_id.HasValue ?
                new ObjectParameter("gateway_id", gateway_id) :
                new ObjectParameter("gateway_id", typeof(System.Guid));
    
            var gateway_typeParameter = gateway_type != null ?
                new ObjectParameter("gateway_type", gateway_type) :
                new ObjectParameter("gateway_type", typeof(string));
    
            var farm_nameParameter = farm_name != null ?
                new ObjectParameter("farm_name", farm_name) :
                new ObjectParameter("farm_name", typeof(string));
    
            var networkParameter = network != null ?
                new ObjectParameter("network", network) :
                new ObjectParameter("network", typeof(string));
    
            var et_do_not_store_waveformsParameter = et_do_not_store_waveforms.HasValue ?
                new ObjectParameter("et_do_not_store_waveforms", et_do_not_store_waveforms) :
                new ObjectParameter("et_do_not_store_waveforms", typeof(byte));
    
            var include_trans_chsParameter = include_trans_chs != null ?
                new ObjectParameter("include_trans_chs", include_trans_chs) :
                new ObjectParameter("include_trans_chs", typeof(string));
    
            var exclude_trans_chsParameter = exclude_trans_chs != null ?
                new ObjectParameter("exclude_trans_chs", exclude_trans_chs) :
                new ObjectParameter("exclude_trans_chs", typeof(string));
    
            var et_print_alarmsParameter = et_print_alarms.HasValue ?
                new ObjectParameter("et_print_alarms", et_print_alarms) :
                new ObjectParameter("et_print_alarms", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DL_ETR_AddGatewaySettings", gateway_idParameter, gateway_typeParameter, farm_nameParameter, networkParameter, et_do_not_store_waveformsParameter, include_trans_chsParameter, exclude_trans_chsParameter, et_print_alarmsParameter);
        }
    
        public virtual int usp_DL_ETR_DeleteGatewayDetails(Nullable<System.Guid> gatewayID)
        {
            var gatewayIDParameter = gatewayID.HasValue ?
                new ObjectParameter("gatewayID", gatewayID) :
                new ObjectParameter("gatewayID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DL_ETR_DeleteGatewayDetails", gatewayIDParameter);
        }
    
        public virtual ObjectResult<usp_DL_ETR_GetGatewaySettings_Result> usp_DL_ETR_GetGatewaySettings(string gatewayType)
        {
            var gatewayTypeParameter = gatewayType != null ?
                new ObjectParameter("GatewayType", gatewayType) :
                new ObjectParameter("GatewayType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DL_ETR_GetGatewaySettings_Result>("usp_DL_ETR_GetGatewaySettings", gatewayTypeParameter);
        }
    
        public virtual int usp_DL_ETR_UpdateGatewaySettings(string gateway_type, string farm_name, string network, Nullable<byte> et_do_not_store_waveforms, string include_trans_chs, string exclude_trans_chs, Nullable<byte> et_print_alarms, Nullable<System.Guid> gateway_id)
        {
            var gateway_typeParameter = gateway_type != null ?
                new ObjectParameter("gateway_type", gateway_type) :
                new ObjectParameter("gateway_type", typeof(string));
    
            var farm_nameParameter = farm_name != null ?
                new ObjectParameter("farm_name", farm_name) :
                new ObjectParameter("farm_name", typeof(string));
    
            var networkParameter = network != null ?
                new ObjectParameter("network", network) :
                new ObjectParameter("network", typeof(string));
    
            var et_do_not_store_waveformsParameter = et_do_not_store_waveforms.HasValue ?
                new ObjectParameter("et_do_not_store_waveforms", et_do_not_store_waveforms) :
                new ObjectParameter("et_do_not_store_waveforms", typeof(byte));
    
            var include_trans_chsParameter = include_trans_chs != null ?
                new ObjectParameter("include_trans_chs", include_trans_chs) :
                new ObjectParameter("include_trans_chs", typeof(string));
    
            var exclude_trans_chsParameter = exclude_trans_chs != null ?
                new ObjectParameter("exclude_trans_chs", exclude_trans_chs) :
                new ObjectParameter("exclude_trans_chs", typeof(string));
    
            var et_print_alarmsParameter = et_print_alarms.HasValue ?
                new ObjectParameter("et_print_alarms", et_print_alarms) :
                new ObjectParameter("et_print_alarms", typeof(byte));
    
            var gateway_idParameter = gateway_id.HasValue ?
                new ObjectParameter("gateway_id", gateway_id) :
                new ObjectParameter("gateway_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DL_ETR_UpdateGatewaySettings", gateway_typeParameter, farm_nameParameter, networkParameter, et_do_not_store_waveformsParameter, include_trans_chsParameter, exclude_trans_chsParameter, et_print_alarmsParameter, gateway_idParameter);
        }
    
        public virtual int usp_DL_UV_AddGatewaySettings(Nullable<System.Guid> gateway_id, string gateway_type, string network_name, string network_id, string node_name, string node_id, Nullable<System.Guid> uv_organization_id, Nullable<System.Guid> uv_unit_id, string include_nodes, string exclude_nodes, Nullable<byte> uv_do_not_store_waveforms, Nullable<byte> print_requests, Nullable<byte> make_time_master, Nullable<byte> auto_assign_id, string new_mrn_format, Nullable<byte> uv_print_alarms, Nullable<int> debug_level)
        {
            var gateway_idParameter = gateway_id.HasValue ?
                new ObjectParameter("gateway_id", gateway_id) :
                new ObjectParameter("gateway_id", typeof(System.Guid));
    
            var gateway_typeParameter = gateway_type != null ?
                new ObjectParameter("gateway_type", gateway_type) :
                new ObjectParameter("gateway_type", typeof(string));
    
            var network_nameParameter = network_name != null ?
                new ObjectParameter("network_name", network_name) :
                new ObjectParameter("network_name", typeof(string));
    
            var network_idParameter = network_id != null ?
                new ObjectParameter("network_id", network_id) :
                new ObjectParameter("network_id", typeof(string));
    
            var node_nameParameter = node_name != null ?
                new ObjectParameter("node_name", node_name) :
                new ObjectParameter("node_name", typeof(string));
    
            var node_idParameter = node_id != null ?
                new ObjectParameter("node_id", node_id) :
                new ObjectParameter("node_id", typeof(string));
    
            var uv_organization_idParameter = uv_organization_id.HasValue ?
                new ObjectParameter("uv_organization_id", uv_organization_id) :
                new ObjectParameter("uv_organization_id", typeof(System.Guid));
    
            var uv_unit_idParameter = uv_unit_id.HasValue ?
                new ObjectParameter("uv_unit_id", uv_unit_id) :
                new ObjectParameter("uv_unit_id", typeof(System.Guid));
    
            var include_nodesParameter = include_nodes != null ?
                new ObjectParameter("include_nodes", include_nodes) :
                new ObjectParameter("include_nodes", typeof(string));
    
            var exclude_nodesParameter = exclude_nodes != null ?
                new ObjectParameter("exclude_nodes", exclude_nodes) :
                new ObjectParameter("exclude_nodes", typeof(string));
    
            var uv_do_not_store_waveformsParameter = uv_do_not_store_waveforms.HasValue ?
                new ObjectParameter("uv_do_not_store_waveforms", uv_do_not_store_waveforms) :
                new ObjectParameter("uv_do_not_store_waveforms", typeof(byte));
    
            var print_requestsParameter = print_requests.HasValue ?
                new ObjectParameter("print_requests", print_requests) :
                new ObjectParameter("print_requests", typeof(byte));
    
            var make_time_masterParameter = make_time_master.HasValue ?
                new ObjectParameter("make_time_master", make_time_master) :
                new ObjectParameter("make_time_master", typeof(byte));
    
            var auto_assign_idParameter = auto_assign_id.HasValue ?
                new ObjectParameter("auto_assign_id", auto_assign_id) :
                new ObjectParameter("auto_assign_id", typeof(byte));
    
            var new_mrn_formatParameter = new_mrn_format != null ?
                new ObjectParameter("new_mrn_format", new_mrn_format) :
                new ObjectParameter("new_mrn_format", typeof(string));
    
            var uv_print_alarmsParameter = uv_print_alarms.HasValue ?
                new ObjectParameter("uv_print_alarms", uv_print_alarms) :
                new ObjectParameter("uv_print_alarms", typeof(byte));
    
            var debug_levelParameter = debug_level.HasValue ?
                new ObjectParameter("debug_level", debug_level) :
                new ObjectParameter("debug_level", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DL_UV_AddGatewaySettings", gateway_idParameter, gateway_typeParameter, network_nameParameter, network_idParameter, node_nameParameter, node_idParameter, uv_organization_idParameter, uv_unit_idParameter, include_nodesParameter, exclude_nodesParameter, uv_do_not_store_waveformsParameter, print_requestsParameter, make_time_masterParameter, auto_assign_idParameter, new_mrn_formatParameter, uv_print_alarmsParameter, debug_levelParameter);
        }
    
        public virtual int usp_DL_UV_DeleteGatewayDetails(Nullable<System.Guid> gatewayID)
        {
            var gatewayIDParameter = gatewayID.HasValue ?
                new ObjectParameter("gatewayID", gatewayID) :
                new ObjectParameter("gatewayID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DL_UV_DeleteGatewayDetails", gatewayIDParameter);
        }
    
        public virtual ObjectResult<usp_DL_UV_GetGatewaySettings_Result> usp_DL_UV_GetGatewaySettings(string gatewayType)
        {
            var gatewayTypeParameter = gatewayType != null ?
                new ObjectParameter("GatewayType", gatewayType) :
                new ObjectParameter("GatewayType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DL_UV_GetGatewaySettings_Result>("usp_DL_UV_GetGatewaySettings", gatewayTypeParameter);
        }
    
        public virtual int usp_DL_UV_UpdateGatewaySettings(string gateway_type, string network_name, string network_id, string node_name, string node_id, Nullable<System.Guid> uv_organization_id, Nullable<System.Guid> uv_unit_id, string include_nodes, string exclude_nodes, Nullable<byte> uv_do_not_store_waveforms, Nullable<byte> print_requests, Nullable<byte> make_time_master, Nullable<byte> auto_assign_id, string new_mrn_format, Nullable<byte> uv_print_alarms, Nullable<int> debug_level, Nullable<System.Guid> gateway_id)
        {
            var gateway_typeParameter = gateway_type != null ?
                new ObjectParameter("gateway_type", gateway_type) :
                new ObjectParameter("gateway_type", typeof(string));
    
            var network_nameParameter = network_name != null ?
                new ObjectParameter("network_name", network_name) :
                new ObjectParameter("network_name", typeof(string));
    
            var network_idParameter = network_id != null ?
                new ObjectParameter("network_id", network_id) :
                new ObjectParameter("network_id", typeof(string));
    
            var node_nameParameter = node_name != null ?
                new ObjectParameter("node_name", node_name) :
                new ObjectParameter("node_name", typeof(string));
    
            var node_idParameter = node_id != null ?
                new ObjectParameter("node_id", node_id) :
                new ObjectParameter("node_id", typeof(string));
    
            var uv_organization_idParameter = uv_organization_id.HasValue ?
                new ObjectParameter("uv_organization_id", uv_organization_id) :
                new ObjectParameter("uv_organization_id", typeof(System.Guid));
    
            var uv_unit_idParameter = uv_unit_id.HasValue ?
                new ObjectParameter("uv_unit_id", uv_unit_id) :
                new ObjectParameter("uv_unit_id", typeof(System.Guid));
    
            var include_nodesParameter = include_nodes != null ?
                new ObjectParameter("include_nodes", include_nodes) :
                new ObjectParameter("include_nodes", typeof(string));
    
            var exclude_nodesParameter = exclude_nodes != null ?
                new ObjectParameter("exclude_nodes", exclude_nodes) :
                new ObjectParameter("exclude_nodes", typeof(string));
    
            var uv_do_not_store_waveformsParameter = uv_do_not_store_waveforms.HasValue ?
                new ObjectParameter("uv_do_not_store_waveforms", uv_do_not_store_waveforms) :
                new ObjectParameter("uv_do_not_store_waveforms", typeof(byte));
    
            var print_requestsParameter = print_requests.HasValue ?
                new ObjectParameter("print_requests", print_requests) :
                new ObjectParameter("print_requests", typeof(byte));
    
            var make_time_masterParameter = make_time_master.HasValue ?
                new ObjectParameter("make_time_master", make_time_master) :
                new ObjectParameter("make_time_master", typeof(byte));
    
            var auto_assign_idParameter = auto_assign_id.HasValue ?
                new ObjectParameter("auto_assign_id", auto_assign_id) :
                new ObjectParameter("auto_assign_id", typeof(byte));
    
            var new_mrn_formatParameter = new_mrn_format != null ?
                new ObjectParameter("new_mrn_format", new_mrn_format) :
                new ObjectParameter("new_mrn_format", typeof(string));
    
            var uv_print_alarmsParameter = uv_print_alarms.HasValue ?
                new ObjectParameter("uv_print_alarms", uv_print_alarms) :
                new ObjectParameter("uv_print_alarms", typeof(byte));
    
            var debug_levelParameter = debug_level.HasValue ?
                new ObjectParameter("debug_level", debug_level) :
                new ObjectParameter("debug_level", typeof(int));
    
            var gateway_idParameter = gateway_id.HasValue ?
                new ObjectParameter("gateway_id", gateway_id) :
                new ObjectParameter("gateway_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DL_UV_UpdateGatewaySettings", gateway_typeParameter, network_nameParameter, network_idParameter, node_nameParameter, node_idParameter, uv_organization_idParameter, uv_unit_idParameter, include_nodesParameter, exclude_nodesParameter, uv_do_not_store_waveformsParameter, print_requestsParameter, make_time_masterParameter, auto_assign_idParameter, new_mrn_formatParameter, uv_print_alarmsParameter, debug_levelParameter, gateway_idParameter);
        }
    
        public virtual int usp_DM3_AddMonitor(string monitorId, string unit_Org_Id, string network_Id, string node_Id, string monitor_Type_cd, string monitor_Name, string subnet)
        {
            var monitorIdParameter = monitorId != null ?
                new ObjectParameter("MonitorId", monitorId) :
                new ObjectParameter("MonitorId", typeof(string));
    
            var unit_Org_IdParameter = unit_Org_Id != null ?
                new ObjectParameter("Unit_Org_Id", unit_Org_Id) :
                new ObjectParameter("Unit_Org_Id", typeof(string));
    
            var network_IdParameter = network_Id != null ?
                new ObjectParameter("Network_Id", network_Id) :
                new ObjectParameter("Network_Id", typeof(string));
    
            var node_IdParameter = node_Id != null ?
                new ObjectParameter("Node_Id", node_Id) :
                new ObjectParameter("Node_Id", typeof(string));
    
            var monitor_Type_cdParameter = monitor_Type_cd != null ?
                new ObjectParameter("Monitor_Type_cd", monitor_Type_cd) :
                new ObjectParameter("Monitor_Type_cd", typeof(string));
    
            var monitor_NameParameter = monitor_Name != null ?
                new ObjectParameter("Monitor_Name", monitor_Name) :
                new ObjectParameter("Monitor_Name", typeof(string));
    
            var subnetParameter = subnet != null ?
                new ObjectParameter("Subnet", subnet) :
                new ObjectParameter("Subnet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DM3_AddMonitor", monitorIdParameter, unit_Org_IdParameter, network_IdParameter, node_IdParameter, monitor_Type_cdParameter, monitor_NameParameter, subnetParameter);
        }
    
        public virtual int usp_DM3_AddorUpdateVitals(string patientGUID, string monitor_Id, string collect_Date, string vital_Value, string vital_Time)
        {
            var patientGUIDParameter = patientGUID != null ?
                new ObjectParameter("PatientGUID", patientGUID) :
                new ObjectParameter("PatientGUID", typeof(string));
    
            var monitor_IdParameter = monitor_Id != null ?
                new ObjectParameter("Monitor_Id", monitor_Id) :
                new ObjectParameter("Monitor_Id", typeof(string));
    
            var collect_DateParameter = collect_Date != null ?
                new ObjectParameter("Collect_Date", collect_Date) :
                new ObjectParameter("Collect_Date", typeof(string));
    
            var vital_ValueParameter = vital_Value != null ?
                new ObjectParameter("Vital_Value", vital_Value) :
                new ObjectParameter("Vital_Value", typeof(string));
    
            var vital_TimeParameter = vital_Time != null ?
                new ObjectParameter("Vital_Time", vital_Time) :
                new ObjectParameter("Vital_Time", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DM3_AddorUpdateVitals", patientGUIDParameter, monitor_IdParameter, collect_DateParameter, vital_ValueParameter, vital_TimeParameter);
        }
    
        public virtual int usp_DM3_AddPatient(string patientGUID, string dOB, string height, string weight, string bSA)
        {
            var patientGUIDParameter = patientGUID != null ?
                new ObjectParameter("PatientGUID", patientGUID) :
                new ObjectParameter("PatientGUID", typeof(string));
    
            var dOBParameter = dOB != null ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(string));
    
            var heightParameter = height != null ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(string));
    
            var weightParameter = weight != null ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(string));
    
            var bSAParameter = bSA != null ?
                new ObjectParameter("BSA", bSA) :
                new ObjectParameter("BSA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DM3_AddPatient", patientGUIDParameter, dOBParameter, heightParameter, weightParameter, bSAParameter);
        }
    
        public virtual int usp_DM3_AddPatientMonitor(string patientMonitorGUID, string patientGUID, string monitorID, string connectDate, string encounterIDGUID)
        {
            var patientMonitorGUIDParameter = patientMonitorGUID != null ?
                new ObjectParameter("PatientMonitorGUID", patientMonitorGUID) :
                new ObjectParameter("PatientMonitorGUID", typeof(string));
    
            var patientGUIDParameter = patientGUID != null ?
                new ObjectParameter("PatientGUID", patientGUID) :
                new ObjectParameter("PatientGUID", typeof(string));
    
            var monitorIDParameter = monitorID != null ?
                new ObjectParameter("MonitorID", monitorID) :
                new ObjectParameter("MonitorID", typeof(string));
    
            var connectDateParameter = connectDate != null ?
                new ObjectParameter("ConnectDate", connectDate) :
                new ObjectParameter("ConnectDate", typeof(string));
    
            var encounterIDGUIDParameter = encounterIDGUID != null ?
                new ObjectParameter("EncounterIDGUID", encounterIDGUID) :
                new ObjectParameter("EncounterIDGUID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DM3_AddPatientMonitor", patientMonitorGUIDParameter, patientGUIDParameter, monitorIDParameter, connectDateParameter, encounterIDGUIDParameter);
        }
    
        public virtual int usp_DM3_AddPatientOrder(string orderIDGUID, string patientGUID, string result_usid, string encounterGUID, string mainOrgGUID, string sendSysID, string guid15)
        {
            var orderIDGUIDParameter = orderIDGUID != null ?
                new ObjectParameter("OrderIDGUID", orderIDGUID) :
                new ObjectParameter("OrderIDGUID", typeof(string));
    
            var patientGUIDParameter = patientGUID != null ?
                new ObjectParameter("PatientGUID", patientGUID) :
                new ObjectParameter("PatientGUID", typeof(string));
    
            var result_usidParameter = result_usid != null ?
                new ObjectParameter("Result_usid", result_usid) :
                new ObjectParameter("Result_usid", typeof(string));
    
            var encounterGUIDParameter = encounterGUID != null ?
                new ObjectParameter("EncounterGUID", encounterGUID) :
                new ObjectParameter("EncounterGUID", typeof(string));
    
            var mainOrgGUIDParameter = mainOrgGUID != null ?
                new ObjectParameter("MainOrgGUID", mainOrgGUID) :
                new ObjectParameter("MainOrgGUID", typeof(string));
    
            var sendSysIDParameter = sendSysID != null ?
                new ObjectParameter("SendSysID", sendSysID) :
                new ObjectParameter("SendSysID", typeof(string));
    
            var guid15Parameter = guid15 != null ?
                new ObjectParameter("Guid15", guid15) :
                new ObjectParameter("Guid15", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DM3_AddPatientOrder", orderIDGUIDParameter, patientGUIDParameter, result_usidParameter, encounterGUIDParameter, mainOrgGUIDParameter, sendSysIDParameter, guid15Parameter);
        }
    
        public virtual int usp_DM3_AddPerson(string patientGUID, string first_Name, string middle_Name, string last_Name)
        {
            var patientGUIDParameter = patientGUID != null ?
                new ObjectParameter("PatientGUID", patientGUID) :
                new ObjectParameter("PatientGUID", typeof(string));
    
            var first_NameParameter = first_Name != null ?
                new ObjectParameter("First_Name", first_Name) :
                new ObjectParameter("First_Name", typeof(string));
    
            var middle_NameParameter = middle_Name != null ?
                new ObjectParameter("Middle_Name", middle_Name) :
                new ObjectParameter("Middle_Name", typeof(string));
    
            var last_NameParameter = last_Name != null ?
                new ObjectParameter("Last_Name", last_Name) :
                new ObjectParameter("Last_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DM3_AddPerson", patientGUIDParameter, first_NameParameter, middle_NameParameter, last_NameParameter);
        }
    
        public virtual int usp_DM3_AddResults(string resultGUID, string patientGUID, string orderIDGUID, string result_usid, string test_cid, string bTime, string bFileTime, string resultVal)
        {
            var resultGUIDParameter = resultGUID != null ?
                new ObjectParameter("ResultGUID", resultGUID) :
                new ObjectParameter("ResultGUID", typeof(string));
    
            var patientGUIDParameter = patientGUID != null ?
                new ObjectParameter("PatientGUID", patientGUID) :
                new ObjectParameter("PatientGUID", typeof(string));
    
            var orderIDGUIDParameter = orderIDGUID != null ?
                new ObjectParameter("OrderIDGUID", orderIDGUID) :
                new ObjectParameter("OrderIDGUID", typeof(string));
    
            var result_usidParameter = result_usid != null ?
                new ObjectParameter("Result_usid", result_usid) :
                new ObjectParameter("Result_usid", typeof(string));
    
            var test_cidParameter = test_cid != null ?
                new ObjectParameter("Test_cid", test_cid) :
                new ObjectParameter("Test_cid", typeof(string));
    
            var bTimeParameter = bTime != null ?
                new ObjectParameter("BTime", bTime) :
                new ObjectParameter("BTime", typeof(string));
    
            var bFileTimeParameter = bFileTime != null ?
                new ObjectParameter("BFileTime", bFileTime) :
                new ObjectParameter("BFileTime", typeof(string));
    
            var resultValParameter = resultVal != null ?
                new ObjectParameter("ResultVal", resultVal) :
                new ObjectParameter("ResultVal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DM3_AddResults", resultGUIDParameter, patientGUIDParameter, orderIDGUIDParameter, result_usidParameter, test_cidParameter, bTimeParameter, bFileTimeParameter, resultValParameter);
        }
    
        public virtual int usp_DM3_DeleteVitals(string cOLLECTDATE)
        {
            var cOLLECTDATEParameter = cOLLECTDATE != null ?
                new ObjectParameter("COLLECTDATE", cOLLECTDATE) :
                new ObjectParameter("COLLECTDATE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DM3_DeleteVitals", cOLLECTDATEParameter);
        }
    
        public virtual int usp_DM3_DischargePatient(string dischargeDate, string encounterIDGUID, string monitorID)
        {
            var dischargeDateParameter = dischargeDate != null ?
                new ObjectParameter("DischargeDate", dischargeDate) :
                new ObjectParameter("DischargeDate", typeof(string));
    
            var encounterIDGUIDParameter = encounterIDGUID != null ?
                new ObjectParameter("EncounterIDGUID", encounterIDGUID) :
                new ObjectParameter("EncounterIDGUID", typeof(string));
    
            var monitorIDParameter = monitorID != null ?
                new ObjectParameter("MonitorID", monitorID) :
                new ObjectParameter("MonitorID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DM3_DischargePatient", dischargeDateParameter, encounterIDGUIDParameter, monitorIDParameter);
        }
    
        public virtual ObjectResult<usp_DM3_GetChannelType_Result> usp_DM3_GetChannelType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DM3_GetChannelType_Result>("usp_DM3_GetChannelType");
        }
    
        public virtual ObjectResult<usp_DM3_GetCodeID_Result> usp_DM3_GetCodeID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DM3_GetCodeID_Result>("usp_DM3_GetCodeID");
        }
    
        public virtual ObjectResult<usp_DM3_GetGatewayDetails_Result> usp_DM3_GetGatewayDetails(string networkID)
        {
            var networkIDParameter = networkID != null ?
                new ObjectParameter("NetworkID", networkID) :
                new ObjectParameter("NetworkID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DM3_GetGatewayDetails_Result>("usp_DM3_GetGatewayDetails", networkIDParameter);
        }
    
        public virtual ObjectResult<usp_DM3_GetMonitorEncounter_Result> usp_DM3_GetMonitorEncounter(string patientGUID, string connectionDate)
        {
            var patientGUIDParameter = patientGUID != null ?
                new ObjectParameter("PatientGUID", patientGUID) :
                new ObjectParameter("PatientGUID", typeof(string));
    
            var connectionDateParameter = connectionDate != null ?
                new ObjectParameter("ConnectionDate", connectionDate) :
                new ObjectParameter("ConnectionDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DM3_GetMonitorEncounter_Result>("usp_DM3_GetMonitorEncounter", patientGUIDParameter, connectionDateParameter);
        }
    
        public virtual ObjectResult<usp_DM3_GetPatientInformation_Result> usp_DM3_GetPatientInformation(string patientId, string orgId)
        {
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var orgIdParameter = orgId != null ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DM3_GetPatientInformation_Result>("usp_DM3_GetPatientInformation", patientIdParameter, orgIdParameter);
        }
    
        public virtual ObjectResult<usp_DM3_GetPatientMonitor_Result> usp_DM3_GetPatientMonitor(string monitorID, string patientGUID, string connectdate)
        {
            var monitorIDParameter = monitorID != null ?
                new ObjectParameter("MonitorID", monitorID) :
                new ObjectParameter("MonitorID", typeof(string));
    
            var patientGUIDParameter = patientGUID != null ?
                new ObjectParameter("PatientGUID", patientGUID) :
                new ObjectParameter("PatientGUID", typeof(string));
    
            var connectdateParameter = connectdate != null ?
                new ObjectParameter("Connectdate", connectdate) :
                new ObjectParameter("Connectdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DM3_GetPatientMonitor_Result>("usp_DM3_GetPatientMonitor", monitorIDParameter, patientGUIDParameter, connectdateParameter);
        }
    
        public virtual ObjectResult<usp_DM3_GetPatientOrder_Result> usp_DM3_GetPatientOrder(string encounterGUID, string result_USID)
        {
            var encounterGUIDParameter = encounterGUID != null ?
                new ObjectParameter("EncounterGUID", encounterGUID) :
                new ObjectParameter("EncounterGUID", typeof(string));
    
            var result_USIDParameter = result_USID != null ?
                new ObjectParameter("Result_USID", result_USID) :
                new ObjectParameter("Result_USID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DM3_GetPatientOrder_Result>("usp_DM3_GetPatientOrder", encounterGUIDParameter, result_USIDParameter);
        }
    
        public virtual ObjectResult<usp_DM3_GetproductAccessDetails_Result> usp_DM3_GetproductAccessDetails(string product)
        {
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_DM3_GetproductAccessDetails_Result>("usp_DM3_GetproductAccessDetails", productParameter);
        }
    
        public virtual int usp_DM3_UpdateActive_sw_EncounterId_in_PatientMonitor(string monitorID, string patientGUID, string connectdate, string encounterIDGUID)
        {
            var monitorIDParameter = monitorID != null ?
                new ObjectParameter("MonitorID", monitorID) :
                new ObjectParameter("MonitorID", typeof(string));
    
            var patientGUIDParameter = patientGUID != null ?
                new ObjectParameter("PatientGUID", patientGUID) :
                new ObjectParameter("PatientGUID", typeof(string));
    
            var connectdateParameter = connectdate != null ?
                new ObjectParameter("Connectdate", connectdate) :
                new ObjectParameter("Connectdate", typeof(string));
    
            var encounterIDGUIDParameter = encounterIDGUID != null ?
                new ObjectParameter("EncounterIDGUID", encounterIDGUID) :
                new ObjectParameter("EncounterIDGUID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DM3_UpdateActive_sw_EncounterId_in_PatientMonitor", monitorIDParameter, patientGUIDParameter, connectdateParameter, encounterIDGUIDParameter);
        }
    
        public virtual int usp_DM3_UpdateActive_sw_in_PatientMonitor(string monitorID)
        {
            var monitorIDParameter = monitorID != null ?
                new ObjectParameter("MonitorID", monitorID) :
                new ObjectParameter("MonitorID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DM3_UpdateActive_sw_in_PatientMonitor", monitorIDParameter);
        }
    
        public virtual int usp_DM3_UpdateDateInEncounter(string monitorId, string encounterId)
        {
            var monitorIdParameter = monitorId != null ?
                new ObjectParameter("MonitorId", monitorId) :
                new ObjectParameter("MonitorId", typeof(string));
    
            var encounterIdParameter = encounterId != null ?
                new ObjectParameter("EncounterId", encounterId) :
                new ObjectParameter("EncounterId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DM3_UpdateDateInEncounter", monitorIdParameter, encounterIdParameter);
        }
    
        public virtual int usp_DM3_UpdateLastPoleDate_ResultDate_in_patientmonitor(string last_Poll_Date, string patientGUID, string patientMonitorGUID)
        {
            var last_Poll_DateParameter = last_Poll_Date != null ?
                new ObjectParameter("Last_Poll_Date", last_Poll_Date) :
                new ObjectParameter("Last_Poll_Date", typeof(string));
    
            var patientGUIDParameter = patientGUID != null ?
                new ObjectParameter("PatientGUID", patientGUID) :
                new ObjectParameter("PatientGUID", typeof(string));
    
            var patientMonitorGUIDParameter = patientMonitorGUID != null ?
                new ObjectParameter("PatientMonitorGUID", patientMonitorGUID) :
                new ObjectParameter("PatientMonitorGUID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DM3_UpdateLastPoleDate_ResultDate_in_patientmonitor", last_Poll_DateParameter, patientGUIDParameter, patientMonitorGUIDParameter);
        }
    
        public virtual int usp_DM3_UpdateMrnMap(string patientGUID, string mainOrgID)
        {
            var patientGUIDParameter = patientGUID != null ?
                new ObjectParameter("PatientGUID", patientGUID) :
                new ObjectParameter("PatientGUID", typeof(string));
    
            var mainOrgIDParameter = mainOrgID != null ?
                new ObjectParameter("MainOrgID", mainOrgID) :
                new ObjectParameter("MainOrgID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DM3_UpdateMrnMap", patientGUIDParameter, mainOrgIDParameter);
        }
    
        public virtual int usp_DM3_UpdatePerson(string lastName, string firstName, string middleName, string constLastName, string constFirstName, string constMiddleName, string patientGUID, string dOB, string height, string weight, string bSA)
        {
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var constLastNameParameter = constLastName != null ?
                new ObjectParameter("ConstLastName", constLastName) :
                new ObjectParameter("ConstLastName", typeof(string));
    
            var constFirstNameParameter = constFirstName != null ?
                new ObjectParameter("ConstFirstName", constFirstName) :
                new ObjectParameter("ConstFirstName", typeof(string));
    
            var constMiddleNameParameter = constMiddleName != null ?
                new ObjectParameter("ConstMiddleName", constMiddleName) :
                new ObjectParameter("ConstMiddleName", typeof(string));
    
            var patientGUIDParameter = patientGUID != null ?
                new ObjectParameter("PatientGUID", patientGUID) :
                new ObjectParameter("PatientGUID", typeof(string));
    
            var dOBParameter = dOB != null ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(string));
    
            var heightParameter = height != null ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(string));
    
            var weightParameter = weight != null ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(string));
    
            var bSAParameter = bSA != null ?
                new ObjectParameter("BSA", bSA) :
                new ObjectParameter("BSA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DM3_UpdatePerson", lastNameParameter, firstNameParameter, middleNameParameter, constLastNameParameter, constFirstNameParameter, constMiddleNameParameter, patientGUIDParameter, dOBParameter, heightParameter, weightParameter, bSAParameter);
        }
    
        public virtual int usp_GatewayServerDetails(Nullable<System.Guid> gatewayID, string serverName, Nullable<int> port)
        {
            var gatewayIDParameter = gatewayID.HasValue ?
                new ObjectParameter("gatewayID", gatewayID) :
                new ObjectParameter("gatewayID", typeof(System.Guid));
    
            var serverNameParameter = serverName != null ?
                new ObjectParameter("serverName", serverName) :
                new ObjectParameter("serverName", typeof(string));
    
            var portParameter = port.HasValue ?
                new ObjectParameter("port", port) :
                new ObjectParameter("port", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GatewayServerDetails", gatewayIDParameter, serverNameParameter, portParameter);
        }
    
        public virtual int usp_Get_AuditLog(string fromDate, string toDate, string filters)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var filtersParameter = filters != null ?
                new ObjectParameter("filters", filters) :
                new ObjectParameter("filters", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Get_AuditLog", fromDateParameter, toDateParameter, filtersParameter);
        }
    
        public virtual ObjectResult<usp_Get_AuditLogDefault_Result> usp_Get_AuditLogDefault()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Get_AuditLogDefault_Result>("usp_Get_AuditLogDefault");
        }
    
        public virtual ObjectResult<usp_GetAllProducts_Result> usp_GetAllProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetAllProducts_Result>("usp_GetAllProducts");
        }
    
        public virtual ObjectResult<string> usp_GetApplicationSettingInstances(string applicationType)
        {
            var applicationTypeParameter = applicationType != null ?
                new ObjectParameter("applicationType", applicationType) :
                new ObjectParameter("applicationType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetApplicationSettingInstances", applicationTypeParameter);
        }
    
        public virtual ObjectResult<usp_GetApplicationSettings_Result> usp_GetApplicationSettings(string applicationType, string instanceId, string key)
        {
            var applicationTypeParameter = applicationType != null ?
                new ObjectParameter("applicationType", applicationType) :
                new ObjectParameter("applicationType", typeof(string));
    
            var instanceIdParameter = instanceId != null ?
                new ObjectParameter("instanceId", instanceId) :
                new ObjectParameter("instanceId", typeof(string));
    
            var keyParameter = key != null ?
                new ObjectParameter("key", key) :
                new ObjectParameter("key", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetApplicationSettings_Result>("usp_GetApplicationSettings", applicationTypeParameter, instanceIdParameter, keyParameter);
        }
    
        public virtual ObjectResult<usp_GetCEISettings_Result> usp_GetCEISettings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetCEISettings_Result>("usp_GetCEISettings");
        }
    
        public virtual ObjectResult<string> usp_GetCodeAndCategoryList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetCodeAndCategoryList");
        }
    
        public virtual int usp_GetCodeByCategoryCode(string categoryCd, string methodCd, string code, Nullable<System.Guid> organizationId, Nullable<System.Guid> sendingSysId, ObjectParameter codeId)
        {
            var categoryCdParameter = categoryCd != null ?
                new ObjectParameter("categoryCd", categoryCd) :
                new ObjectParameter("categoryCd", typeof(string));
    
            var methodCdParameter = methodCd != null ?
                new ObjectParameter("MethodCd", methodCd) :
                new ObjectParameter("MethodCd", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(System.Guid));
    
            var sendingSysIdParameter = sendingSysId.HasValue ?
                new ObjectParameter("SendingSysId", sendingSysId) :
                new ObjectParameter("SendingSysId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetCodeByCategoryCode", categoryCdParameter, methodCdParameter, codeParameter, organizationIdParameter, sendingSysIdParameter, codeId);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_GetCodeIDByName(string short_dsc)
        {
            var short_dscParameter = short_dsc != null ?
                new ObjectParameter("short_dsc", short_dsc) :
                new ObjectParameter("short_dsc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_GetCodeIDByName", short_dscParameter);
        }
    
        public virtual int usp_GetCodeList(string filters)
        {
            var filtersParameter = filters != null ?
                new ObjectParameter("filters", filters) :
                new ObjectParameter("filters", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetCodeList", filtersParameter);
        }
    
        public virtual ObjectResult<usp_GetDebugSettings_FromDb_Result> usp_GetDebugSettings_FromDb()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetDebugSettings_FromDb_Result>("usp_GetDebugSettings_FromDb");
        }
    
        public virtual ObjectResult<usp_GetEventList_Result> usp_GetEventList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetEventList_Result>("usp_GetEventList");
        }
    
        public virtual ObjectResult<usp_GetEventLogDetails_Result> usp_GetEventLogDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetEventLogDetails_Result>("usp_GetEventLogDetails");
        }
    
        public virtual ObjectResult<usp_GetFacility_Result> usp_GetFacility()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetFacility_Result>("usp_GetFacility");
        }
    
        public virtual ObjectResult<usp_GetFeaturelstForProducts_Result> usp_GetFeaturelstForProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetFeaturelstForProducts_Result>("usp_GetFeaturelstForProducts");
        }
    
        public virtual ObjectResult<usp_GetGatewayDetailsByCategoryAndMethod_Result> usp_GetGatewayDetailsByCategoryAndMethod()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetGatewayDetailsByCategoryAndMethod_Result>("usp_GetGatewayDetailsByCategoryAndMethod");
        }
    
        public virtual ObjectResult<usp_GetGatewayDetailsByCategoryCode_Result> usp_GetGatewayDetailsByCategoryCode(string categoryCode, Nullable<System.Guid> parentOrganizationId)
        {
            var categoryCodeParameter = categoryCode != null ?
                new ObjectParameter("categoryCode", categoryCode) :
                new ObjectParameter("categoryCode", typeof(string));
    
            var parentOrganizationIdParameter = parentOrganizationId.HasValue ?
                new ObjectParameter("parentOrganizationId", parentOrganizationId) :
                new ObjectParameter("parentOrganizationId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetGatewayDetailsByCategoryCode_Result>("usp_GetGatewayDetailsByCategoryCode", categoryCodeParameter, parentOrganizationIdParameter);
        }
    
        public virtual ObjectResult<usp_GetGateWaySettingsByDeviceType_Result> usp_GetGateWaySettingsByDeviceType(string gatewayType)
        {
            var gatewayTypeParameter = gatewayType != null ?
                new ObjectParameter("GatewayType", gatewayType) :
                new ObjectParameter("GatewayType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetGateWaySettingsByDeviceType_Result>("usp_GetGateWaySettingsByDeviceType", gatewayTypeParameter);
        }
    
        public virtual ObjectResult<string> usp_GetGender()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetGender");
        }
    
        public virtual ObjectResult<string> usp_GetHL7LogInQueue(string msg_no)
        {
            var msg_noParameter = msg_no != null ?
                new ObjectParameter("msg_no", msg_no) :
                new ObjectParameter("msg_no", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetHL7LogInQueue", msg_noParameter);
        }
    
        public virtual ObjectResult<usp_GetHL7LogList_Result> usp_GetHL7LogList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetHL7LogList_Result>("usp_GetHL7LogList");
        }
    
        public virtual int usp_GetHL7LogListBoth(string fromDate, string toDate, string messageNumber, string patientId, string msgEventCode, string msgEventType, string msgSystem, string patientVisitNo, Nullable<bool> msgStatusRead, Nullable<bool> msgStatusError, Nullable<bool> msgStatusNotProcessed)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var messageNumberParameter = messageNumber != null ?
                new ObjectParameter("MessageNumber", messageNumber) :
                new ObjectParameter("MessageNumber", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var msgEventCodeParameter = msgEventCode != null ?
                new ObjectParameter("MsgEventCode", msgEventCode) :
                new ObjectParameter("MsgEventCode", typeof(string));
    
            var msgEventTypeParameter = msgEventType != null ?
                new ObjectParameter("MsgEventType", msgEventType) :
                new ObjectParameter("MsgEventType", typeof(string));
    
            var msgSystemParameter = msgSystem != null ?
                new ObjectParameter("MsgSystem", msgSystem) :
                new ObjectParameter("MsgSystem", typeof(string));
    
            var patientVisitNoParameter = patientVisitNo != null ?
                new ObjectParameter("PatientVisitNo", patientVisitNo) :
                new ObjectParameter("PatientVisitNo", typeof(string));
    
            var msgStatusReadParameter = msgStatusRead.HasValue ?
                new ObjectParameter("MsgStatusRead", msgStatusRead) :
                new ObjectParameter("MsgStatusRead", typeof(bool));
    
            var msgStatusErrorParameter = msgStatusError.HasValue ?
                new ObjectParameter("MsgStatusError", msgStatusError) :
                new ObjectParameter("MsgStatusError", typeof(bool));
    
            var msgStatusNotProcessedParameter = msgStatusNotProcessed.HasValue ?
                new ObjectParameter("MsgStatusNotProcessed", msgStatusNotProcessed) :
                new ObjectParameter("MsgStatusNotProcessed", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetHL7LogListBoth", fromDateParameter, toDateParameter, messageNumberParameter, patientIdParameter, msgEventCodeParameter, msgEventTypeParameter, msgSystemParameter, patientVisitNoParameter, msgStatusReadParameter, msgStatusErrorParameter, msgStatusNotProcessedParameter);
        }
    
        public virtual int usp_GetHL7LogListInbound(string fromDate, string toDate, string messageNumber, string patientId, string msgEventCode, string msgEventType, string msgSystem, string patientVisitNo, Nullable<bool> msgStatusRead, Nullable<bool> msgStatusError, Nullable<bool> msgStatusNotProcessed)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var messageNumberParameter = messageNumber != null ?
                new ObjectParameter("MessageNumber", messageNumber) :
                new ObjectParameter("MessageNumber", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var msgEventCodeParameter = msgEventCode != null ?
                new ObjectParameter("MsgEventCode", msgEventCode) :
                new ObjectParameter("MsgEventCode", typeof(string));
    
            var msgEventTypeParameter = msgEventType != null ?
                new ObjectParameter("MsgEventType", msgEventType) :
                new ObjectParameter("MsgEventType", typeof(string));
    
            var msgSystemParameter = msgSystem != null ?
                new ObjectParameter("MsgSystem", msgSystem) :
                new ObjectParameter("MsgSystem", typeof(string));
    
            var patientVisitNoParameter = patientVisitNo != null ?
                new ObjectParameter("PatientVisitNo", patientVisitNo) :
                new ObjectParameter("PatientVisitNo", typeof(string));
    
            var msgStatusReadParameter = msgStatusRead.HasValue ?
                new ObjectParameter("MsgStatusRead", msgStatusRead) :
                new ObjectParameter("MsgStatusRead", typeof(bool));
    
            var msgStatusErrorParameter = msgStatusError.HasValue ?
                new ObjectParameter("MsgStatusError", msgStatusError) :
                new ObjectParameter("MsgStatusError", typeof(bool));
    
            var msgStatusNotProcessedParameter = msgStatusNotProcessed.HasValue ?
                new ObjectParameter("MsgStatusNotProcessed", msgStatusNotProcessed) :
                new ObjectParameter("MsgStatusNotProcessed", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetHL7LogListInbound", fromDateParameter, toDateParameter, messageNumberParameter, patientIdParameter, msgEventCodeParameter, msgEventTypeParameter, msgSystemParameter, patientVisitNoParameter, msgStatusReadParameter, msgStatusErrorParameter, msgStatusNotProcessedParameter);
        }
    
        public virtual int usp_GetHL7LogListOutbound(string fromDate, string toDate, string messageNumber, string patientId, string msgEventCode, string msgEventType, string msgSystem, Nullable<bool> msgStatusRead, Nullable<bool> msgStatusError, Nullable<bool> msgStatusNotProcessed)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var messageNumberParameter = messageNumber != null ?
                new ObjectParameter("MessageNumber", messageNumber) :
                new ObjectParameter("MessageNumber", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var msgEventCodeParameter = msgEventCode != null ?
                new ObjectParameter("MsgEventCode", msgEventCode) :
                new ObjectParameter("MsgEventCode", typeof(string));
    
            var msgEventTypeParameter = msgEventType != null ?
                new ObjectParameter("MsgEventType", msgEventType) :
                new ObjectParameter("MsgEventType", typeof(string));
    
            var msgSystemParameter = msgSystem != null ?
                new ObjectParameter("MsgSystem", msgSystem) :
                new ObjectParameter("MsgSystem", typeof(string));
    
            var msgStatusReadParameter = msgStatusRead.HasValue ?
                new ObjectParameter("MsgStatusRead", msgStatusRead) :
                new ObjectParameter("MsgStatusRead", typeof(bool));
    
            var msgStatusErrorParameter = msgStatusError.HasValue ?
                new ObjectParameter("MsgStatusError", msgStatusError) :
                new ObjectParameter("MsgStatusError", typeof(bool));
    
            var msgStatusNotProcessedParameter = msgStatusNotProcessed.HasValue ?
                new ObjectParameter("MsgStatusNotProcessed", msgStatusNotProcessed) :
                new ObjectParameter("MsgStatusNotProcessed", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetHL7LogListOutbound", fromDateParameter, toDateParameter, messageNumberParameter, patientIdParameter, msgEventCodeParameter, msgEventTypeParameter, msgSystemParameter, msgStatusReadParameter, msgStatusErrorParameter, msgStatusNotProcessedParameter);
        }
    
        public virtual ObjectResult<string> usp_GetHL7LogOutQueue(string msg_no)
        {
            var msg_noParameter = msg_no != null ?
                new ObjectParameter("msg_no", msg_no) :
                new ObjectParameter("msg_no", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetHL7LogOutQueue", msg_noParameter);
        }
    
        public virtual ObjectResult<string> usp_GetKeyvalue(string keyname)
        {
            var keynameParameter = keyname != null ?
                new ObjectParameter("keyname", keyname) :
                new ObjectParameter("keyname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetKeyvalue", keynameParameter);
        }
    
        public virtual ObjectResult<string> usp_GetMethodCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetMethodCode");
        }
    
        public virtual int usp_GetMonitorList(string filters, Nullable<bool> debug)
        {
            var filtersParameter = filters != null ?
                new ObjectParameter("filters", filters) :
                new ObjectParameter("filters", typeof(string));
    
            var debugParameter = debug.HasValue ?
                new ObjectParameter("Debug", debug) :
                new ObjectParameter("Debug", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetMonitorList", filtersParameter, debugParameter);
        }
    
        public virtual ObjectResult<string> usp_GetNetwork()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetNetwork");
        }
    
        public virtual ObjectResult<usp_GetOrganization_Result> usp_GetOrganization()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrganization_Result>("usp_GetOrganization");
        }
    
        public virtual ObjectResult<usp_GetOrganizationInformation_Result> usp_GetOrganizationInformation(string organizationCd, string categoryCd)
        {
            var organizationCdParameter = organizationCd != null ?
                new ObjectParameter("organizationCd", organizationCd) :
                new ObjectParameter("organizationCd", typeof(string));
    
            var categoryCdParameter = categoryCd != null ?
                new ObjectParameter("categoryCd", categoryCd) :
                new ObjectParameter("categoryCd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetOrganizationInformation_Result>("usp_GetOrganizationInformation", organizationCdParameter, categoryCdParameter);
        }
    
        public virtual ObjectResult<string> usp_GetPatientIdentificationType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetPatientIdentificationType");
        }
    
        public virtual ObjectResult<usp_GetPatientInfo_Result> usp_GetPatientInfo(Nullable<System.Guid> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetPatientInfo_Result>("usp_GetPatientInfo", patientIdParameter);
        }
    
        public virtual int usp_GetPatientInformation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetPatientInformation");
        }
    
        public virtual int usp_GetPatientList(string filters, Nullable<bool> showADTEncounters, Nullable<bool> debug)
        {
            var filtersParameter = filters != null ?
                new ObjectParameter("filters", filters) :
                new ObjectParameter("filters", typeof(string));
    
            var showADTEncountersParameter = showADTEncounters.HasValue ?
                new ObjectParameter("showADTEncounters", showADTEncounters) :
                new ObjectParameter("showADTEncounters", typeof(bool));
    
            var debugParameter = debug.HasValue ?
                new ObjectParameter("Debug", debug) :
                new ObjectParameter("Debug", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetPatientList", filtersParameter, showADTEncountersParameter, debugParameter);
        }
    
        public virtual int usp_GetPrintJobList(string filters, string fromDate, string toDate)
        {
            var filtersParameter = filters != null ?
                new ObjectParameter("filters", filters) :
                new ObjectParameter("filters", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetPrintJobList", filtersParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<usp_GetProductSecurity_Result> usp_GetProductSecurity()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetProductSecurity_Result>("usp_GetProductSecurity");
        }
    
        public virtual ObjectResult<usp_GetSelectedProducts_Result> usp_GetSelectedProducts(string product_cd)
        {
            var product_cdParameter = product_cd != null ?
                new ObjectParameter("product_cd", product_cd) :
                new ObjectParameter("product_cd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSelectedProducts_Result>("usp_GetSelectedProducts", product_cdParameter);
        }
    
        public virtual int usp_GetSendSystemList(string organization_id)
        {
            var organization_idParameter = organization_id != null ?
                new ObjectParameter("organization_id", organization_id) :
                new ObjectParameter("organization_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetSendSystemList", organization_idParameter);
        }
    
        public virtual ObjectResult<usp_GetSysgenDetails_Result> usp_GetSysgenDetails(string product_cd)
        {
            var product_cdParameter = product_cd != null ?
                new ObjectParameter("product_cd", product_cd) :
                new ObjectParameter("product_cd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetSysgenDetails_Result>("usp_GetSysgenDetails", product_cdParameter);
        }
    
        public virtual int usp_GetSystemLog(string filters, string fromDate, string toDate)
        {
            var filtersParameter = filters != null ?
                new ObjectParameter("filters", filters) :
                new ObjectParameter("filters", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_GetSystemLog", filtersParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<usp_GetUnit_Result> usp_GetUnit()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUnit_Result>("usp_GetUnit");
        }
    
        public virtual ObjectResult<usp_GetUnitDetail_Result> usp_GetUnitDetail(Nullable<System.Guid> organization_id)
        {
            var organization_idParameter = organization_id.HasValue ?
                new ObjectParameter("organization_id", organization_id) :
                new ObjectParameter("organization_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUnitDetail_Result>("usp_GetUnitDetail", organization_idParameter);
        }
    
        public virtual ObjectResult<string> usp_GetUnitLicense(string productcd, string categoryCd, Nullable<System.Guid> organizationId, string organizationCd)
        {
            var productcdParameter = productcd != null ?
                new ObjectParameter("productcd", productcd) :
                new ObjectParameter("productcd", typeof(string));
    
            var categoryCdParameter = categoryCd != null ?
                new ObjectParameter("categoryCd", categoryCd) :
                new ObjectParameter("categoryCd", typeof(string));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("organizationId", organizationId) :
                new ObjectParameter("organizationId", typeof(System.Guid));
    
            var organizationCdParameter = organizationCd != null ?
                new ObjectParameter("organizationCd", organizationCd) :
                new ObjectParameter("organizationCd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_GetUnitLicense", productcdParameter, categoryCdParameter, organizationIdParameter, organizationCdParameter);
        }
    
        public virtual ObjectResult<usp_GetVersionList_Result> usp_GetVersionList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetVersionList_Result>("usp_GetVersionList");
        }
    
        public virtual ObjectResult<usp_GetVisits_Result> usp_GetVisits(Nullable<System.Guid> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetVisits_Result>("usp_GetVisits", patientIdParameter);
        }
    
        public virtual ObjectResult<usp_HL7_GetAttendingHcpData_Result> usp_HL7_GetAttendingHcpData(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HL7_GetAttendingHcpData_Result>("usp_HL7_GetAttendingHcpData", patient_idParameter);
        }
    
        public virtual ObjectResult<usp_HL7_GetCommonOrderData_Result> usp_HL7_GetCommonOrderData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HL7_GetCommonOrderData_Result>("usp_HL7_GetCommonOrderData");
        }
    
        public virtual ObjectResult<usp_HL7_GetInboundMessages_Result> usp_HL7_GetInboundMessages()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HL7_GetInboundMessages_Result>("usp_HL7_GetInboundMessages");
        }
    
        public virtual ObjectResult<usp_HL7_GetLegacyGdsCodes_Result> usp_HL7_GetLegacyGdsCodes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HL7_GetLegacyGdsCodes_Result>("usp_HL7_GetLegacyGdsCodes");
        }
    
        public virtual ObjectResult<usp_HL7_GetLiveVitalsAndPatientDataByQuery_Result> usp_HL7_GetLiveVitalsAndPatientDataByQuery(string qRYItem, Nullable<int> type)
        {
            var qRYItemParameter = qRYItem != null ?
                new ObjectParameter("QRYItem", qRYItem) :
                new ObjectParameter("QRYItem", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HL7_GetLiveVitalsAndPatientDataByQuery_Result>("usp_HL7_GetLiveVitalsAndPatientDataByQuery", qRYItemParameter, typeParameter);
        }
    
        public virtual ObjectResult<usp_HL7_GetLiveVitalsAndPatientDataForOru_Result> usp_HL7_GetLiveVitalsAndPatientDataForOru()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HL7_GetLiveVitalsAndPatientDataForOru_Result>("usp_HL7_GetLiveVitalsAndPatientDataForOru");
        }
    
        public virtual ObjectResult<usp_HL7_GetObservationRequestData_Result> usp_HL7_GetObservationRequestData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HL7_GetObservationRequestData_Result>("usp_HL7_GetObservationRequestData");
        }
    
        public virtual ObjectResult<usp_HL7_GetObservationsByPatientId_Result> usp_HL7_GetObservationsByPatientId(Nullable<System.Guid> patient_id, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime, Nullable<System.DateTime> startTimeUtc, Nullable<System.DateTime> endTimeUtc)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            var startTimeUtcParameter = startTimeUtc.HasValue ?
                new ObjectParameter("StartTimeUtc", startTimeUtc) :
                new ObjectParameter("StartTimeUtc", typeof(System.DateTime));
    
            var endTimeUtcParameter = endTimeUtc.HasValue ?
                new ObjectParameter("EndTimeUtc", endTimeUtc) :
                new ObjectParameter("EndTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HL7_GetObservationsByPatientId_Result>("usp_HL7_GetObservationsByPatientId", patient_idParameter, startTimeParameter, endTimeParameter, startTimeUtcParameter, endTimeUtcParameter);
        }
    
        public virtual int usp_HL7_GetPatientVisitInformation(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_GetPatientVisitInformation", patient_idParameter);
        }
    
        public virtual ObjectResult<usp_HL7_GetPersonAndPatientDataByPatientID_Result> usp_HL7_GetPersonAndPatientDataByPatientID(Nullable<System.Guid> patientId)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HL7_GetPersonAndPatientDataByPatientID_Result>("usp_HL7_GetPersonAndPatientDataByPatientID", patientIdParameter);
        }
    
        public virtual ObjectResult<usp_HL7_GetPV1SegmentDataFromADTMsg_Result> usp_HL7_GetPV1SegmentDataFromADTMsg(Nullable<System.Guid> patient_id2)
        {
            var patient_id2Parameter = patient_id2.HasValue ?
                new ObjectParameter("patient_id2", patient_id2) :
                new ObjectParameter("patient_id2", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HL7_GetPV1SegmentDataFromADTMsg_Result>("usp_HL7_GetPV1SegmentDataFromADTMsg", patient_id2Parameter);
        }
    
        public virtual int usp_HL7_GetUnitLicense(string productcd, string categoryCd, Nullable<System.Guid> organizationId, ObjectParameter orgCode)
        {
            var productcdParameter = productcd != null ?
                new ObjectParameter("productcd", productcd) :
                new ObjectParameter("productcd", typeof(string));
    
            var categoryCdParameter = categoryCd != null ?
                new ObjectParameter("categoryCd", categoryCd) :
                new ObjectParameter("categoryCd", typeof(string));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("organizationId", organizationId) :
                new ObjectParameter("organizationId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_GetUnitLicense", productcdParameter, categoryCdParameter, organizationIdParameter, orgCode);
        }
    
        public virtual int usp_HL7_InsertHL7Ack(string msgControlId, string msgStatus, string clientIP, string ackMsgControlId, string ackSystem, string ackOrganization)
        {
            var msgControlIdParameter = msgControlId != null ?
                new ObjectParameter("msgControlId", msgControlId) :
                new ObjectParameter("msgControlId", typeof(string));
    
            var msgStatusParameter = msgStatus != null ?
                new ObjectParameter("msgStatus", msgStatus) :
                new ObjectParameter("msgStatus", typeof(string));
    
            var clientIPParameter = clientIP != null ?
                new ObjectParameter("clientIP", clientIP) :
                new ObjectParameter("clientIP", typeof(string));
    
            var ackMsgControlIdParameter = ackMsgControlId != null ?
                new ObjectParameter("ackMsgControlId", ackMsgControlId) :
                new ObjectParameter("ackMsgControlId", typeof(string));
    
            var ackSystemParameter = ackSystem != null ?
                new ObjectParameter("ackSystem", ackSystem) :
                new ObjectParameter("ackSystem", typeof(string));
    
            var ackOrganizationParameter = ackOrganization != null ?
                new ObjectParameter("ackOrganization", ackOrganization) :
                new ObjectParameter("ackOrganization", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_InsertHL7Ack", msgControlIdParameter, msgStatusParameter, clientIPParameter, ackMsgControlIdParameter, ackSystemParameter, ackOrganizationParameter);
        }
    
        public virtual int usp_HL7_InsertHL7InboundMessage(string msg_status, string msh_msg_type, string msh_event_cd, string msh_organization, string msh_system, Nullable<System.DateTime> msh_dt, string msh_control_id, string msh_version, string hL7TextShort, string hL7TextLong, ObjectParameter msg_no)
        {
            var msg_statusParameter = msg_status != null ?
                new ObjectParameter("msg_status", msg_status) :
                new ObjectParameter("msg_status", typeof(string));
    
            var msh_msg_typeParameter = msh_msg_type != null ?
                new ObjectParameter("msh_msg_type", msh_msg_type) :
                new ObjectParameter("msh_msg_type", typeof(string));
    
            var msh_event_cdParameter = msh_event_cd != null ?
                new ObjectParameter("msh_event_cd", msh_event_cd) :
                new ObjectParameter("msh_event_cd", typeof(string));
    
            var msh_organizationParameter = msh_organization != null ?
                new ObjectParameter("msh_organization", msh_organization) :
                new ObjectParameter("msh_organization", typeof(string));
    
            var msh_systemParameter = msh_system != null ?
                new ObjectParameter("msh_system", msh_system) :
                new ObjectParameter("msh_system", typeof(string));
    
            var msh_dtParameter = msh_dt.HasValue ?
                new ObjectParameter("msh_dt", msh_dt) :
                new ObjectParameter("msh_dt", typeof(System.DateTime));
    
            var msh_control_idParameter = msh_control_id != null ?
                new ObjectParameter("msh_control_id", msh_control_id) :
                new ObjectParameter("msh_control_id", typeof(string));
    
            var msh_versionParameter = msh_version != null ?
                new ObjectParameter("msh_version", msh_version) :
                new ObjectParameter("msh_version", typeof(string));
    
            var hL7TextShortParameter = hL7TextShort != null ?
                new ObjectParameter("HL7TextShort", hL7TextShort) :
                new ObjectParameter("HL7TextShort", typeof(string));
    
            var hL7TextLongParameter = hL7TextLong != null ?
                new ObjectParameter("HL7TextLong", hL7TextLong) :
                new ObjectParameter("HL7TextLong", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_InsertHL7InboundMessage", msg_statusParameter, msh_msg_typeParameter, msh_event_cdParameter, msh_organizationParameter, msh_systemParameter, msh_dtParameter, msh_control_idParameter, msh_versionParameter, hL7TextShortParameter, hL7TextLongParameter, msg_no);
        }
    
        public virtual int usp_HL7_InsertHL7OutMessage(string msg_no, string msg_status, string hL7_text_long, string patient_id, string msh_system, string msh_organization, string msh_event_cd, string msh_msg_type, Nullable<System.DateTime> realQueryVitalDT)
        {
            var msg_noParameter = msg_no != null ?
                new ObjectParameter("msg_no", msg_no) :
                new ObjectParameter("msg_no", typeof(string));
    
            var msg_statusParameter = msg_status != null ?
                new ObjectParameter("msg_status", msg_status) :
                new ObjectParameter("msg_status", typeof(string));
    
            var hL7_text_longParameter = hL7_text_long != null ?
                new ObjectParameter("HL7_text_long", hL7_text_long) :
                new ObjectParameter("HL7_text_long", typeof(string));
    
            var patient_idParameter = patient_id != null ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(string));
    
            var msh_systemParameter = msh_system != null ?
                new ObjectParameter("msh_system", msh_system) :
                new ObjectParameter("msh_system", typeof(string));
    
            var msh_organizationParameter = msh_organization != null ?
                new ObjectParameter("msh_organization", msh_organization) :
                new ObjectParameter("msh_organization", typeof(string));
    
            var msh_event_cdParameter = msh_event_cd != null ?
                new ObjectParameter("msh_event_cd", msh_event_cd) :
                new ObjectParameter("msh_event_cd", typeof(string));
    
            var msh_msg_typeParameter = msh_msg_type != null ?
                new ObjectParameter("msh_msg_type", msh_msg_type) :
                new ObjectParameter("msh_msg_type", typeof(string));
    
            var realQueryVitalDTParameter = realQueryVitalDT.HasValue ?
                new ObjectParameter("realQueryVitalDT", realQueryVitalDT) :
                new ObjectParameter("realQueryVitalDT", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_InsertHL7OutMessage", msg_noParameter, msg_statusParameter, hL7_text_longParameter, patient_idParameter, msh_systemParameter, msh_organizationParameter, msh_event_cdParameter, msh_msg_typeParameter, realQueryVitalDTParameter);
        }
    
        public virtual int usp_HL7_InsertInboundFacility(string sendingFacility, Nullable<bool> dynAddOrgs, ObjectParameter facilityId)
        {
            var sendingFacilityParameter = sendingFacility != null ?
                new ObjectParameter("SendingFacility", sendingFacility) :
                new ObjectParameter("SendingFacility", typeof(string));
    
            var dynAddOrgsParameter = dynAddOrgs.HasValue ?
                new ObjectParameter("DynAddOrgs", dynAddOrgs) :
                new ObjectParameter("DynAddOrgs", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_InsertInboundFacility", sendingFacilityParameter, dynAddOrgsParameter, facilityId);
        }
    
        public virtual int usp_HL7_InsertInboundMessage(ObjectParameter messageNo, string messageStatus, string hL7Message, string messageSendingApplication, string messageSendingFacility, string messageType, string messageTypeEventCode, string messageControlId, string messageVersion, Nullable<System.DateTime> messageHeaderDate)
        {
            var messageStatusParameter = messageStatus != null ?
                new ObjectParameter("MessageStatus", messageStatus) :
                new ObjectParameter("MessageStatus", typeof(string));
    
            var hL7MessageParameter = hL7Message != null ?
                new ObjectParameter("HL7Message", hL7Message) :
                new ObjectParameter("HL7Message", typeof(string));
    
            var messageSendingApplicationParameter = messageSendingApplication != null ?
                new ObjectParameter("MessageSendingApplication", messageSendingApplication) :
                new ObjectParameter("MessageSendingApplication", typeof(string));
    
            var messageSendingFacilityParameter = messageSendingFacility != null ?
                new ObjectParameter("MessageSendingFacility", messageSendingFacility) :
                new ObjectParameter("MessageSendingFacility", typeof(string));
    
            var messageTypeParameter = messageType != null ?
                new ObjectParameter("MessageType", messageType) :
                new ObjectParameter("MessageType", typeof(string));
    
            var messageTypeEventCodeParameter = messageTypeEventCode != null ?
                new ObjectParameter("MessageTypeEventCode", messageTypeEventCode) :
                new ObjectParameter("MessageTypeEventCode", typeof(string));
    
            var messageControlIdParameter = messageControlId != null ?
                new ObjectParameter("MessageControlId", messageControlId) :
                new ObjectParameter("MessageControlId", typeof(string));
    
            var messageVersionParameter = messageVersion != null ?
                new ObjectParameter("MessageVersion", messageVersion) :
                new ObjectParameter("MessageVersion", typeof(string));
    
            var messageHeaderDateParameter = messageHeaderDate.HasValue ?
                new ObjectParameter("MessageHeaderDate", messageHeaderDate) :
                new ObjectParameter("MessageHeaderDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_InsertInboundMessage", messageNo, messageStatusParameter, hL7MessageParameter, messageSendingApplicationParameter, messageSendingFacilityParameter, messageTypeParameter, messageTypeEventCodeParameter, messageControlIdParameter, messageVersionParameter, messageHeaderDateParameter);
        }
    
        public virtual int usp_HL7_InsertInboundSendingSystem(string sendingSystem, Nullable<bool> dynAddSendingSys, Nullable<System.Guid> organizationId, ObjectParameter sendingSysId)
        {
            var sendingSystemParameter = sendingSystem != null ?
                new ObjectParameter("SendingSystem", sendingSystem) :
                new ObjectParameter("SendingSystem", typeof(string));
    
            var dynAddSendingSysParameter = dynAddSendingSys.HasValue ?
                new ObjectParameter("DynAddSendingSys", dynAddSendingSys) :
                new ObjectParameter("DynAddSendingSys", typeof(bool));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_InsertInboundSendingSystem", sendingSystemParameter, dynAddSendingSysParameter, organizationIdParameter, sendingSysId);
        }
    
        public virtual ObjectResult<usp_HL7_QueryPatientDataAndResults_Result> usp_HL7_QueryPatientDataAndResults(string qRYItem, Nullable<int> type, Nullable<System.DateTime> startDateTimeUTC, Nullable<System.DateTime> endDateTimeUTC)
        {
            var qRYItemParameter = qRYItem != null ?
                new ObjectParameter("QRYItem", qRYItem) :
                new ObjectParameter("QRYItem", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var startDateTimeUTCParameter = startDateTimeUTC.HasValue ?
                new ObjectParameter("StartDateTimeUTC", startDateTimeUTC) :
                new ObjectParameter("StartDateTimeUTC", typeof(System.DateTime));
    
            var endDateTimeUTCParameter = endDateTimeUTC.HasValue ?
                new ObjectParameter("EndDateTimeUTC", endDateTimeUTC) :
                new ObjectParameter("EndDateTimeUTC", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_HL7_QueryPatientDataAndResults_Result>("usp_HL7_QueryPatientDataAndResults", qRYItemParameter, typeParameter, startDateTimeUTCParameter, endDateTimeUTCParameter);
        }
    
        public virtual int usp_HL7_SaveADTMessage(Nullable<int> messageNumber, Nullable<bool> dynAddOrgs, Nullable<bool> dynAddSendingSys, Nullable<bool> patientTypeAccountNo, Nullable<bool> uniqueVisitNumber, Nullable<bool> dynamicallyAddNursingUnits, Nullable<bool> dynamicallyAddUSID, string sendingSystem, string sendingFacility, string patientMrn, string patientAccount, string patientGivenName, string patientFamilyName, string patientMiddleName, Nullable<System.DateTime> patientDob, string patientSex, string patientClass, string patientPointOfCare, string patientVisitNumber, string patientRoom, string patientBed, string vIPIndicator, Nullable<System.DateTime> admitDateTime, Nullable<System.DateTime> dischargeDateTime)
        {
            var messageNumberParameter = messageNumber.HasValue ?
                new ObjectParameter("MessageNumber", messageNumber) :
                new ObjectParameter("MessageNumber", typeof(int));
    
            var dynAddOrgsParameter = dynAddOrgs.HasValue ?
                new ObjectParameter("DynAddOrgs", dynAddOrgs) :
                new ObjectParameter("DynAddOrgs", typeof(bool));
    
            var dynAddSendingSysParameter = dynAddSendingSys.HasValue ?
                new ObjectParameter("DynAddSendingSys", dynAddSendingSys) :
                new ObjectParameter("DynAddSendingSys", typeof(bool));
    
            var patientTypeAccountNoParameter = patientTypeAccountNo.HasValue ?
                new ObjectParameter("PatientTypeAccountNo", patientTypeAccountNo) :
                new ObjectParameter("PatientTypeAccountNo", typeof(bool));
    
            var uniqueVisitNumberParameter = uniqueVisitNumber.HasValue ?
                new ObjectParameter("UniqueVisitNumber", uniqueVisitNumber) :
                new ObjectParameter("UniqueVisitNumber", typeof(bool));
    
            var dynamicallyAddNursingUnitsParameter = dynamicallyAddNursingUnits.HasValue ?
                new ObjectParameter("DynamicallyAddNursingUnits", dynamicallyAddNursingUnits) :
                new ObjectParameter("DynamicallyAddNursingUnits", typeof(bool));
    
            var dynamicallyAddUSIDParameter = dynamicallyAddUSID.HasValue ?
                new ObjectParameter("DynamicallyAddUSID", dynamicallyAddUSID) :
                new ObjectParameter("DynamicallyAddUSID", typeof(bool));
    
            var sendingSystemParameter = sendingSystem != null ?
                new ObjectParameter("SendingSystem", sendingSystem) :
                new ObjectParameter("SendingSystem", typeof(string));
    
            var sendingFacilityParameter = sendingFacility != null ?
                new ObjectParameter("SendingFacility", sendingFacility) :
                new ObjectParameter("SendingFacility", typeof(string));
    
            var patientMrnParameter = patientMrn != null ?
                new ObjectParameter("PatientMrn", patientMrn) :
                new ObjectParameter("PatientMrn", typeof(string));
    
            var patientAccountParameter = patientAccount != null ?
                new ObjectParameter("PatientAccount", patientAccount) :
                new ObjectParameter("PatientAccount", typeof(string));
    
            var patientGivenNameParameter = patientGivenName != null ?
                new ObjectParameter("PatientGivenName", patientGivenName) :
                new ObjectParameter("PatientGivenName", typeof(string));
    
            var patientFamilyNameParameter = patientFamilyName != null ?
                new ObjectParameter("PatientFamilyName", patientFamilyName) :
                new ObjectParameter("PatientFamilyName", typeof(string));
    
            var patientMiddleNameParameter = patientMiddleName != null ?
                new ObjectParameter("PatientMiddleName", patientMiddleName) :
                new ObjectParameter("PatientMiddleName", typeof(string));
    
            var patientDobParameter = patientDob.HasValue ?
                new ObjectParameter("PatientDob", patientDob) :
                new ObjectParameter("PatientDob", typeof(System.DateTime));
    
            var patientSexParameter = patientSex != null ?
                new ObjectParameter("PatientSex", patientSex) :
                new ObjectParameter("PatientSex", typeof(string));
    
            var patientClassParameter = patientClass != null ?
                new ObjectParameter("PatientClass", patientClass) :
                new ObjectParameter("PatientClass", typeof(string));
    
            var patientPointOfCareParameter = patientPointOfCare != null ?
                new ObjectParameter("PatientPointOfCare", patientPointOfCare) :
                new ObjectParameter("PatientPointOfCare", typeof(string));
    
            var patientVisitNumberParameter = patientVisitNumber != null ?
                new ObjectParameter("PatientVisitNumber", patientVisitNumber) :
                new ObjectParameter("PatientVisitNumber", typeof(string));
    
            var patientRoomParameter = patientRoom != null ?
                new ObjectParameter("PatientRoom", patientRoom) :
                new ObjectParameter("PatientRoom", typeof(string));
    
            var patientBedParameter = patientBed != null ?
                new ObjectParameter("PatientBed", patientBed) :
                new ObjectParameter("PatientBed", typeof(string));
    
            var vIPIndicatorParameter = vIPIndicator != null ?
                new ObjectParameter("VIPIndicator", vIPIndicator) :
                new ObjectParameter("VIPIndicator", typeof(string));
    
            var admitDateTimeParameter = admitDateTime.HasValue ?
                new ObjectParameter("AdmitDateTime", admitDateTime) :
                new ObjectParameter("AdmitDateTime", typeof(System.DateTime));
    
            var dischargeDateTimeParameter = dischargeDateTime.HasValue ?
                new ObjectParameter("DischargeDateTime", dischargeDateTime) :
                new ObjectParameter("DischargeDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_SaveADTMessage", messageNumberParameter, dynAddOrgsParameter, dynAddSendingSysParameter, patientTypeAccountNoParameter, uniqueVisitNumberParameter, dynamicallyAddNursingUnitsParameter, dynamicallyAddUSIDParameter, sendingSystemParameter, sendingFacilityParameter, patientMrnParameter, patientAccountParameter, patientGivenNameParameter, patientFamilyNameParameter, patientMiddleNameParameter, patientDobParameter, patientSexParameter, patientClassParameter, patientPointOfCareParameter, patientVisitNumberParameter, patientRoomParameter, patientBedParameter, vIPIndicatorParameter, admitDateTimeParameter, dischargeDateTimeParameter);
        }
    
        public virtual int usp_HL7_SaveOruMessages()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_SaveOruMessages");
        }
    
        public virtual int usp_HL7_SavePatientDemographicInformation(Nullable<bool> patientTypeAccountNo, string patientMrn, string patientAccount, Nullable<System.Guid> organizationId, string patientGivenName, string patientFamilyName, string patientMiddleName, Nullable<System.DateTime> patientDob, Nullable<int> patientGenderCodeId, ObjectParameter patientId, ObjectParameter accountId)
        {
            var patientTypeAccountNoParameter = patientTypeAccountNo.HasValue ?
                new ObjectParameter("PatientTypeAccountNo", patientTypeAccountNo) :
                new ObjectParameter("PatientTypeAccountNo", typeof(bool));
    
            var patientMrnParameter = patientMrn != null ?
                new ObjectParameter("PatientMrn", patientMrn) :
                new ObjectParameter("PatientMrn", typeof(string));
    
            var patientAccountParameter = patientAccount != null ?
                new ObjectParameter("PatientAccount", patientAccount) :
                new ObjectParameter("PatientAccount", typeof(string));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(System.Guid));
    
            var patientGivenNameParameter = patientGivenName != null ?
                new ObjectParameter("PatientGivenName", patientGivenName) :
                new ObjectParameter("PatientGivenName", typeof(string));
    
            var patientFamilyNameParameter = patientFamilyName != null ?
                new ObjectParameter("PatientFamilyName", patientFamilyName) :
                new ObjectParameter("PatientFamilyName", typeof(string));
    
            var patientMiddleNameParameter = patientMiddleName != null ?
                new ObjectParameter("PatientMiddleName", patientMiddleName) :
                new ObjectParameter("PatientMiddleName", typeof(string));
    
            var patientDobParameter = patientDob.HasValue ?
                new ObjectParameter("PatientDob", patientDob) :
                new ObjectParameter("PatientDob", typeof(System.DateTime));
    
            var patientGenderCodeIdParameter = patientGenderCodeId.HasValue ?
                new ObjectParameter("PatientGenderCodeId", patientGenderCodeId) :
                new ObjectParameter("PatientGenderCodeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_SavePatientDemographicInformation", patientTypeAccountNoParameter, patientMrnParameter, patientAccountParameter, organizationIdParameter, patientGivenNameParameter, patientFamilyNameParameter, patientMiddleNameParameter, patientDobParameter, patientGenderCodeIdParameter, patientId, accountId);
        }
    
        public virtual int usp_HL7_SavePatientInformation(Nullable<System.Guid> organizationId, Nullable<System.Guid> patientId, string mrn1, string mrn2, string firstNm, string middleNm, string lastNm, Nullable<System.DateTime> dob, Nullable<int> genderCid, ObjectParameter accountId)
        {
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("organizationId", organizationId) :
                new ObjectParameter("organizationId", typeof(System.Guid));
    
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            var mrn1Parameter = mrn1 != null ?
                new ObjectParameter("mrn1", mrn1) :
                new ObjectParameter("mrn1", typeof(string));
    
            var mrn2Parameter = mrn2 != null ?
                new ObjectParameter("mrn2", mrn2) :
                new ObjectParameter("mrn2", typeof(string));
    
            var firstNmParameter = firstNm != null ?
                new ObjectParameter("FirstNm", firstNm) :
                new ObjectParameter("FirstNm", typeof(string));
    
            var middleNmParameter = middleNm != null ?
                new ObjectParameter("MiddleNm", middleNm) :
                new ObjectParameter("MiddleNm", typeof(string));
    
            var lastNmParameter = lastNm != null ?
                new ObjectParameter("LastNm", lastNm) :
                new ObjectParameter("LastNm", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var genderCidParameter = genderCid.HasValue ?
                new ObjectParameter("GenderCid", genderCid) :
                new ObjectParameter("GenderCid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_SavePatientInformation", organizationIdParameter, patientIdParameter, mrn1Parameter, mrn2Parameter, firstNmParameter, middleNmParameter, lastNmParameter, dobParameter, genderCidParameter, accountId);
        }
    
        public virtual int usp_HL7_SavePatientVisitInformation(Nullable<bool> uniqueVisitNumber, Nullable<System.Guid> unitId, Nullable<System.Guid> organizationId, Nullable<System.Guid> patientId, Nullable<System.Guid> sendingApplicationId, Nullable<int> patientClassCid, string patientPointOfCare, string patientVisitNumber, Nullable<int> messageNumber, string patientRoom, string patientBed, Nullable<System.Guid> accountId, string vIPIndicator, Nullable<System.DateTime> admitDateTime, Nullable<System.DateTime> dischargeDateTime)
        {
            var uniqueVisitNumberParameter = uniqueVisitNumber.HasValue ?
                new ObjectParameter("UniqueVisitNumber", uniqueVisitNumber) :
                new ObjectParameter("UniqueVisitNumber", typeof(bool));
    
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(System.Guid));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(System.Guid));
    
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            var sendingApplicationIdParameter = sendingApplicationId.HasValue ?
                new ObjectParameter("SendingApplicationId", sendingApplicationId) :
                new ObjectParameter("SendingApplicationId", typeof(System.Guid));
    
            var patientClassCidParameter = patientClassCid.HasValue ?
                new ObjectParameter("PatientClassCid", patientClassCid) :
                new ObjectParameter("PatientClassCid", typeof(int));
    
            var patientPointOfCareParameter = patientPointOfCare != null ?
                new ObjectParameter("PatientPointOfCare", patientPointOfCare) :
                new ObjectParameter("PatientPointOfCare", typeof(string));
    
            var patientVisitNumberParameter = patientVisitNumber != null ?
                new ObjectParameter("PatientVisitNumber", patientVisitNumber) :
                new ObjectParameter("PatientVisitNumber", typeof(string));
    
            var messageNumberParameter = messageNumber.HasValue ?
                new ObjectParameter("MessageNumber", messageNumber) :
                new ObjectParameter("MessageNumber", typeof(int));
    
            var patientRoomParameter = patientRoom != null ?
                new ObjectParameter("PatientRoom", patientRoom) :
                new ObjectParameter("PatientRoom", typeof(string));
    
            var patientBedParameter = patientBed != null ?
                new ObjectParameter("PatientBed", patientBed) :
                new ObjectParameter("PatientBed", typeof(string));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(System.Guid));
    
            var vIPIndicatorParameter = vIPIndicator != null ?
                new ObjectParameter("VIPIndicator", vIPIndicator) :
                new ObjectParameter("VIPIndicator", typeof(string));
    
            var admitDateTimeParameter = admitDateTime.HasValue ?
                new ObjectParameter("AdmitDateTime", admitDateTime) :
                new ObjectParameter("AdmitDateTime", typeof(System.DateTime));
    
            var dischargeDateTimeParameter = dischargeDateTime.HasValue ?
                new ObjectParameter("DischargeDateTime", dischargeDateTime) :
                new ObjectParameter("DischargeDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_SavePatientVisitInformation", uniqueVisitNumberParameter, unitIdParameter, organizationIdParameter, patientIdParameter, sendingApplicationIdParameter, patientClassCidParameter, patientPointOfCareParameter, patientVisitNumberParameter, messageNumberParameter, patientRoomParameter, patientBedParameter, accountIdParameter, vIPIndicatorParameter, admitDateTimeParameter, dischargeDateTimeParameter);
        }
    
        public virtual int usp_HL7_SetAddressInformation(Nullable<System.Guid> addressId, string addrLocCd, string addrTypCd, Nullable<int> seqNo, Nullable<byte> activeSw, Nullable<System.Guid> orgPatientId, string line1Dsc, string line2Dsc, string line3Dsc, string cityNm, Nullable<int> countryCid, string stateCode, string zipCode, Nullable<System.DateTime> startDt)
        {
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(System.Guid));
    
            var addrLocCdParameter = addrLocCd != null ?
                new ObjectParameter("AddrLocCd", addrLocCd) :
                new ObjectParameter("AddrLocCd", typeof(string));
    
            var addrTypCdParameter = addrTypCd != null ?
                new ObjectParameter("AddrTypCd", addrTypCd) :
                new ObjectParameter("AddrTypCd", typeof(string));
    
            var seqNoParameter = seqNo.HasValue ?
                new ObjectParameter("SeqNo", seqNo) :
                new ObjectParameter("SeqNo", typeof(int));
    
            var activeSwParameter = activeSw.HasValue ?
                new ObjectParameter("ActiveSw", activeSw) :
                new ObjectParameter("ActiveSw", typeof(byte));
    
            var orgPatientIdParameter = orgPatientId.HasValue ?
                new ObjectParameter("OrgPatientId", orgPatientId) :
                new ObjectParameter("OrgPatientId", typeof(System.Guid));
    
            var line1DscParameter = line1Dsc != null ?
                new ObjectParameter("Line1Dsc", line1Dsc) :
                new ObjectParameter("Line1Dsc", typeof(string));
    
            var line2DscParameter = line2Dsc != null ?
                new ObjectParameter("Line2Dsc", line2Dsc) :
                new ObjectParameter("Line2Dsc", typeof(string));
    
            var line3DscParameter = line3Dsc != null ?
                new ObjectParameter("Line3Dsc", line3Dsc) :
                new ObjectParameter("Line3Dsc", typeof(string));
    
            var cityNmParameter = cityNm != null ?
                new ObjectParameter("CityNm", cityNm) :
                new ObjectParameter("CityNm", typeof(string));
    
            var countryCidParameter = countryCid.HasValue ?
                new ObjectParameter("CountryCid", countryCid) :
                new ObjectParameter("CountryCid", typeof(int));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var startDtParameter = startDt.HasValue ?
                new ObjectParameter("StartDt", startDt) :
                new ObjectParameter("StartDt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_SetAddressInformation", addressIdParameter, addrLocCdParameter, addrTypCdParameter, seqNoParameter, activeSwParameter, orgPatientIdParameter, line1DscParameter, line2DscParameter, line3DscParameter, cityNmParameter, countryCidParameter, stateCodeParameter, zipCodeParameter, startDtParameter);
        }
    
        public virtual int usp_HL7_SetHL7InboundMessage(Nullable<int> msgNo, string pidMrn, string pv1VisitNo, string msgStatus, Nullable<System.DateTime> processedDt)
        {
            var msgNoParameter = msgNo.HasValue ?
                new ObjectParameter("MsgNo", msgNo) :
                new ObjectParameter("MsgNo", typeof(int));
    
            var pidMrnParameter = pidMrn != null ?
                new ObjectParameter("PidMrn", pidMrn) :
                new ObjectParameter("PidMrn", typeof(string));
    
            var pv1VisitNoParameter = pv1VisitNo != null ?
                new ObjectParameter("Pv1VisitNo", pv1VisitNo) :
                new ObjectParameter("Pv1VisitNo", typeof(string));
    
            var msgStatusParameter = msgStatus != null ?
                new ObjectParameter("MsgStatus", msgStatus) :
                new ObjectParameter("MsgStatus", typeof(string));
    
            var processedDtParameter = processedDt.HasValue ?
                new ObjectParameter("ProcessedDt", processedDt) :
                new ObjectParameter("ProcessedDt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_SetHL7InboundMessage", msgNoParameter, pidMrnParameter, pv1VisitNoParameter, msgStatusParameter, processedDtParameter);
        }
    
        public virtual int usp_HL7_UpdateAccountInformation(Nullable<System.Guid> accountId, Nullable<int> accountStatusCid, Nullable<byte> badDebtSw, Nullable<decimal> totPaymentsAmt, Nullable<decimal> totChargesAmt, Nullable<decimal> totAdjsAmt, Nullable<decimal> curBalAmt, Nullable<System.DateTime> accountCloseDt)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(System.Guid));
    
            var accountStatusCidParameter = accountStatusCid.HasValue ?
                new ObjectParameter("accountStatusCid", accountStatusCid) :
                new ObjectParameter("accountStatusCid", typeof(int));
    
            var badDebtSwParameter = badDebtSw.HasValue ?
                new ObjectParameter("badDebtSw", badDebtSw) :
                new ObjectParameter("badDebtSw", typeof(byte));
    
            var totPaymentsAmtParameter = totPaymentsAmt.HasValue ?
                new ObjectParameter("totPaymentsAmt", totPaymentsAmt) :
                new ObjectParameter("totPaymentsAmt", typeof(decimal));
    
            var totChargesAmtParameter = totChargesAmt.HasValue ?
                new ObjectParameter("totChargesAmt", totChargesAmt) :
                new ObjectParameter("totChargesAmt", typeof(decimal));
    
            var totAdjsAmtParameter = totAdjsAmt.HasValue ?
                new ObjectParameter("totAdjsAmt", totAdjsAmt) :
                new ObjectParameter("totAdjsAmt", typeof(decimal));
    
            var curBalAmtParameter = curBalAmt.HasValue ?
                new ObjectParameter("curBalAmt", curBalAmt) :
                new ObjectParameter("curBalAmt", typeof(decimal));
    
            var accountCloseDtParameter = accountCloseDt.HasValue ?
                new ObjectParameter("accountCloseDt", accountCloseDt) :
                new ObjectParameter("accountCloseDt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_UpdateAccountInformation", accountIdParameter, accountStatusCidParameter, badDebtSwParameter, totPaymentsAmtParameter, totChargesAmtParameter, totAdjsAmtParameter, curBalAmtParameter, accountCloseDtParameter);
        }
    
        public virtual int usp_HL7_UpdateEncounterInformation(Nullable<System.Guid> encounterId, Nullable<System.DateTime> modDt, Nullable<System.Guid> accountId, string statusCd, Nullable<int> patientClassCid, string vipSw, Nullable<int> patientTypeCid, Nullable<int> medSvcCid, Nullable<System.Guid> unitOrgId, Nullable<System.DateTime> beginDt, Nullable<int> ambulStatusCid, Nullable<System.DateTime> admitDt, string rm, string bed, Nullable<System.DateTime> dischargeDt, Nullable<int> dischargeDispoCid)
        {
            var encounterIdParameter = encounterId.HasValue ?
                new ObjectParameter("EncounterId", encounterId) :
                new ObjectParameter("EncounterId", typeof(System.Guid));
    
            var modDtParameter = modDt.HasValue ?
                new ObjectParameter("ModDt", modDt) :
                new ObjectParameter("ModDt", typeof(System.DateTime));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(System.Guid));
    
            var statusCdParameter = statusCd != null ?
                new ObjectParameter("StatusCd", statusCd) :
                new ObjectParameter("StatusCd", typeof(string));
    
            var patientClassCidParameter = patientClassCid.HasValue ?
                new ObjectParameter("PatientClassCid", patientClassCid) :
                new ObjectParameter("PatientClassCid", typeof(int));
    
            var vipSwParameter = vipSw != null ?
                new ObjectParameter("VipSw", vipSw) :
                new ObjectParameter("VipSw", typeof(string));
    
            var patientTypeCidParameter = patientTypeCid.HasValue ?
                new ObjectParameter("PatientTypeCid", patientTypeCid) :
                new ObjectParameter("PatientTypeCid", typeof(int));
    
            var medSvcCidParameter = medSvcCid.HasValue ?
                new ObjectParameter("MedSvcCid", medSvcCid) :
                new ObjectParameter("MedSvcCid", typeof(int));
    
            var unitOrgIdParameter = unitOrgId.HasValue ?
                new ObjectParameter("UnitOrgId", unitOrgId) :
                new ObjectParameter("UnitOrgId", typeof(System.Guid));
    
            var beginDtParameter = beginDt.HasValue ?
                new ObjectParameter("BeginDt", beginDt) :
                new ObjectParameter("BeginDt", typeof(System.DateTime));
    
            var ambulStatusCidParameter = ambulStatusCid.HasValue ?
                new ObjectParameter("AmbulStatusCid", ambulStatusCid) :
                new ObjectParameter("AmbulStatusCid", typeof(int));
    
            var admitDtParameter = admitDt.HasValue ?
                new ObjectParameter("AdmitDt", admitDt) :
                new ObjectParameter("AdmitDt", typeof(System.DateTime));
    
            var rmParameter = rm != null ?
                new ObjectParameter("Rm", rm) :
                new ObjectParameter("Rm", typeof(string));
    
            var bedParameter = bed != null ?
                new ObjectParameter("Bed", bed) :
                new ObjectParameter("Bed", typeof(string));
    
            var dischargeDtParameter = dischargeDt.HasValue ?
                new ObjectParameter("DischargeDt", dischargeDt) :
                new ObjectParameter("DischargeDt", typeof(System.DateTime));
    
            var dischargeDispoCidParameter = dischargeDispoCid.HasValue ?
                new ObjectParameter("DischargeDispoCid", dischargeDispoCid) :
                new ObjectParameter("DischargeDispoCid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_UpdateEncounterInformation", encounterIdParameter, modDtParameter, accountIdParameter, statusCdParameter, patientClassCidParameter, vipSwParameter, patientTypeCidParameter, medSvcCidParameter, unitOrgIdParameter, beginDtParameter, ambulStatusCidParameter, admitDtParameter, rmParameter, bedParameter, dischargeDtParameter, dischargeDispoCidParameter);
        }
    
        public virtual int usp_HL7_UpdateEncounterMapInformation(Nullable<System.Guid> encounterId, Nullable<System.Guid> accountId)
        {
            var encounterIdParameter = encounterId.HasValue ?
                new ObjectParameter("EncounterId", encounterId) :
                new ObjectParameter("EncounterId", typeof(System.Guid));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_UpdateEncounterMapInformation", encounterIdParameter, accountIdParameter);
        }
    
        public virtual int usp_HL7_UpdateHCPInformation(Nullable<System.Guid> hcpId, string lastNm, string firstNm, string middleNm, string degree)
        {
            var hcpIdParameter = hcpId.HasValue ?
                new ObjectParameter("hcpId", hcpId) :
                new ObjectParameter("hcpId", typeof(System.Guid));
    
            var lastNmParameter = lastNm != null ?
                new ObjectParameter("LastNm", lastNm) :
                new ObjectParameter("LastNm", typeof(string));
    
            var firstNmParameter = firstNm != null ?
                new ObjectParameter("FirstNm", firstNm) :
                new ObjectParameter("FirstNm", typeof(string));
    
            var middleNmParameter = middleNm != null ?
                new ObjectParameter("MiddleNm", middleNm) :
                new ObjectParameter("MiddleNm", typeof(string));
    
            var degreeParameter = degree != null ?
                new ObjectParameter("Degree", degree) :
                new ObjectParameter("Degree", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_UpdateHCPInformation", hcpIdParameter, lastNmParameter, firstNmParameter, middleNmParameter, degreeParameter);
        }
    
        public virtual int usp_HL7_UpdateInboundMessageResponse(Nullable<int> messageNo, string messageResponse)
        {
            var messageNoParameter = messageNo.HasValue ?
                new ObjectParameter("MessageNo", messageNo) :
                new ObjectParameter("MessageNo", typeof(int));
    
            var messageResponseParameter = messageResponse != null ?
                new ObjectParameter("MessageResponse", messageResponse) :
                new ObjectParameter("MessageResponse", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_UpdateInboundMessageResponse", messageNoParameter, messageResponseParameter);
        }
    
        public virtual int usp_HL7_UpdateInboundMessageStatus(string messageStatus, Nullable<int> messageNo)
        {
            var messageStatusParameter = messageStatus != null ?
                new ObjectParameter("MessageStatus", messageStatus) :
                new ObjectParameter("MessageStatus", typeof(string));
    
            var messageNoParameter = messageNo.HasValue ?
                new ObjectParameter("MessageNo", messageNo) :
                new ObjectParameter("MessageNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_UpdateInboundMessageStatus", messageStatusParameter, messageNoParameter);
        }
    
        public virtual int usp_HL7_UpdateMrnInformation(string mrn1, Nullable<System.Guid> patientId, string mrn2)
        {
            var mrn1Parameter = mrn1 != null ?
                new ObjectParameter("mrn1", mrn1) :
                new ObjectParameter("mrn1", typeof(string));
    
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            var mrn2Parameter = mrn2 != null ?
                new ObjectParameter("mrn2", mrn2) :
                new ObjectParameter("mrn2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_UpdateMrnInformation", mrn1Parameter, patientIdParameter, mrn2Parameter);
        }
    
        public virtual int usp_HL7_UpdatePatientInfo(Nullable<System.Guid> patientId, string mrn1, string mrn2, string firstNm, string middleNm, string lastNm, Nullable<System.DateTime> dob, Nullable<int> genderCid)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            var mrn1Parameter = mrn1 != null ?
                new ObjectParameter("mrn1", mrn1) :
                new ObjectParameter("mrn1", typeof(string));
    
            var mrn2Parameter = mrn2 != null ?
                new ObjectParameter("mrn2", mrn2) :
                new ObjectParameter("mrn2", typeof(string));
    
            var firstNmParameter = firstNm != null ?
                new ObjectParameter("FirstNm", firstNm) :
                new ObjectParameter("FirstNm", typeof(string));
    
            var middleNmParameter = middleNm != null ?
                new ObjectParameter("MiddleNm", middleNm) :
                new ObjectParameter("MiddleNm", typeof(string));
    
            var lastNmParameter = lastNm != null ?
                new ObjectParameter("LastNm", lastNm) :
                new ObjectParameter("LastNm", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var genderCidParameter = genderCid.HasValue ?
                new ObjectParameter("GenderCid", genderCid) :
                new ObjectParameter("GenderCid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_UpdatePatientInfo", patientIdParameter, mrn1Parameter, mrn2Parameter, firstNmParameter, middleNmParameter, lastNmParameter, dobParameter, genderCidParameter);
        }
    
        public virtual int usp_HL7_UpdatePatientInformation(Nullable<System.Guid> patientId, Nullable<byte> birthOrder, Nullable<int> veteranStatusCid, string birthPlace, string ssn, string drivLicNo, string drivLicStateCode, string dob, string deathdt, Nullable<int> nationalityCid, Nullable<int> citizenshipCid, Nullable<int> ethnicGroupCid, Nullable<int> raceCid, Nullable<int> genderCid, Nullable<int> primaryLanguageCid, Nullable<int> maritalStatusCid, Nullable<int> religionCid, string livingWillSw, string organDonorSw)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            var birthOrderParameter = birthOrder.HasValue ?
                new ObjectParameter("BirthOrder", birthOrder) :
                new ObjectParameter("BirthOrder", typeof(byte));
    
            var veteranStatusCidParameter = veteranStatusCid.HasValue ?
                new ObjectParameter("VeteranStatusCid", veteranStatusCid) :
                new ObjectParameter("VeteranStatusCid", typeof(int));
    
            var birthPlaceParameter = birthPlace != null ?
                new ObjectParameter("BirthPlace", birthPlace) :
                new ObjectParameter("BirthPlace", typeof(string));
    
            var ssnParameter = ssn != null ?
                new ObjectParameter("Ssn", ssn) :
                new ObjectParameter("Ssn", typeof(string));
    
            var drivLicNoParameter = drivLicNo != null ?
                new ObjectParameter("DrivLicNo", drivLicNo) :
                new ObjectParameter("DrivLicNo", typeof(string));
    
            var drivLicStateCodeParameter = drivLicStateCode != null ?
                new ObjectParameter("DrivLicStateCode", drivLicStateCode) :
                new ObjectParameter("DrivLicStateCode", typeof(string));
    
            var dobParameter = dob != null ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(string));
    
            var deathdtParameter = deathdt != null ?
                new ObjectParameter("deathdt", deathdt) :
                new ObjectParameter("deathdt", typeof(string));
    
            var nationalityCidParameter = nationalityCid.HasValue ?
                new ObjectParameter("NationalityCid", nationalityCid) :
                new ObjectParameter("NationalityCid", typeof(int));
    
            var citizenshipCidParameter = citizenshipCid.HasValue ?
                new ObjectParameter("CitizenshipCid", citizenshipCid) :
                new ObjectParameter("CitizenshipCid", typeof(int));
    
            var ethnicGroupCidParameter = ethnicGroupCid.HasValue ?
                new ObjectParameter("EthnicGroupCid", ethnicGroupCid) :
                new ObjectParameter("EthnicGroupCid", typeof(int));
    
            var raceCidParameter = raceCid.HasValue ?
                new ObjectParameter("RaceCid", raceCid) :
                new ObjectParameter("RaceCid", typeof(int));
    
            var genderCidParameter = genderCid.HasValue ?
                new ObjectParameter("GenderCid", genderCid) :
                new ObjectParameter("GenderCid", typeof(int));
    
            var primaryLanguageCidParameter = primaryLanguageCid.HasValue ?
                new ObjectParameter("PrimaryLanguageCid", primaryLanguageCid) :
                new ObjectParameter("PrimaryLanguageCid", typeof(int));
    
            var maritalStatusCidParameter = maritalStatusCid.HasValue ?
                new ObjectParameter("MaritalStatusCid", maritalStatusCid) :
                new ObjectParameter("MaritalStatusCid", typeof(int));
    
            var religionCidParameter = religionCid.HasValue ?
                new ObjectParameter("ReligionCid", religionCid) :
                new ObjectParameter("ReligionCid", typeof(int));
    
            var livingWillSwParameter = livingWillSw != null ?
                new ObjectParameter("LivingWillSw", livingWillSw) :
                new ObjectParameter("LivingWillSw", typeof(string));
    
            var organDonorSwParameter = organDonorSw != null ?
                new ObjectParameter("OrganDonorSw", organDonorSw) :
                new ObjectParameter("OrganDonorSw", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_UpdatePatientInformation", patientIdParameter, birthOrderParameter, veteranStatusCidParameter, birthPlaceParameter, ssnParameter, drivLicNoParameter, drivLicStateCodeParameter, dobParameter, deathdtParameter, nationalityCidParameter, citizenshipCidParameter, ethnicGroupCidParameter, raceCidParameter, genderCidParameter, primaryLanguageCidParameter, maritalStatusCidParameter, religionCidParameter, livingWillSwParameter, organDonorSwParameter);
        }
    
        public virtual int usp_HL7_UpdatePatientVisitInformation(Nullable<System.Guid> encounterId, Nullable<System.DateTime> modDt, Nullable<System.Guid> accountId, string statusCd, Nullable<int> patientClassCid, string vipSw, Nullable<int> patientTypeCid, Nullable<System.Guid> unitOrgId, Nullable<System.DateTime> admitDt, string rm, string bed, Nullable<System.DateTime> dischargeDt, Nullable<System.DateTime> messageDateTime)
        {
            var encounterIdParameter = encounterId.HasValue ?
                new ObjectParameter("EncounterId", encounterId) :
                new ObjectParameter("EncounterId", typeof(System.Guid));
    
            var modDtParameter = modDt.HasValue ?
                new ObjectParameter("ModDt", modDt) :
                new ObjectParameter("ModDt", typeof(System.DateTime));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(System.Guid));
    
            var statusCdParameter = statusCd != null ?
                new ObjectParameter("StatusCd", statusCd) :
                new ObjectParameter("StatusCd", typeof(string));
    
            var patientClassCidParameter = patientClassCid.HasValue ?
                new ObjectParameter("PatientClassCid", patientClassCid) :
                new ObjectParameter("PatientClassCid", typeof(int));
    
            var vipSwParameter = vipSw != null ?
                new ObjectParameter("VipSw", vipSw) :
                new ObjectParameter("VipSw", typeof(string));
    
            var patientTypeCidParameter = patientTypeCid.HasValue ?
                new ObjectParameter("PatientTypeCid", patientTypeCid) :
                new ObjectParameter("PatientTypeCid", typeof(int));
    
            var unitOrgIdParameter = unitOrgId.HasValue ?
                new ObjectParameter("UnitOrgId", unitOrgId) :
                new ObjectParameter("UnitOrgId", typeof(System.Guid));
    
            var admitDtParameter = admitDt.HasValue ?
                new ObjectParameter("AdmitDt", admitDt) :
                new ObjectParameter("AdmitDt", typeof(System.DateTime));
    
            var rmParameter = rm != null ?
                new ObjectParameter("Rm", rm) :
                new ObjectParameter("Rm", typeof(string));
    
            var bedParameter = bed != null ?
                new ObjectParameter("Bed", bed) :
                new ObjectParameter("Bed", typeof(string));
    
            var dischargeDtParameter = dischargeDt.HasValue ?
                new ObjectParameter("DischargeDt", dischargeDt) :
                new ObjectParameter("DischargeDt", typeof(System.DateTime));
    
            var messageDateTimeParameter = messageDateTime.HasValue ?
                new ObjectParameter("MessageDateTime", messageDateTime) :
                new ObjectParameter("MessageDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_UpdatePatientVisitInformation", encounterIdParameter, modDtParameter, accountIdParameter, statusCdParameter, patientClassCidParameter, vipSwParameter, patientTypeCidParameter, unitOrgIdParameter, admitDtParameter, rmParameter, bedParameter, dischargeDtParameter, messageDateTimeParameter);
        }
    
        public virtual int usp_HL7_UpdatePersonDemographics(Nullable<System.Guid> personId, string firstNm, string lastNm, string middleNm, string telNo, string cityNm, string stateCode, string zipCode, string suffix, string line1Dsc, string line2Dsc, Nullable<int> countryCid)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(System.Guid));
    
            var firstNmParameter = firstNm != null ?
                new ObjectParameter("FirstNm", firstNm) :
                new ObjectParameter("FirstNm", typeof(string));
    
            var lastNmParameter = lastNm != null ?
                new ObjectParameter("LastNm", lastNm) :
                new ObjectParameter("LastNm", typeof(string));
    
            var middleNmParameter = middleNm != null ?
                new ObjectParameter("MiddleNm", middleNm) :
                new ObjectParameter("MiddleNm", typeof(string));
    
            var telNoParameter = telNo != null ?
                new ObjectParameter("TelNo", telNo) :
                new ObjectParameter("TelNo", typeof(string));
    
            var cityNmParameter = cityNm != null ?
                new ObjectParameter("CityNm", cityNm) :
                new ObjectParameter("CityNm", typeof(string));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("Suffix", suffix) :
                new ObjectParameter("Suffix", typeof(string));
    
            var line1DscParameter = line1Dsc != null ?
                new ObjectParameter("Line1Dsc", line1Dsc) :
                new ObjectParameter("Line1Dsc", typeof(string));
    
            var line2DscParameter = line2Dsc != null ?
                new ObjectParameter("Line2Dsc", line2Dsc) :
                new ObjectParameter("Line2Dsc", typeof(string));
    
            var countryCidParameter = countryCid.HasValue ?
                new ObjectParameter("CountryCid", countryCid) :
                new ObjectParameter("CountryCid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_HL7_UpdatePersonDemographics", personIdParameter, firstNmParameter, lastNmParameter, middleNmParameter, telNoParameter, cityNmParameter, stateCodeParameter, zipCodeParameter, suffixParameter, line1DscParameter, line2DscParameter, countryCidParameter);
        }
    
        public virtual ObjectResult<usp_IcsPrintSvc_GetActivePrintItem_Result> usp_IcsPrintSvc_GetActivePrintItem(Nullable<System.Guid> fActivePrintJobId, Nullable<byte> nullBooleanTrue)
        {
            var fActivePrintJobIdParameter = fActivePrintJobId.HasValue ?
                new ObjectParameter("FActivePrintJobId", fActivePrintJobId) :
                new ObjectParameter("FActivePrintJobId", typeof(System.Guid));
    
            var nullBooleanTrueParameter = nullBooleanTrue.HasValue ?
                new ObjectParameter("NullBooleanTrue", nullBooleanTrue) :
                new ObjectParameter("NullBooleanTrue", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IcsPrintSvc_GetActivePrintItem_Result>("usp_IcsPrintSvc_GetActivePrintItem", fActivePrintJobIdParameter, nullBooleanTrueParameter);
        }
    
        public virtual ObjectResult<usp_IcsPrintSvc_LoadPrintItems_Result> usp_IcsPrintSvc_LoadPrintItems(Nullable<byte> nullBooleanTrue)
        {
            var nullBooleanTrueParameter = nullBooleanTrue.HasValue ?
                new ObjectParameter("NullBooleanTrue", nullBooleanTrue) :
                new ObjectParameter("NullBooleanTrue", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IcsPrintSvc_LoadPrintItems_Result>("usp_IcsPrintSvc_LoadPrintItems", nullBooleanTrueParameter);
        }
    
        public virtual int usp_InsertAccountInformation(Nullable<System.Guid> accountId, Nullable<System.Guid> orgId, string accountNumber, Nullable<int> accountStatusCid, Nullable<byte> badDebtSw, Nullable<decimal> totPaymentsAmt, Nullable<decimal> totChargesAmt, Nullable<decimal> totAdjsAmt, Nullable<decimal> curBalAmt, Nullable<System.DateTime> accountOpenDt, Nullable<System.DateTime> accountCloseDt)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(System.Guid));
    
            var orgIdParameter = orgId.HasValue ?
                new ObjectParameter("orgId", orgId) :
                new ObjectParameter("orgId", typeof(System.Guid));
    
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("accountNumber", accountNumber) :
                new ObjectParameter("accountNumber", typeof(string));
    
            var accountStatusCidParameter = accountStatusCid.HasValue ?
                new ObjectParameter("accountStatusCid", accountStatusCid) :
                new ObjectParameter("accountStatusCid", typeof(int));
    
            var badDebtSwParameter = badDebtSw.HasValue ?
                new ObjectParameter("badDebtSw", badDebtSw) :
                new ObjectParameter("badDebtSw", typeof(byte));
    
            var totPaymentsAmtParameter = totPaymentsAmt.HasValue ?
                new ObjectParameter("totPaymentsAmt", totPaymentsAmt) :
                new ObjectParameter("totPaymentsAmt", typeof(decimal));
    
            var totChargesAmtParameter = totChargesAmt.HasValue ?
                new ObjectParameter("totChargesAmt", totChargesAmt) :
                new ObjectParameter("totChargesAmt", typeof(decimal));
    
            var totAdjsAmtParameter = totAdjsAmt.HasValue ?
                new ObjectParameter("totAdjsAmt", totAdjsAmt) :
                new ObjectParameter("totAdjsAmt", typeof(decimal));
    
            var curBalAmtParameter = curBalAmt.HasValue ?
                new ObjectParameter("curBalAmt", curBalAmt) :
                new ObjectParameter("curBalAmt", typeof(decimal));
    
            var accountOpenDtParameter = accountOpenDt.HasValue ?
                new ObjectParameter("accountOpenDt", accountOpenDt) :
                new ObjectParameter("accountOpenDt", typeof(System.DateTime));
    
            var accountCloseDtParameter = accountCloseDt.HasValue ?
                new ObjectParameter("accountCloseDt", accountCloseDt) :
                new ObjectParameter("accountCloseDt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertAccountInformation", accountIdParameter, orgIdParameter, accountNumberParameter, accountStatusCidParameter, badDebtSwParameter, totPaymentsAmtParameter, totChargesAmtParameter, totAdjsAmtParameter, curBalAmtParameter, accountOpenDtParameter, accountCloseDtParameter);
        }
    
        public virtual int usp_InsertEncounterInformation(Nullable<System.Guid> encounterId, Nullable<System.Guid> orgId, Nullable<System.DateTime> modDt, Nullable<System.Guid> patientId, Nullable<System.Guid> orgPatientId, Nullable<System.Guid> accountId, string statusCd, Nullable<int> publicityCid, Nullable<int> dietTypeCid, Nullable<int> patientClassCid, Nullable<int> protectionTypeCid, string vipSw, Nullable<int> isolationTypeCid, Nullable<int> securityTypeCid, Nullable<int> patientTypeCid, Nullable<System.Guid> admitHcpId, Nullable<int> medSvcCid, Nullable<System.Guid> referringHcpId, Nullable<System.Guid> unitOrgId, Nullable<System.Guid> attendHcpId, Nullable<System.Guid> primaryCareHcpId, Nullable<int> fallRiskTypeCid, Nullable<System.DateTime> beginDt, Nullable<int> ambulStatusCid, Nullable<System.DateTime> admitDt, string babyCd, string rm, string recurringCd, string bed, Nullable<System.DateTime> discharge_dt, string newbornSw, Nullable<int> dischargeDispoCid, Nullable<byte> monitorCreated, string comment)
        {
            var encounterIdParameter = encounterId.HasValue ?
                new ObjectParameter("EncounterId", encounterId) :
                new ObjectParameter("EncounterId", typeof(System.Guid));
    
            var orgIdParameter = orgId.HasValue ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(System.Guid));
    
            var modDtParameter = modDt.HasValue ?
                new ObjectParameter("ModDt", modDt) :
                new ObjectParameter("ModDt", typeof(System.DateTime));
    
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            var orgPatientIdParameter = orgPatientId.HasValue ?
                new ObjectParameter("OrgPatientId", orgPatientId) :
                new ObjectParameter("OrgPatientId", typeof(System.Guid));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(System.Guid));
    
            var statusCdParameter = statusCd != null ?
                new ObjectParameter("StatusCd", statusCd) :
                new ObjectParameter("StatusCd", typeof(string));
    
            var publicityCidParameter = publicityCid.HasValue ?
                new ObjectParameter("PublicityCid", publicityCid) :
                new ObjectParameter("PublicityCid", typeof(int));
    
            var dietTypeCidParameter = dietTypeCid.HasValue ?
                new ObjectParameter("DietTypeCid", dietTypeCid) :
                new ObjectParameter("DietTypeCid", typeof(int));
    
            var patientClassCidParameter = patientClassCid.HasValue ?
                new ObjectParameter("PatientClassCid", patientClassCid) :
                new ObjectParameter("PatientClassCid", typeof(int));
    
            var protectionTypeCidParameter = protectionTypeCid.HasValue ?
                new ObjectParameter("protectionTypeCid", protectionTypeCid) :
                new ObjectParameter("protectionTypeCid", typeof(int));
    
            var vipSwParameter = vipSw != null ?
                new ObjectParameter("VipSw", vipSw) :
                new ObjectParameter("VipSw", typeof(string));
    
            var isolationTypeCidParameter = isolationTypeCid.HasValue ?
                new ObjectParameter("IsolationTypeCid", isolationTypeCid) :
                new ObjectParameter("IsolationTypeCid", typeof(int));
    
            var securityTypeCidParameter = securityTypeCid.HasValue ?
                new ObjectParameter("SecurityTypeCid", securityTypeCid) :
                new ObjectParameter("SecurityTypeCid", typeof(int));
    
            var patientTypeCidParameter = patientTypeCid.HasValue ?
                new ObjectParameter("PatientTypeCid", patientTypeCid) :
                new ObjectParameter("PatientTypeCid", typeof(int));
    
            var admitHcpIdParameter = admitHcpId.HasValue ?
                new ObjectParameter("AdmitHcpId", admitHcpId) :
                new ObjectParameter("AdmitHcpId", typeof(System.Guid));
    
            var medSvcCidParameter = medSvcCid.HasValue ?
                new ObjectParameter("MedSvcCid", medSvcCid) :
                new ObjectParameter("MedSvcCid", typeof(int));
    
            var referringHcpIdParameter = referringHcpId.HasValue ?
                new ObjectParameter("ReferringHcpId", referringHcpId) :
                new ObjectParameter("ReferringHcpId", typeof(System.Guid));
    
            var unitOrgIdParameter = unitOrgId.HasValue ?
                new ObjectParameter("UnitOrgId", unitOrgId) :
                new ObjectParameter("UnitOrgId", typeof(System.Guid));
    
            var attendHcpIdParameter = attendHcpId.HasValue ?
                new ObjectParameter("AttendHcpId", attendHcpId) :
                new ObjectParameter("AttendHcpId", typeof(System.Guid));
    
            var primaryCareHcpIdParameter = primaryCareHcpId.HasValue ?
                new ObjectParameter("PrimaryCareHcpId", primaryCareHcpId) :
                new ObjectParameter("PrimaryCareHcpId", typeof(System.Guid));
    
            var fallRiskTypeCidParameter = fallRiskTypeCid.HasValue ?
                new ObjectParameter("FallRiskTypeCid", fallRiskTypeCid) :
                new ObjectParameter("FallRiskTypeCid", typeof(int));
    
            var beginDtParameter = beginDt.HasValue ?
                new ObjectParameter("BeginDt", beginDt) :
                new ObjectParameter("BeginDt", typeof(System.DateTime));
    
            var ambulStatusCidParameter = ambulStatusCid.HasValue ?
                new ObjectParameter("AmbulStatusCid", ambulStatusCid) :
                new ObjectParameter("AmbulStatusCid", typeof(int));
    
            var admitDtParameter = admitDt.HasValue ?
                new ObjectParameter("AdmitDt", admitDt) :
                new ObjectParameter("AdmitDt", typeof(System.DateTime));
    
            var babyCdParameter = babyCd != null ?
                new ObjectParameter("BabyCd", babyCd) :
                new ObjectParameter("BabyCd", typeof(string));
    
            var rmParameter = rm != null ?
                new ObjectParameter("Rm", rm) :
                new ObjectParameter("Rm", typeof(string));
    
            var recurringCdParameter = recurringCd != null ?
                new ObjectParameter("RecurringCd", recurringCd) :
                new ObjectParameter("RecurringCd", typeof(string));
    
            var bedParameter = bed != null ?
                new ObjectParameter("Bed", bed) :
                new ObjectParameter("Bed", typeof(string));
    
            var discharge_dtParameter = discharge_dt.HasValue ?
                new ObjectParameter("Discharge_dt", discharge_dt) :
                new ObjectParameter("Discharge_dt", typeof(System.DateTime));
    
            var newbornSwParameter = newbornSw != null ?
                new ObjectParameter("NewbornSw", newbornSw) :
                new ObjectParameter("NewbornSw", typeof(string));
    
            var dischargeDispoCidParameter = dischargeDispoCid.HasValue ?
                new ObjectParameter("DischargeDispoCid", dischargeDispoCid) :
                new ObjectParameter("DischargeDispoCid", typeof(int));
    
            var monitorCreatedParameter = monitorCreated.HasValue ?
                new ObjectParameter("MonitorCreated", monitorCreated) :
                new ObjectParameter("MonitorCreated", typeof(byte));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertEncounterInformation", encounterIdParameter, orgIdParameter, modDtParameter, patientIdParameter, orgPatientIdParameter, accountIdParameter, statusCdParameter, publicityCidParameter, dietTypeCidParameter, patientClassCidParameter, protectionTypeCidParameter, vipSwParameter, isolationTypeCidParameter, securityTypeCidParameter, patientTypeCidParameter, admitHcpIdParameter, medSvcCidParameter, referringHcpIdParameter, unitOrgIdParameter, attendHcpIdParameter, primaryCareHcpIdParameter, fallRiskTypeCidParameter, beginDtParameter, ambulStatusCidParameter, admitDtParameter, babyCdParameter, rmParameter, recurringCdParameter, bedParameter, discharge_dtParameter, newbornSwParameter, dischargeDispoCidParameter, monitorCreatedParameter, commentParameter);
        }
    
        public virtual int usp_InsertEncounterMapInformation(string encounterXid, Nullable<System.Guid> orgId, Nullable<System.Guid> encounterId, Nullable<System.Guid> patientId, Nullable<int> seqNo, Nullable<System.Guid> orgPatientId, string statusCd, string eventCd, Nullable<System.Guid> accountId)
        {
            var encounterXidParameter = encounterXid != null ?
                new ObjectParameter("EncounterXid", encounterXid) :
                new ObjectParameter("EncounterXid", typeof(string));
    
            var orgIdParameter = orgId.HasValue ?
                new ObjectParameter("OrgId", orgId) :
                new ObjectParameter("OrgId", typeof(System.Guid));
    
            var encounterIdParameter = encounterId.HasValue ?
                new ObjectParameter("EncounterId", encounterId) :
                new ObjectParameter("EncounterId", typeof(System.Guid));
    
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            var seqNoParameter = seqNo.HasValue ?
                new ObjectParameter("SeqNo", seqNo) :
                new ObjectParameter("SeqNo", typeof(int));
    
            var orgPatientIdParameter = orgPatientId.HasValue ?
                new ObjectParameter("OrgPatientId", orgPatientId) :
                new ObjectParameter("OrgPatientId", typeof(System.Guid));
    
            var statusCdParameter = statusCd != null ?
                new ObjectParameter("StatusCd", statusCd) :
                new ObjectParameter("StatusCd", typeof(string));
    
            var eventCdParameter = eventCd != null ?
                new ObjectParameter("EventCd", eventCd) :
                new ObjectParameter("EventCd", typeof(string));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertEncounterMapInformation", encounterXidParameter, orgIdParameter, encounterIdParameter, patientIdParameter, seqNoParameter, orgPatientIdParameter, statusCdParameter, eventCdParameter, accountIdParameter);
        }
    
        public virtual int usp_InsertMiscCodeDetails(Nullable<int> codeId, Nullable<System.Guid> organizationId, Nullable<System.Guid> sysId, string category_cd, string method_cd, string code, Nullable<byte> verification_sw, string int_keystone_cd, string short_dsc, string spc_pcs_code)
        {
            var codeIdParameter = codeId.HasValue ?
                new ObjectParameter("codeId", codeId) :
                new ObjectParameter("codeId", typeof(int));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("organizationId", organizationId) :
                new ObjectParameter("organizationId", typeof(System.Guid));
    
            var sysIdParameter = sysId.HasValue ?
                new ObjectParameter("sysId", sysId) :
                new ObjectParameter("sysId", typeof(System.Guid));
    
            var category_cdParameter = category_cd != null ?
                new ObjectParameter("category_cd", category_cd) :
                new ObjectParameter("category_cd", typeof(string));
    
            var method_cdParameter = method_cd != null ?
                new ObjectParameter("method_cd", method_cd) :
                new ObjectParameter("method_cd", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var verification_swParameter = verification_sw.HasValue ?
                new ObjectParameter("verification_sw", verification_sw) :
                new ObjectParameter("verification_sw", typeof(byte));
    
            var int_keystone_cdParameter = int_keystone_cd != null ?
                new ObjectParameter("int_keystone_cd", int_keystone_cd) :
                new ObjectParameter("int_keystone_cd", typeof(string));
    
            var short_dscParameter = short_dsc != null ?
                new ObjectParameter("short_dsc", short_dsc) :
                new ObjectParameter("short_dsc", typeof(string));
    
            var spc_pcs_codeParameter = spc_pcs_code != null ?
                new ObjectParameter("spc_pcs_code", spc_pcs_code) :
                new ObjectParameter("spc_pcs_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertMiscCodeDetails", codeIdParameter, organizationIdParameter, sysIdParameter, category_cdParameter, method_cdParameter, codeParameter, verification_swParameter, int_keystone_cdParameter, short_dscParameter, spc_pcs_codeParameter);
        }
    
        public virtual int usp_InsertMrnInformation(Nullable<System.Guid> organizationId, string mrn1, Nullable<System.Guid> patientId, Nullable<System.Guid> orgPatientId, Nullable<System.Guid> priorPatientId, string mrn2, Nullable<byte> adtAdmsw)
        {
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("organizationId", organizationId) :
                new ObjectParameter("organizationId", typeof(System.Guid));
    
            var mrn1Parameter = mrn1 != null ?
                new ObjectParameter("mrn1", mrn1) :
                new ObjectParameter("mrn1", typeof(string));
    
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            var orgPatientIdParameter = orgPatientId.HasValue ?
                new ObjectParameter("orgPatientId", orgPatientId) :
                new ObjectParameter("orgPatientId", typeof(System.Guid));
    
            var priorPatientIdParameter = priorPatientId.HasValue ?
                new ObjectParameter("priorPatientId", priorPatientId) :
                new ObjectParameter("priorPatientId", typeof(System.Guid));
    
            var mrn2Parameter = mrn2 != null ?
                new ObjectParameter("mrn2", mrn2) :
                new ObjectParameter("mrn2", typeof(string));
    
            var adtAdmswParameter = adtAdmsw.HasValue ?
                new ObjectParameter("AdtAdmsw", adtAdmsw) :
                new ObjectParameter("AdtAdmsw", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertMrnInformation", organizationIdParameter, mrn1Parameter, patientIdParameter, orgPatientIdParameter, priorPatientIdParameter, mrn2Parameter, adtAdmswParameter);
        }
    
        public virtual int usp_InsertOrganizationInformation(Nullable<System.Guid> organizationId, string categoryCd, Nullable<System.Guid> parentOrganizationId, string organizationCd, string organizationNm, Nullable<byte> inDefaultSearch, Nullable<byte> monitorDisableSw, Nullable<int> autoCollectInterval, Nullable<int> outboundInterval, string printerName, string alarmPrinterName)
        {
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("organizationId", organizationId) :
                new ObjectParameter("organizationId", typeof(System.Guid));
    
            var categoryCdParameter = categoryCd != null ?
                new ObjectParameter("categoryCd", categoryCd) :
                new ObjectParameter("categoryCd", typeof(string));
    
            var parentOrganizationIdParameter = parentOrganizationId.HasValue ?
                new ObjectParameter("parentOrganizationId", parentOrganizationId) :
                new ObjectParameter("parentOrganizationId", typeof(System.Guid));
    
            var organizationCdParameter = organizationCd != null ?
                new ObjectParameter("organizationCd", organizationCd) :
                new ObjectParameter("organizationCd", typeof(string));
    
            var organizationNmParameter = organizationNm != null ?
                new ObjectParameter("organizationNm", organizationNm) :
                new ObjectParameter("organizationNm", typeof(string));
    
            var inDefaultSearchParameter = inDefaultSearch.HasValue ?
                new ObjectParameter("inDefaultSearch", inDefaultSearch) :
                new ObjectParameter("inDefaultSearch", typeof(byte));
    
            var monitorDisableSwParameter = monitorDisableSw.HasValue ?
                new ObjectParameter("monitorDisableSw", monitorDisableSw) :
                new ObjectParameter("monitorDisableSw", typeof(byte));
    
            var autoCollectIntervalParameter = autoCollectInterval.HasValue ?
                new ObjectParameter("autoCollectInterval", autoCollectInterval) :
                new ObjectParameter("autoCollectInterval", typeof(int));
    
            var outboundIntervalParameter = outboundInterval.HasValue ?
                new ObjectParameter("outboundInterval", outboundInterval) :
                new ObjectParameter("outboundInterval", typeof(int));
    
            var printerNameParameter = printerName != null ?
                new ObjectParameter("printerName", printerName) :
                new ObjectParameter("printerName", typeof(string));
    
            var alarmPrinterNameParameter = alarmPrinterName != null ?
                new ObjectParameter("alarmPrinterName", alarmPrinterName) :
                new ObjectParameter("alarmPrinterName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertOrganizationInformation", organizationIdParameter, categoryCdParameter, parentOrganizationIdParameter, organizationCdParameter, organizationNmParameter, inDefaultSearchParameter, monitorDisableSwParameter, autoCollectIntervalParameter, outboundIntervalParameter, printerNameParameter, alarmPrinterNameParameter);
        }
    
        public virtual int usp_InsertPersonDemographics(Nullable<System.Guid> personId, string recognizeNmCd, Nullable<int> seqNo, Nullable<byte> activeSw, Nullable<System.Guid> origPatientId, string prefix, string firstNm, string middleNm, string lastNm, string suffix, string degree, string mpiLnamecons, string mpiFnameCons, string mpiMnameCons, Nullable<System.DateTime> startDt)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(System.Guid));
    
            var recognizeNmCdParameter = recognizeNmCd != null ?
                new ObjectParameter("RecognizeNmCd", recognizeNmCd) :
                new ObjectParameter("RecognizeNmCd", typeof(string));
    
            var seqNoParameter = seqNo.HasValue ?
                new ObjectParameter("SeqNo", seqNo) :
                new ObjectParameter("SeqNo", typeof(int));
    
            var activeSwParameter = activeSw.HasValue ?
                new ObjectParameter("ActiveSw", activeSw) :
                new ObjectParameter("ActiveSw", typeof(byte));
    
            var origPatientIdParameter = origPatientId.HasValue ?
                new ObjectParameter("OrigPatientId", origPatientId) :
                new ObjectParameter("OrigPatientId", typeof(System.Guid));
    
            var prefixParameter = prefix != null ?
                new ObjectParameter("Prefix", prefix) :
                new ObjectParameter("Prefix", typeof(string));
    
            var firstNmParameter = firstNm != null ?
                new ObjectParameter("FirstNm", firstNm) :
                new ObjectParameter("FirstNm", typeof(string));
    
            var middleNmParameter = middleNm != null ?
                new ObjectParameter("MiddleNm", middleNm) :
                new ObjectParameter("MiddleNm", typeof(string));
    
            var lastNmParameter = lastNm != null ?
                new ObjectParameter("LastNm", lastNm) :
                new ObjectParameter("LastNm", typeof(string));
    
            var suffixParameter = suffix != null ?
                new ObjectParameter("Suffix", suffix) :
                new ObjectParameter("Suffix", typeof(string));
    
            var degreeParameter = degree != null ?
                new ObjectParameter("Degree", degree) :
                new ObjectParameter("Degree", typeof(string));
    
            var mpiLnameconsParameter = mpiLnamecons != null ?
                new ObjectParameter("mpiLnamecons", mpiLnamecons) :
                new ObjectParameter("mpiLnamecons", typeof(string));
    
            var mpiFnameConsParameter = mpiFnameCons != null ?
                new ObjectParameter("mpiFnameCons", mpiFnameCons) :
                new ObjectParameter("mpiFnameCons", typeof(string));
    
            var mpiMnameConsParameter = mpiMnameCons != null ?
                new ObjectParameter("mpiMnameCons", mpiMnameCons) :
                new ObjectParameter("mpiMnameCons", typeof(string));
    
            var startDtParameter = startDt.HasValue ?
                new ObjectParameter("startDt", startDt) :
                new ObjectParameter("startDt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertPersonDemographics", personIdParameter, recognizeNmCdParameter, seqNoParameter, activeSwParameter, origPatientIdParameter, prefixParameter, firstNmParameter, middleNmParameter, lastNmParameter, suffixParameter, degreeParameter, mpiLnameconsParameter, mpiFnameConsParameter, mpiMnameConsParameter, startDtParameter);
        }
    
        public virtual int usp_InsertSendingSystemInformation(Nullable<System.Guid> sysId, Nullable<System.Guid> organizationId, string code, string dsc)
        {
            var sysIdParameter = sysId.HasValue ?
                new ObjectParameter("SysId", sysId) :
                new ObjectParameter("SysId", typeof(System.Guid));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("OrganizationId", organizationId) :
                new ObjectParameter("OrganizationId", typeof(System.Guid));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var dscParameter = dsc != null ?
                new ObjectParameter("dsc", dsc) :
                new ObjectParameter("dsc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertSendingSystemInformation", sysIdParameter, organizationIdParameter, codeParameter, dscParameter);
        }
    
        public virtual int usp_InsertSendSysDetails(Nullable<System.Guid> sys_id, Nullable<System.Guid> organization_id, string code, string dsc)
        {
            var sys_idParameter = sys_id.HasValue ?
                new ObjectParameter("sys_id", sys_id) :
                new ObjectParameter("sys_id", typeof(System.Guid));
    
            var organization_idParameter = organization_id.HasValue ?
                new ObjectParameter("organization_id", organization_id) :
                new ObjectParameter("organization_id", typeof(System.Guid));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var dscParameter = dsc != null ?
                new ObjectParameter("dsc", dsc) :
                new ObjectParameter("dsc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertSendSysDetails", sys_idParameter, organization_idParameter, codeParameter, dscParameter);
        }
    
        public virtual ObjectResult<string> usp_IsVIPPatient(string mrn_xid)
        {
            var mrn_xidParameter = mrn_xid != null ?
                new ObjectParameter("mrn_xid", mrn_xid) :
                new ObjectParameter("mrn_xid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_IsVIPPatient", mrn_xidParameter);
        }
    
        public virtual int usp_PM_CopyETVitalsAndWaveforms()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PM_CopyETVitalsAndWaveforms");
        }
    
        public virtual int usp_PM_CopyETVitalsData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PM_CopyETVitalsData");
        }
    
        public virtual int usp_PM_CopyETWaveformData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PM_CopyETWaveformData");
        }
    
        public virtual ObjectResult<usp_PM_GetAlarmData_Result> usp_PM_GetAlarmData(Nullable<System.Guid> alarmId, string locale)
        {
            var alarmIdParameter = alarmId.HasValue ?
                new ObjectParameter("alarmId", alarmId) :
                new ObjectParameter("alarmId", typeof(System.Guid));
    
            var localeParameter = locale != null ?
                new ObjectParameter("locale", locale) :
                new ObjectParameter("locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PM_GetAlarmData_Result>("usp_PM_GetAlarmData", alarmIdParameter, localeParameter);
        }
    
        public virtual int usp_PM_GetPatientVitalsByGDS(Nullable<System.Guid> patientId, Nullable<System.DateTime> startTimeUTC, Nullable<System.DateTime> endTimeUTC)
        {
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            var startTimeUTCParameter = startTimeUTC.HasValue ?
                new ObjectParameter("startTimeUTC", startTimeUTC) :
                new ObjectParameter("startTimeUTC", typeof(System.DateTime));
    
            var endTimeUTCParameter = endTimeUTC.HasValue ?
                new ObjectParameter("endTimeUTC", endTimeUTC) :
                new ObjectParameter("endTimeUTC", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PM_GetPatientVitalsByGDS", patientIdParameter, startTimeUTCParameter, endTimeUTCParameter);
        }
    
        public virtual ObjectResult<usp_PM_GetPatientWaveformData_Result> usp_PM_GetPatientWaveformData(Nullable<System.Guid> alarmId, Nullable<int> numberOfSeconds, string locale)
        {
            var alarmIdParameter = alarmId.HasValue ?
                new ObjectParameter("alarmId", alarmId) :
                new ObjectParameter("alarmId", typeof(System.Guid));
    
            var numberOfSecondsParameter = numberOfSeconds.HasValue ?
                new ObjectParameter("numberOfSeconds", numberOfSeconds) :
                new ObjectParameter("numberOfSeconds", typeof(int));
    
            var localeParameter = locale != null ?
                new ObjectParameter("locale", locale) :
                new ObjectParameter("locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PM_GetPatientWaveformData_Result>("usp_PM_GetPatientWaveformData", alarmIdParameter, numberOfSecondsParameter, localeParameter);
        }
    
        public virtual int usp_PurgeDlAlarmData(Nullable<int> fChunkSize, Nullable<System.DateTime> purgeDateUTC, ObjectParameter alarmsRowsPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            var purgeDateUTCParameter = purgeDateUTC.HasValue ?
                new ObjectParameter("PurgeDateUTC", purgeDateUTC) :
                new ObjectParameter("PurgeDateUTC", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PurgeDlAlarmData", fChunkSizeParameter, purgeDateUTCParameter, alarmsRowsPurged);
        }
    
        public virtual int usp_PurgeDlEncounterData(Nullable<int> fChunkSize, ObjectParameter encounterDataPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PurgeDlEncounterData", fChunkSizeParameter, encounterDataPurged);
        }
    
        public virtual int usp_PurgeDlPrintJobsData(Nullable<int> fChunkSize, string purgeDate, ObjectParameter printJobsPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            var purgeDateParameter = purgeDate != null ?
                new ObjectParameter("PurgeDate", purgeDate) :
                new ObjectParameter("PurgeDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PurgeDlPrintJobsData", fChunkSizeParameter, purgeDateParameter, printJobsPurged);
        }
    
        public virtual int usp_PurgeDlVitalsData(Nullable<int> fChunkSize, Nullable<System.DateTime> purgeDateUTC, ObjectParameter hL7MonitorRowsPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            var purgeDateUTCParameter = purgeDateUTC.HasValue ?
                new ObjectParameter("PurgeDateUTC", purgeDateUTC) :
                new ObjectParameter("PurgeDateUTC", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PurgeDlVitalsData", fChunkSizeParameter, purgeDateUTCParameter, hL7MonitorRowsPurged);
        }
    
        public virtual int usp_PurgeDlWaveformData(Nullable<int> fChunkSize, Nullable<System.DateTime> purgeDateUTC, ObjectParameter waveformDataPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            var purgeDateUTCParameter = purgeDateUTC.HasValue ?
                new ObjectParameter("PurgeDateUTC", purgeDateUTC) :
                new ObjectParameter("PurgeDateUTC", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PurgeDlWaveformData", fChunkSizeParameter, purgeDateUTCParameter, waveformDataPurged);
        }
    
        public virtual int usp_PurgeEventsData(Nullable<int> fChunkSize, Nullable<System.DateTime> purgeDate, ObjectParameter eventsDataRowsPurged)
        {
            var fChunkSizeParameter = fChunkSize.HasValue ?
                new ObjectParameter("FChunkSize", fChunkSize) :
                new ObjectParameter("FChunkSize", typeof(int));
    
            var purgeDateParameter = purgeDate.HasValue ?
                new ObjectParameter("PurgeDate", purgeDate) :
                new ObjectParameter("PurgeDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PurgeEventsData", fChunkSizeParameter, purgeDateParameter, eventsDataRowsPurged);
        }
    
        public virtual int usp_PurgeTasks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PurgeTasks");
        }
    
        public virtual int usp_RemoveTrailingLiveData(Nullable<int> chunkSize, Nullable<bool> debug)
        {
            var chunkSizeParameter = chunkSize.HasValue ?
                new ObjectParameter("ChunkSize", chunkSize) :
                new ObjectParameter("ChunkSize", typeof(int));
    
            var debugParameter = debug.HasValue ?
                new ObjectParameter("Debug", debug) :
                new ObjectParameter("Debug", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RemoveTrailingLiveData", chunkSizeParameter, debugParameter);
        }
    
        public virtual int usp_RemoveTrailingLiveWaveformData(Nullable<int> chunkSize, Nullable<bool> debug)
        {
            var chunkSizeParameter = chunkSize.HasValue ?
                new ObjectParameter("ChunkSize", chunkSize) :
                new ObjectParameter("ChunkSize", typeof(int));
    
            var debugParameter = debug.HasValue ?
                new ObjectParameter("Debug", debug) :
                new ObjectParameter("Debug", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RemoveTrailingLiveWaveformData", chunkSizeParameter, debugParameter);
        }
    
        public virtual ObjectResult<usp_RetrieveConfigurationSection_Result> usp_RetrieveConfigurationSection(string applicationName, string sectionName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var sectionNameParameter = sectionName != null ?
                new ObjectParameter("SectionName", sectionName) :
                new ObjectParameter("SectionName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RetrieveConfigurationSection_Result>("usp_RetrieveConfigurationSection", applicationNameParameter, sectionNameParameter);
        }
    
        public virtual int usp_SaveBeginDeviceSession()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveBeginDeviceSession");
        }
    
        public virtual int usp_SaveBeginPatientSession()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveBeginPatientSession");
        }
    
        public virtual int usp_SaveBeginTopicSession()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveBeginTopicSession");
        }
    
        public virtual int usp_SaveBlobPrintRequestDataSet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveBlobPrintRequestDataSet");
        }
    
        public virtual int usp_SaveCfgValues(string keyname, string keyvalue)
        {
            var keynameParameter = keyname != null ?
                new ObjectParameter("keyname", keyname) :
                new ObjectParameter("keyname", typeof(string));
    
            var keyvalueParameter = keyvalue != null ?
                new ObjectParameter("keyvalue", keyvalue) :
                new ObjectParameter("keyvalue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveCfgValues", keynameParameter, keyvalueParameter);
        }
    
        public virtual int usp_SaveConfigurationSection(string applicationName, string sectionName, string sectionData)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var sectionNameParameter = sectionName != null ?
                new ObjectParameter("SectionName", sectionName) :
                new ObjectParameter("SectionName", typeof(string));
    
            var sectionDataParameter = sectionData != null ?
                new ObjectParameter("SectionData", sectionData) :
                new ObjectParameter("SectionData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveConfigurationSection", applicationNameParameter, sectionNameParameter, sectionDataParameter);
        }
    
        public virtual int usp_SaveDeviceInfoDataSet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveDeviceInfoDataSet");
        }
    
        public virtual int usp_SaveEndDeviceSession()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveEndDeviceSession");
        }
    
        public virtual int usp_SaveEndPatientSession()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveEndPatientSession");
        }
    
        public virtual int usp_SaveEndTopicSession()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveEndTopicSession");
        }
    
        public virtual int usp_SaveEventsDataSet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveEventsDataSet");
        }
    
        public virtual int usp_SaveGeneralAlarmsDataSet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveGeneralAlarmsDataSet");
        }
    
        public virtual int usp_SaveLimitAlarmDataSet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveLimitAlarmDataSet");
        }
    
        public virtual int usp_SaveLimitChangeDataSet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveLimitChangeDataSet");
        }
    
        public virtual int usp_SaveLiveDataSet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveLiveDataSet");
        }
    
        public virtual int usp_SavePatientData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SavePatientData");
        }
    
        public virtual int usp_SavePrintRequestDataSet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SavePrintRequestDataSet");
        }
    
        public virtual int usp_SaveStatusDataSet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveStatusDataSet");
        }
    
        public virtual int usp_SaveVitalsDataSet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveVitalsDataSet");
        }
    
        public virtual int usp_SaveWaveformAnnotationDataSet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveWaveformAnnotationDataSet");
        }
    
        public virtual int usp_SaveWaveformDataSet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveWaveformDataSet");
        }
    
        public virtual int usp_SaveWaveformLiveDataSet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveWaveformLiveDataSet");
        }
    
        public virtual int usp_SaveWaveformPrintDataSet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveWaveformPrintDataSet");
        }
    
        public virtual int usp_SaveWaveformPrintRequestDataSet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SaveWaveformPrintRequestDataSet");
        }
    
        public virtual int usp_UpdateApplicationSettingsInstanceId(string applicationType, string oldInstanceId, string newInstanceId)
        {
            var applicationTypeParameter = applicationType != null ?
                new ObjectParameter("applicationType", applicationType) :
                new ObjectParameter("applicationType", typeof(string));
    
            var oldInstanceIdParameter = oldInstanceId != null ?
                new ObjectParameter("oldInstanceId", oldInstanceId) :
                new ObjectParameter("oldInstanceId", typeof(string));
    
            var newInstanceIdParameter = newInstanceId != null ?
                new ObjectParameter("newInstanceId", newInstanceId) :
                new ObjectParameter("newInstanceId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateApplicationSettingsInstanceId", applicationTypeParameter, oldInstanceIdParameter, newInstanceIdParameter);
        }
    
        public virtual int usp_UpdateCEISettings(Nullable<int> alarmNotificationMode, Nullable<int> vitalsUpdateInterval, Nullable<int> portNumber, Nullable<byte> trackAlarmExecution, Nullable<byte> trackVitalsUpdateExecution)
        {
            var alarmNotificationModeParameter = alarmNotificationMode.HasValue ?
                new ObjectParameter("alarmNotificationMode", alarmNotificationMode) :
                new ObjectParameter("alarmNotificationMode", typeof(int));
    
            var vitalsUpdateIntervalParameter = vitalsUpdateInterval.HasValue ?
                new ObjectParameter("vitalsUpdateInterval", vitalsUpdateInterval) :
                new ObjectParameter("vitalsUpdateInterval", typeof(int));
    
            var portNumberParameter = portNumber.HasValue ?
                new ObjectParameter("portNumber", portNumber) :
                new ObjectParameter("portNumber", typeof(int));
    
            var trackAlarmExecutionParameter = trackAlarmExecution.HasValue ?
                new ObjectParameter("trackAlarmExecution", trackAlarmExecution) :
                new ObjectParameter("trackAlarmExecution", typeof(byte));
    
            var trackVitalsUpdateExecutionParameter = trackVitalsUpdateExecution.HasValue ?
                new ObjectParameter("trackVitalsUpdateExecution", trackVitalsUpdateExecution) :
                new ObjectParameter("trackVitalsUpdateExecution", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateCEISettings", alarmNotificationModeParameter, vitalsUpdateIntervalParameter, portNumberParameter, trackAlarmExecutionParameter, trackVitalsUpdateExecutionParameter);
        }
    
        public virtual int usp_UpdateEncounter(Nullable<System.Guid> unit_org_id, Nullable<System.Guid> organization_id, string rm, string bed, Nullable<System.Guid> patient_id)
        {
            var unit_org_idParameter = unit_org_id.HasValue ?
                new ObjectParameter("unit_org_id", unit_org_id) :
                new ObjectParameter("unit_org_id", typeof(System.Guid));
    
            var organization_idParameter = organization_id.HasValue ?
                new ObjectParameter("organization_id", organization_id) :
                new ObjectParameter("organization_id", typeof(System.Guid));
    
            var rmParameter = rm != null ?
                new ObjectParameter("rm", rm) :
                new ObjectParameter("rm", typeof(string));
    
            var bedParameter = bed != null ?
                new ObjectParameter("bed", bed) :
                new ObjectParameter("bed", typeof(string));
    
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateEncounter", unit_org_idParameter, organization_idParameter, rmParameter, bedParameter, patient_idParameter);
        }
    
        public virtual int usp_UpdateGatewaySettings(string network_id, Nullable<byte> enable_sw, string recv_app, string send_app, Nullable<System.Guid> organization_id, Nullable<System.Guid> send_sys_id, Nullable<int> results_usid, Nullable<int> sleep_secs, Nullable<int> debug_level, Nullable<System.Guid> unit_org_id, string patient_id_type, string gateway_type, Nullable<byte> auto_assign_id_sw, string new_mrn_format, Nullable<byte> auto_chan_attach_sw, Nullable<byte> live_vitals_sw, Nullable<int> live_waveform_size, Nullable<int> decnet_node, string node_name, string nodes_excluded, string nodes_included, Nullable<byte> timemaster_sw, Nullable<int> waveform_size, Nullable<byte> print_enabled_sw, Nullable<byte> auto_record_alarm_sw, Nullable<byte> collect_12_lead_sw, Nullable<byte> print_auto_record_sw, Nullable<bool> encryption_status, Nullable<System.Guid> gateway_id)
        {
            var network_idParameter = network_id != null ?
                new ObjectParameter("network_id", network_id) :
                new ObjectParameter("network_id", typeof(string));
    
            var enable_swParameter = enable_sw.HasValue ?
                new ObjectParameter("enable_sw", enable_sw) :
                new ObjectParameter("enable_sw", typeof(byte));
    
            var recv_appParameter = recv_app != null ?
                new ObjectParameter("recv_app", recv_app) :
                new ObjectParameter("recv_app", typeof(string));
    
            var send_appParameter = send_app != null ?
                new ObjectParameter("send_app", send_app) :
                new ObjectParameter("send_app", typeof(string));
    
            var organization_idParameter = organization_id.HasValue ?
                new ObjectParameter("organization_id", organization_id) :
                new ObjectParameter("organization_id", typeof(System.Guid));
    
            var send_sys_idParameter = send_sys_id.HasValue ?
                new ObjectParameter("send_sys_id", send_sys_id) :
                new ObjectParameter("send_sys_id", typeof(System.Guid));
    
            var results_usidParameter = results_usid.HasValue ?
                new ObjectParameter("results_usid", results_usid) :
                new ObjectParameter("results_usid", typeof(int));
    
            var sleep_secsParameter = sleep_secs.HasValue ?
                new ObjectParameter("sleep_secs", sleep_secs) :
                new ObjectParameter("sleep_secs", typeof(int));
    
            var debug_levelParameter = debug_level.HasValue ?
                new ObjectParameter("debug_level", debug_level) :
                new ObjectParameter("debug_level", typeof(int));
    
            var unit_org_idParameter = unit_org_id.HasValue ?
                new ObjectParameter("unit_org_id", unit_org_id) :
                new ObjectParameter("unit_org_id", typeof(System.Guid));
    
            var patient_id_typeParameter = patient_id_type != null ?
                new ObjectParameter("patient_id_type", patient_id_type) :
                new ObjectParameter("patient_id_type", typeof(string));
    
            var gateway_typeParameter = gateway_type != null ?
                new ObjectParameter("gateway_type", gateway_type) :
                new ObjectParameter("gateway_type", typeof(string));
    
            var auto_assign_id_swParameter = auto_assign_id_sw.HasValue ?
                new ObjectParameter("auto_assign_id_sw", auto_assign_id_sw) :
                new ObjectParameter("auto_assign_id_sw", typeof(byte));
    
            var new_mrn_formatParameter = new_mrn_format != null ?
                new ObjectParameter("new_mrn_format", new_mrn_format) :
                new ObjectParameter("new_mrn_format", typeof(string));
    
            var auto_chan_attach_swParameter = auto_chan_attach_sw.HasValue ?
                new ObjectParameter("auto_chan_attach_sw", auto_chan_attach_sw) :
                new ObjectParameter("auto_chan_attach_sw", typeof(byte));
    
            var live_vitals_swParameter = live_vitals_sw.HasValue ?
                new ObjectParameter("live_vitals_sw", live_vitals_sw) :
                new ObjectParameter("live_vitals_sw", typeof(byte));
    
            var live_waveform_sizeParameter = live_waveform_size.HasValue ?
                new ObjectParameter("live_waveform_size", live_waveform_size) :
                new ObjectParameter("live_waveform_size", typeof(int));
    
            var decnet_nodeParameter = decnet_node.HasValue ?
                new ObjectParameter("decnet_node", decnet_node) :
                new ObjectParameter("decnet_node", typeof(int));
    
            var node_nameParameter = node_name != null ?
                new ObjectParameter("node_name", node_name) :
                new ObjectParameter("node_name", typeof(string));
    
            var nodes_excludedParameter = nodes_excluded != null ?
                new ObjectParameter("nodes_excluded", nodes_excluded) :
                new ObjectParameter("nodes_excluded", typeof(string));
    
            var nodes_includedParameter = nodes_included != null ?
                new ObjectParameter("nodes_included", nodes_included) :
                new ObjectParameter("nodes_included", typeof(string));
    
            var timemaster_swParameter = timemaster_sw.HasValue ?
                new ObjectParameter("timemaster_sw", timemaster_sw) :
                new ObjectParameter("timemaster_sw", typeof(byte));
    
            var waveform_sizeParameter = waveform_size.HasValue ?
                new ObjectParameter("waveform_size", waveform_size) :
                new ObjectParameter("waveform_size", typeof(int));
    
            var print_enabled_swParameter = print_enabled_sw.HasValue ?
                new ObjectParameter("print_enabled_sw", print_enabled_sw) :
                new ObjectParameter("print_enabled_sw", typeof(byte));
    
            var auto_record_alarm_swParameter = auto_record_alarm_sw.HasValue ?
                new ObjectParameter("auto_record_alarm_sw", auto_record_alarm_sw) :
                new ObjectParameter("auto_record_alarm_sw", typeof(byte));
    
            var collect_12_lead_swParameter = collect_12_lead_sw.HasValue ?
                new ObjectParameter("collect_12_lead_sw", collect_12_lead_sw) :
                new ObjectParameter("collect_12_lead_sw", typeof(byte));
    
            var print_auto_record_swParameter = print_auto_record_sw.HasValue ?
                new ObjectParameter("print_auto_record_sw", print_auto_record_sw) :
                new ObjectParameter("print_auto_record_sw", typeof(byte));
    
            var encryption_statusParameter = encryption_status.HasValue ?
                new ObjectParameter("encryption_status", encryption_status) :
                new ObjectParameter("encryption_status", typeof(bool));
    
            var gateway_idParameter = gateway_id.HasValue ?
                new ObjectParameter("gateway_id", gateway_id) :
                new ObjectParameter("gateway_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateGatewaySettings", network_idParameter, enable_swParameter, recv_appParameter, send_appParameter, organization_idParameter, send_sys_idParameter, results_usidParameter, sleep_secsParameter, debug_levelParameter, unit_org_idParameter, patient_id_typeParameter, gateway_typeParameter, auto_assign_id_swParameter, new_mrn_formatParameter, auto_chan_attach_swParameter, live_vitals_swParameter, live_waveform_sizeParameter, decnet_nodeParameter, node_nameParameter, nodes_excludedParameter, nodes_includedParameter, timemaster_swParameter, waveform_sizeParameter, print_enabled_swParameter, auto_record_alarm_swParameter, collect_12_lead_swParameter, print_auto_record_swParameter, encryption_statusParameter, gateway_idParameter);
        }
    
        public virtual int usp_UpdateMiscCode(Nullable<System.Guid> organization_id, Nullable<System.Guid> sys_id, string category_cd, string method_cd, string code, string int_keystone_cd, string short_dsc, Nullable<byte> verification_sw, Nullable<int> code_id)
        {
            var organization_idParameter = organization_id.HasValue ?
                new ObjectParameter("organization_id", organization_id) :
                new ObjectParameter("organization_id", typeof(System.Guid));
    
            var sys_idParameter = sys_id.HasValue ?
                new ObjectParameter("sys_id", sys_id) :
                new ObjectParameter("sys_id", typeof(System.Guid));
    
            var category_cdParameter = category_cd != null ?
                new ObjectParameter("category_cd", category_cd) :
                new ObjectParameter("category_cd", typeof(string));
    
            var method_cdParameter = method_cd != null ?
                new ObjectParameter("method_cd", method_cd) :
                new ObjectParameter("method_cd", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var int_keystone_cdParameter = int_keystone_cd != null ?
                new ObjectParameter("int_keystone_cd", int_keystone_cd) :
                new ObjectParameter("int_keystone_cd", typeof(string));
    
            var short_dscParameter = short_dsc != null ?
                new ObjectParameter("short_dsc", short_dsc) :
                new ObjectParameter("short_dsc", typeof(string));
    
            var verification_swParameter = verification_sw.HasValue ?
                new ObjectParameter("verification_sw", verification_sw) :
                new ObjectParameter("verification_sw", typeof(byte));
    
            var code_idParameter = code_id.HasValue ?
                new ObjectParameter("code_id", code_id) :
                new ObjectParameter("code_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateMiscCode", organization_idParameter, sys_idParameter, category_cdParameter, method_cdParameter, codeParameter, int_keystone_cdParameter, short_dscParameter, verification_swParameter, code_idParameter);
        }
    
        public virtual int usp_UpdateMonitor(string monitor_dsc, Nullable<System.Guid> unit_Org_id, string room, string bed_cd, Nullable<System.Guid> monitor_id)
        {
            var monitor_dscParameter = monitor_dsc != null ?
                new ObjectParameter("monitor_dsc", monitor_dsc) :
                new ObjectParameter("monitor_dsc", typeof(string));
    
            var unit_Org_idParameter = unit_Org_id.HasValue ?
                new ObjectParameter("unit_Org_id", unit_Org_id) :
                new ObjectParameter("unit_Org_id", typeof(System.Guid));
    
            var roomParameter = room != null ?
                new ObjectParameter("room", room) :
                new ObjectParameter("room", typeof(string));
    
            var bed_cdParameter = bed_cd != null ?
                new ObjectParameter("bed_cd", bed_cd) :
                new ObjectParameter("bed_cd", typeof(string));
    
            var monitor_idParameter = monitor_id.HasValue ?
                new ObjectParameter("monitor_id", monitor_id) :
                new ObjectParameter("monitor_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateMonitor", monitor_dscParameter, unit_Org_idParameter, roomParameter, bed_cdParameter, monitor_idParameter);
        }
    
        public virtual int usp_UpdateMrn(string mrn_xid, string mrn_xid2, Nullable<System.Guid> patient_id)
        {
            var mrn_xidParameter = mrn_xid != null ?
                new ObjectParameter("mrn_xid", mrn_xid) :
                new ObjectParameter("mrn_xid", typeof(string));
    
            var mrn_xid2Parameter = mrn_xid2 != null ?
                new ObjectParameter("mrn_xid2", mrn_xid2) :
                new ObjectParameter("mrn_xid2", typeof(string));
    
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateMrn", mrn_xidParameter, mrn_xid2Parameter, patient_idParameter);
        }
    
        public virtual int usp_UpdateOrg(string organizationCd, string organizationNm, Nullable<System.Guid> organizationId)
        {
            var organizationCdParameter = organizationCd != null ?
                new ObjectParameter("organizationCd", organizationCd) :
                new ObjectParameter("organizationCd", typeof(string));
    
            var organizationNmParameter = organizationNm != null ?
                new ObjectParameter("organizationNm", organizationNm) :
                new ObjectParameter("organizationNm", typeof(string));
    
            var organizationIdParameter = organizationId.HasValue ?
                new ObjectParameter("organizationId", organizationId) :
                new ObjectParameter("organizationId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateOrg", organizationCdParameter, organizationNmParameter, organizationIdParameter);
        }
    
        public virtual int usp_UpdateOrgRecord(Nullable<int> auto_collect_interval, Nullable<int> outbound_interval, string printer_name, string alarm_printer_name, Nullable<System.Guid> organization_id)
        {
            var auto_collect_intervalParameter = auto_collect_interval.HasValue ?
                new ObjectParameter("auto_collect_interval", auto_collect_interval) :
                new ObjectParameter("auto_collect_interval", typeof(int));
    
            var outbound_intervalParameter = outbound_interval.HasValue ?
                new ObjectParameter("outbound_interval", outbound_interval) :
                new ObjectParameter("outbound_interval", typeof(int));
    
            var printer_nameParameter = printer_name != null ?
                new ObjectParameter("printer_name", printer_name) :
                new ObjectParameter("printer_name", typeof(string));
    
            var alarm_printer_nameParameter = alarm_printer_name != null ?
                new ObjectParameter("alarm_printer_name", alarm_printer_name) :
                new ObjectParameter("alarm_printer_name", typeof(string));
    
            var organization_idParameter = organization_id.HasValue ?
                new ObjectParameter("organization_id", organization_id) :
                new ObjectParameter("organization_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateOrgRecord", auto_collect_intervalParameter, outbound_intervalParameter, printer_nameParameter, alarm_printer_nameParameter, organization_idParameter);
        }
    
        public virtual int usp_UpdatePatient(Nullable<System.DateTime> dob, Nullable<int> gender_cid, Nullable<System.Guid> patient_id)
        {
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            var gender_cidParameter = gender_cid.HasValue ?
                new ObjectParameter("gender_cid", gender_cid) :
                new ObjectParameter("gender_cid", typeof(int));
    
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdatePatient", dobParameter, gender_cidParameter, patient_idParameter);
        }
    
        public virtual int usp_UpdatePatientDemographicsToMonitor(Nullable<System.Guid> patient_id)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdatePatientDemographicsToMonitor", patient_idParameter);
        }
    
        public virtual int usp_UpdatePerson(string last_nm, string first_nm, string middle_nm, Nullable<System.Guid> person_id)
        {
            var last_nmParameter = last_nm != null ?
                new ObjectParameter("last_nm", last_nm) :
                new ObjectParameter("last_nm", typeof(string));
    
            var first_nmParameter = first_nm != null ?
                new ObjectParameter("first_nm", first_nm) :
                new ObjectParameter("first_nm", typeof(string));
    
            var middle_nmParameter = middle_nm != null ?
                new ObjectParameter("middle_nm", middle_nm) :
                new ObjectParameter("middle_nm", typeof(string));
    
            var person_idParameter = person_id.HasValue ?
                new ObjectParameter("person_id", person_id) :
                new ObjectParameter("person_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdatePerson", last_nmParameter, first_nmParameter, middle_nmParameter, person_idParameter);
        }
    
        public virtual int usp_UpdatePersonName(string last_nm, string first_nm, string middle_nm, Nullable<System.Guid> person_nm_id)
        {
            var last_nmParameter = last_nm != null ?
                new ObjectParameter("last_nm", last_nm) :
                new ObjectParameter("last_nm", typeof(string));
    
            var first_nmParameter = first_nm != null ?
                new ObjectParameter("first_nm", first_nm) :
                new ObjectParameter("first_nm", typeof(string));
    
            var middle_nmParameter = middle_nm != null ?
                new ObjectParameter("middle_nm", middle_nm) :
                new ObjectParameter("middle_nm", typeof(string));
    
            var person_nm_idParameter = person_nm_id.HasValue ?
                new ObjectParameter("person_nm_id", person_nm_id) :
                new ObjectParameter("person_nm_id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdatePersonName", last_nmParameter, first_nmParameter, middle_nmParameter, person_nm_idParameter);
        }
    
        public virtual int usp_UpdateSysParameter_debugSw(Nullable<byte> debug_sw)
        {
            var debug_swParameter = debug_sw.HasValue ?
                new ObjectParameter("debug_sw", debug_sw) :
                new ObjectParameter("debug_sw", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateSysParameter_debugSw", debug_swParameter);
        }
    
        public virtual int usp_UpdateSysParameter_parmVal(string parm_value, string name)
        {
            var parm_valueParameter = parm_value != null ?
                new ObjectParameter("parm_value", parm_value) :
                new ObjectParameter("parm_value", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateSysParameter_parmVal", parm_valueParameter, nameParameter);
        }
    
        public virtual int uspInsertPurgerLog(string procedure, string table, Nullable<System.DateTime> purgeDate, string parameters, Nullable<int> chunkSize, Nullable<long> rows, Nullable<int> errorNumber, string errorMessage, Nullable<System.DateTime> startTime)
        {
            var procedureParameter = procedure != null ?
                new ObjectParameter("Procedure", procedure) :
                new ObjectParameter("Procedure", typeof(string));
    
            var tableParameter = table != null ?
                new ObjectParameter("Table", table) :
                new ObjectParameter("Table", typeof(string));
    
            var purgeDateParameter = purgeDate.HasValue ?
                new ObjectParameter("PurgeDate", purgeDate) :
                new ObjectParameter("PurgeDate", typeof(System.DateTime));
    
            var parametersParameter = parameters != null ?
                new ObjectParameter("Parameters", parameters) :
                new ObjectParameter("Parameters", typeof(string));
    
            var chunkSizeParameter = chunkSize.HasValue ?
                new ObjectParameter("ChunkSize", chunkSize) :
                new ObjectParameter("ChunkSize", typeof(int));
    
            var rowsParameter = rows.HasValue ?
                new ObjectParameter("Rows", rows) :
                new ObjectParameter("Rows", typeof(long));
    
            var errorNumberParameter = errorNumber.HasValue ?
                new ObjectParameter("ErrorNumber", errorNumber) :
                new ObjectParameter("ErrorNumber", typeof(int));
    
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspInsertPurgerLog", procedureParameter, tableParameter, purgeDateParameter, parametersParameter, chunkSizeParameter, rowsParameter, errorNumberParameter, errorMessageParameter, startTimeParameter);
        }
    
        public virtual int uspInsertTableRowSpace()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspInsertTableRowSpace");
        }
    
        public virtual int WriteAnalysisTime(Nullable<System.Guid> userID, Nullable<System.Guid> patientId, Nullable<long> startFt, Nullable<long> endFt, Nullable<int> analysisType)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(System.Guid));
    
            var patientIdParameter = patientId.HasValue ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(System.Guid));
    
            var startFtParameter = startFt.HasValue ?
                new ObjectParameter("StartFt", startFt) :
                new ObjectParameter("StartFt", typeof(long));
    
            var endFtParameter = endFt.HasValue ?
                new ObjectParameter("EndFt", endFt) :
                new ObjectParameter("EndFt", typeof(long));
    
            var analysisTypeParameter = analysisType.HasValue ?
                new ObjectParameter("AnalysisType", analysisType) :
                new ObjectParameter("AnalysisType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WriteAnalysisTime", userIDParameter, patientIdParameter, startFtParameter, endFtParameter, analysisTypeParameter);
        }
    
        public virtual int WriteBeatTimeLog(string userID, string patientId, Nullable<long> startFt, Nullable<int> numBeats, byte[] beatData, Nullable<short> sampleRate)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var startFtParameter = startFt.HasValue ?
                new ObjectParameter("StartFt", startFt) :
                new ObjectParameter("StartFt", typeof(long));
    
            var numBeatsParameter = numBeats.HasValue ?
                new ObjectParameter("NumBeats", numBeats) :
                new ObjectParameter("NumBeats", typeof(int));
    
            var beatDataParameter = beatData != null ?
                new ObjectParameter("BeatData", beatData) :
                new ObjectParameter("BeatData", typeof(byte[]));
    
            var sampleRateParameter = sampleRate.HasValue ?
                new ObjectParameter("SampleRate", sampleRate) :
                new ObjectParameter("SampleRate", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WriteBeatTimeLog", userIDParameter, patientIdParameter, startFtParameter, numBeatsParameter, beatDataParameter, sampleRateParameter);
        }
    
        public virtual int WriteBinInfo(string userID, string patientId, Nullable<int> templateSetIndex, Nullable<int> templateIndex, Nullable<int> binNumber, Nullable<int> source, Nullable<int> beatCount, Nullable<int> firstBeatNumber, Nullable<int> nonIgnoredCount, Nullable<int> firstNonIgnoredBeat, Nullable<int> iSOOffset, Nullable<int> sTOffset, Nullable<int> iPoint, Nullable<int> jPoint, Nullable<int> sTClass, Nullable<int> singlesBin, Nullable<int> editBin, Nullable<int> subclassNumber)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var templateSetIndexParameter = templateSetIndex.HasValue ?
                new ObjectParameter("TemplateSetIndex", templateSetIndex) :
                new ObjectParameter("TemplateSetIndex", typeof(int));
    
            var templateIndexParameter = templateIndex.HasValue ?
                new ObjectParameter("TemplateIndex", templateIndex) :
                new ObjectParameter("TemplateIndex", typeof(int));
    
            var binNumberParameter = binNumber.HasValue ?
                new ObjectParameter("BinNumber", binNumber) :
                new ObjectParameter("BinNumber", typeof(int));
    
            var sourceParameter = source.HasValue ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(int));
    
            var beatCountParameter = beatCount.HasValue ?
                new ObjectParameter("BeatCount", beatCount) :
                new ObjectParameter("BeatCount", typeof(int));
    
            var firstBeatNumberParameter = firstBeatNumber.HasValue ?
                new ObjectParameter("FirstBeatNumber", firstBeatNumber) :
                new ObjectParameter("FirstBeatNumber", typeof(int));
    
            var nonIgnoredCountParameter = nonIgnoredCount.HasValue ?
                new ObjectParameter("NonIgnoredCount", nonIgnoredCount) :
                new ObjectParameter("NonIgnoredCount", typeof(int));
    
            var firstNonIgnoredBeatParameter = firstNonIgnoredBeat.HasValue ?
                new ObjectParameter("FirstNonIgnoredBeat", firstNonIgnoredBeat) :
                new ObjectParameter("FirstNonIgnoredBeat", typeof(int));
    
            var iSOOffsetParameter = iSOOffset.HasValue ?
                new ObjectParameter("ISOOffset", iSOOffset) :
                new ObjectParameter("ISOOffset", typeof(int));
    
            var sTOffsetParameter = sTOffset.HasValue ?
                new ObjectParameter("STOffset", sTOffset) :
                new ObjectParameter("STOffset", typeof(int));
    
            var iPointParameter = iPoint.HasValue ?
                new ObjectParameter("IPoint", iPoint) :
                new ObjectParameter("IPoint", typeof(int));
    
            var jPointParameter = jPoint.HasValue ?
                new ObjectParameter("JPoint", jPoint) :
                new ObjectParameter("JPoint", typeof(int));
    
            var sTClassParameter = sTClass.HasValue ?
                new ObjectParameter("STClass", sTClass) :
                new ObjectParameter("STClass", typeof(int));
    
            var singlesBinParameter = singlesBin.HasValue ?
                new ObjectParameter("SinglesBin", singlesBin) :
                new ObjectParameter("SinglesBin", typeof(int));
    
            var editBinParameter = editBin.HasValue ?
                new ObjectParameter("EditBin", editBin) :
                new ObjectParameter("EditBin", typeof(int));
    
            var subclassNumberParameter = subclassNumber.HasValue ?
                new ObjectParameter("SubclassNumber", subclassNumber) :
                new ObjectParameter("SubclassNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WriteBinInfo", userIDParameter, patientIdParameter, templateSetIndexParameter, templateIndexParameter, binNumberParameter, sourceParameter, beatCountParameter, firstBeatNumberParameter, nonIgnoredCountParameter, firstNonIgnoredBeatParameter, iSOOffsetParameter, sTOffsetParameter, iPointParameter, jPointParameter, sTClassParameter, singlesBinParameter, editBinParameter, subclassNumberParameter);
        }
    
        public virtual int WriteEventData(string userID, string patientId, Nullable<int> type, Nullable<int> numEvents, byte[] eventData, Nullable<short> sampleRate)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var numEventsParameter = numEvents.HasValue ?
                new ObjectParameter("NumEvents", numEvents) :
                new ObjectParameter("NumEvents", typeof(int));
    
            var eventDataParameter = eventData != null ?
                new ObjectParameter("EventData", eventData) :
                new ObjectParameter("EventData", typeof(byte[]));
    
            var sampleRateParameter = sampleRate.HasValue ?
                new ObjectParameter("SampleRate", sampleRate) :
                new ObjectParameter("SampleRate", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WriteEventData", userIDParameter, patientIdParameter, typeParameter, numEventsParameter, eventDataParameter, sampleRateParameter);
        }
    
        public virtual int WritePacerSpikeLog(string userID, string patientId, Nullable<short> sampleRate, Nullable<long> startFt, Nullable<int> numSpikes, byte[] spikeData)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var sampleRateParameter = sampleRate.HasValue ?
                new ObjectParameter("SampleRate", sampleRate) :
                new ObjectParameter("SampleRate", typeof(short));
    
            var startFtParameter = startFt.HasValue ?
                new ObjectParameter("StartFt", startFt) :
                new ObjectParameter("StartFt", typeof(long));
    
            var numSpikesParameter = numSpikes.HasValue ?
                new ObjectParameter("NumSpikes", numSpikes) :
                new ObjectParameter("NumSpikes", typeof(int));
    
            var spikeDataParameter = spikeData != null ?
                new ObjectParameter("SpikeData", spikeData) :
                new ObjectParameter("SpikeData", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WritePacerSpikeLog", userIDParameter, patientIdParameter, sampleRateParameter, startFtParameter, numSpikesParameter, spikeDataParameter);
        }
    
        public virtual int WriteTemplateSetInfo(string userID, string patientId, Nullable<int> templateSetIndex, Nullable<int> leadOne, Nullable<int> leadTwo, Nullable<int> numberOfBins, Nullable<int> numberOfTemplates)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var templateSetIndexParameter = templateSetIndex.HasValue ?
                new ObjectParameter("TemplateSetIndex", templateSetIndex) :
                new ObjectParameter("TemplateSetIndex", typeof(int));
    
            var leadOneParameter = leadOne.HasValue ?
                new ObjectParameter("LeadOne", leadOne) :
                new ObjectParameter("LeadOne", typeof(int));
    
            var leadTwoParameter = leadTwo.HasValue ?
                new ObjectParameter("LeadTwo", leadTwo) :
                new ObjectParameter("LeadTwo", typeof(int));
    
            var numberOfBinsParameter = numberOfBins.HasValue ?
                new ObjectParameter("NumberOfBins", numberOfBins) :
                new ObjectParameter("NumberOfBins", typeof(int));
    
            var numberOfTemplatesParameter = numberOfTemplates.HasValue ?
                new ObjectParameter("NumberOfTemplates", numberOfTemplates) :
                new ObjectParameter("NumberOfTemplates", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WriteTemplateSetInfo", userIDParameter, patientIdParameter, templateSetIndexParameter, leadOneParameter, leadTwoParameter, numberOfBinsParameter, numberOfTemplatesParameter);
        }
    
        public virtual int WriteTrendData(string userID, string patientId, Nullable<int> totalCategories, Nullable<long> startFT, Nullable<int> totalPeriods, Nullable<double> samplesPerPeriod, byte[] trendData)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var totalCategoriesParameter = totalCategories.HasValue ?
                new ObjectParameter("TotalCategories", totalCategories) :
                new ObjectParameter("TotalCategories", typeof(int));
    
            var startFTParameter = startFT.HasValue ?
                new ObjectParameter("StartFT", startFT) :
                new ObjectParameter("StartFT", typeof(long));
    
            var totalPeriodsParameter = totalPeriods.HasValue ?
                new ObjectParameter("TotalPeriods", totalPeriods) :
                new ObjectParameter("TotalPeriods", typeof(int));
    
            var samplesPerPeriodParameter = samplesPerPeriod.HasValue ?
                new ObjectParameter("SamplesPerPeriod", samplesPerPeriod) :
                new ObjectParameter("SamplesPerPeriod", typeof(double));
    
            var trendDataParameter = trendData != null ?
                new ObjectParameter("TrendData", trendData) :
                new ObjectParameter("TrendData", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WriteTrendData", userIDParameter, patientIdParameter, totalCategoriesParameter, startFTParameter, totalPeriodsParameter, samplesPerPeriodParameter, trendDataParameter);
        }
    
        public virtual int WriteTwelveLeadData(string patientId, string reportID, Nullable<System.DateTime> reportDT, Nullable<short> versionNumber, string patientName, string idNum, string birthdate, string age, string sex, string height, string weight, string reportDate, string reportTime, Nullable<int> ventRate, Nullable<int> pRInterval, Nullable<int> qT, Nullable<int> qTC, Nullable<int> qRSDuration, Nullable<int> pAxis, Nullable<int> qRSAxis, Nullable<int> tAxis, string interpretation, Nullable<int> sampleRate, Nullable<int> sampleCount, Nullable<int> numYPoints, Nullable<int> baseline, Nullable<int> yPointsPerUnit, byte[] waveformData)
        {
            var patientIdParameter = patientId != null ?
                new ObjectParameter("PatientId", patientId) :
                new ObjectParameter("PatientId", typeof(string));
    
            var reportIDParameter = reportID != null ?
                new ObjectParameter("ReportID", reportID) :
                new ObjectParameter("ReportID", typeof(string));
    
            var reportDTParameter = reportDT.HasValue ?
                new ObjectParameter("ReportDT", reportDT) :
                new ObjectParameter("ReportDT", typeof(System.DateTime));
    
            var versionNumberParameter = versionNumber.HasValue ?
                new ObjectParameter("VersionNumber", versionNumber) :
                new ObjectParameter("VersionNumber", typeof(short));
    
            var patientNameParameter = patientName != null ?
                new ObjectParameter("PatientName", patientName) :
                new ObjectParameter("PatientName", typeof(string));
    
            var idNumParameter = idNum != null ?
                new ObjectParameter("IdNum", idNum) :
                new ObjectParameter("IdNum", typeof(string));
    
            var birthdateParameter = birthdate != null ?
                new ObjectParameter("Birthdate", birthdate) :
                new ObjectParameter("Birthdate", typeof(string));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            var heightParameter = height != null ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(string));
    
            var weightParameter = weight != null ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(string));
    
            var reportDateParameter = reportDate != null ?
                new ObjectParameter("ReportDate", reportDate) :
                new ObjectParameter("ReportDate", typeof(string));
    
            var reportTimeParameter = reportTime != null ?
                new ObjectParameter("ReportTime", reportTime) :
                new ObjectParameter("ReportTime", typeof(string));
    
            var ventRateParameter = ventRate.HasValue ?
                new ObjectParameter("VentRate", ventRate) :
                new ObjectParameter("VentRate", typeof(int));
    
            var pRIntervalParameter = pRInterval.HasValue ?
                new ObjectParameter("PRInterval", pRInterval) :
                new ObjectParameter("PRInterval", typeof(int));
    
            var qTParameter = qT.HasValue ?
                new ObjectParameter("QT", qT) :
                new ObjectParameter("QT", typeof(int));
    
            var qTCParameter = qTC.HasValue ?
                new ObjectParameter("QTC", qTC) :
                new ObjectParameter("QTC", typeof(int));
    
            var qRSDurationParameter = qRSDuration.HasValue ?
                new ObjectParameter("QRSDuration", qRSDuration) :
                new ObjectParameter("QRSDuration", typeof(int));
    
            var pAxisParameter = pAxis.HasValue ?
                new ObjectParameter("PAxis", pAxis) :
                new ObjectParameter("PAxis", typeof(int));
    
            var qRSAxisParameter = qRSAxis.HasValue ?
                new ObjectParameter("QRSAxis", qRSAxis) :
                new ObjectParameter("QRSAxis", typeof(int));
    
            var tAxisParameter = tAxis.HasValue ?
                new ObjectParameter("TAxis", tAxis) :
                new ObjectParameter("TAxis", typeof(int));
    
            var interpretationParameter = interpretation != null ?
                new ObjectParameter("Interpretation", interpretation) :
                new ObjectParameter("Interpretation", typeof(string));
    
            var sampleRateParameter = sampleRate.HasValue ?
                new ObjectParameter("SampleRate", sampleRate) :
                new ObjectParameter("SampleRate", typeof(int));
    
            var sampleCountParameter = sampleCount.HasValue ?
                new ObjectParameter("SampleCount", sampleCount) :
                new ObjectParameter("SampleCount", typeof(int));
    
            var numYPointsParameter = numYPoints.HasValue ?
                new ObjectParameter("NumYPoints", numYPoints) :
                new ObjectParameter("NumYPoints", typeof(int));
    
            var baselineParameter = baseline.HasValue ?
                new ObjectParameter("Baseline", baseline) :
                new ObjectParameter("Baseline", typeof(int));
    
            var yPointsPerUnitParameter = yPointsPerUnit.HasValue ?
                new ObjectParameter("YPointsPerUnit", yPointsPerUnit) :
                new ObjectParameter("YPointsPerUnit", typeof(int));
    
            var waveformDataParameter = waveformData != null ?
                new ObjectParameter("WaveformData", waveformData) :
                new ObjectParameter("WaveformData", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WriteTwelveLeadData", patientIdParameter, reportIDParameter, reportDTParameter, versionNumberParameter, patientNameParameter, idNumParameter, birthdateParameter, ageParameter, sexParameter, heightParameter, weightParameter, reportDateParameter, reportTimeParameter, ventRateParameter, pRIntervalParameter, qTParameter, qTCParameter, qRSDurationParameter, pAxisParameter, qRSAxisParameter, tAxisParameter, interpretationParameter, sampleRateParameter, sampleCountParameter, numYPointsParameter, baselineParameter, yPointsPerUnitParameter, waveformDataParameter);
        }
    }
}
