/*
Deployment script for TTDBX

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "TTDBX"
:setvar DefaultFilePrefix "TTDBX"
:setvar DefaultDataPath "D:\SQLDATA\"
:setvar DefaultLogPath "D:\SQLDATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS OFF,
                ANSI_PADDING OFF,
                ANSI_WARNINGS OFF,
                ARITHABORT OFF,
                CONCAT_NULL_YIELDS_NULL OFF,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER OFF,
                ANSI_NULL_DEFAULT OFF,
                CURSOR_DEFAULT GLOBAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY CHECKSUM,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
ALTER DATABASE [$(DatabaseName)]
    SET COMPATIBILITY_LEVEL = 110 
    WITH ROLLBACK IMMEDIATE;


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Clustered]...';


GO
CREATE TABLE [dbo].[Clustered] (
    [ClusterID] INT            IDENTITY (1, 1) NOT NULL,
    [FirstName] NVARCHAR (50)  NULL,
    [LastName]  NVARCHAR (50)  NULL,
    [City]      NVARCHAR (50)  NULL,
    [State]     NCHAR (2)      NULL,
    [ExtraData] NVARCHAR (MAX) NULL
);


GO
PRINT N'Creating [dbo].[ClusteredPK]...';


GO
CREATE TABLE [dbo].[ClusteredPK] (
    [ClusterID] INT            IDENTITY (1, 1) NOT NULL,
    [FirstName] NVARCHAR (50)  NULL,
    [LastName]  NVARCHAR (50)  NULL,
    [City]      NVARCHAR (50)  NULL,
    [State]     NCHAR (2)      NULL,
    [ExtraData] NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([ClusterID] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[Company]...';


GO
CREATE TABLE [dbo].[Company] (
    [companyId]   INT           IDENTITY (1, 1) NOT NULL,
    [companyName] VARCHAR (100) NULL,
    [zipcode]     VARCHAR (10)  NULL,
    CONSTRAINT [PK_Company] PRIMARY KEY CLUSTERED ([companyId] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[Deadlock]...';


GO
CREATE TABLE [dbo].[Deadlock] (
    [Creation_Date] DATETIME NULL,
    [Extend_Event]  XML      NULL
);


GO
PRINT N'Creating [dbo].[Employee]...';


GO
CREATE TABLE [dbo].[Employee] (
    [EmployeeID] INT           IDENTITY (1, 1) NOT NULL,
    [FirstName]  NVARCHAR (50) NOT NULL,
    [LastName]   NVARCHAR (50) NOT NULL,
    [Birthdate]  DATETIME2 (7) NULL,
    PRIMARY KEY CLUSTERED ([EmployeeID] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[Employee].[IX_Employee_LastName]...';


GO
CREATE NONCLUSTERED INDEX [IX_Employee_LastName]
    ON [dbo].[Employee]([LastName] ASC) WITH (FILLFACTOR = 100);


GO
PRINT N'Creating [dbo].[Employee].[IX_Employee_LastName_FirstName]...';


GO
CREATE NONCLUSTERED INDEX [IX_Employee_LastName_FirstName]
    ON [dbo].[Employee]([LastName] ASC, [FirstName] ASC) WITH (FILLFACTOR = 100);


GO
PRINT N'Creating [dbo].[EventsDataX]...';


GO
CREATE TABLE [dbo].[EventsDataX] (
    [TimeStampUTC]   DATETIME         NOT NULL,
    [Id]             UNIQUEIDENTIFIER NOT NULL,
    [CategoryValue]  INT              NOT NULL,
    [Type]           INT              NOT NULL,
    [Subtype]        INT              NOT NULL,
    [Value1]         REAL             NOT NULL,
    [Value2]         REAL             NOT NULL,
    [Status]         INT              NOT NULL,
    [ValidLeads]     INT              NOT NULL,
    [TopicSessionId] UNIQUEIDENTIFIER NOT NULL,
    [FeedTypeId]     UNIQUEIDENTIFIER NOT NULL,
    [Sequence]       BIGINT           IDENTITY (1, 1) NOT NULL,
    CONSTRAINT [PK_EventsDataX_Sequence] PRIMARY KEY CLUSTERED ([Sequence] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[FragmentationLog]...';


GO
CREATE TABLE [dbo].[FragmentationLog] (
    [LogDateTime]                    DATETIME2 (7)  NOT NULL,
    [DatabaseName]                   NVARCHAR (128) NULL,
    [TableName]                      NVARCHAR (128) NULL,
    [index_id]                       INT            NULL,
    [IndexName]                      NVARCHAR (128) NULL,
    [avg_fragmentation_in_percent]   FLOAT (53)     NULL,
    [avg_page_space_used_in_percent] FLOAT (53)     NULL,
    [index_type_desc]                NVARCHAR (60)  NULL
);


GO
PRINT N'Creating [dbo].[int_misc_code]...';


GO
CREATE TABLE [dbo].[int_misc_code] (
    [code_id]         INT              NOT NULL,
    [organization_id] UNIQUEIDENTIFIER NULL,
    [sys_id]          UNIQUEIDENTIFIER NULL,
    [category_cd]     CHAR (4)         NULL,
    [method_cd]       NVARCHAR (10)    NULL,
    [code]            NVARCHAR (80)    NULL,
    [verification_sw] TINYINT          NULL,
    [int_keystone_cd] NVARCHAR (80)    NULL,
    [short_dsc]       NVARCHAR (100)   NULL,
    [spc_pcs_code]    CHAR (1)         NULL
);


GO
PRINT N'Creating [dbo].[int_misc_code].[IX_int_misc_code_code_id]...';


GO
CREATE UNIQUE CLUSTERED INDEX [IX_int_misc_code_code_id]
    ON [dbo].[int_misc_code]([code_id] ASC) WITH (FILLFACTOR = 80);


GO
PRINT N'Creating [dbo].[int_misc_code].[IX_int_misc_code_category_cd_code_organization_id_sys_id_method_cd]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_int_misc_code_category_cd_code_organization_id_sys_id_method_cd]
    ON [dbo].[int_misc_code]([category_cd] ASC, [code] ASC, [organization_id] ASC, [sys_id] ASC, [method_cd] ASC) WITH (FILLFACTOR = 80);


GO
PRINT N'Creating [dbo].[int_misc_code].[IX_int_misc_code_code]...';


GO
CREATE NONCLUSTERED INDEX [IX_int_misc_code_code]
    ON [dbo].[int_misc_code]([code] ASC) WITH (FILLFACTOR = 80);


GO
PRINT N'Creating [dbo].[int_misc_code].[IX_int_misc_code_code_id_code_int_keystone_cd]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_int_misc_code_code_id_code_int_keystone_cd]
    ON [dbo].[int_misc_code]([code_id] ASC)
    INCLUDE([code], [int_keystone_cd]) WITH (FILLFACTOR = 80);


GO
PRINT N'Creating [dbo].[int_misc_code].[IX_int_misc_code_code_short_dsc_int_keystone_cd]...';


GO
CREATE NONCLUSTERED INDEX [IX_int_misc_code_code_short_dsc_int_keystone_cd]
    ON [dbo].[int_misc_code]([code] ASC, [short_dsc] ASC, [int_keystone_cd] ASC) WITH (FILLFACTOR = 80);


GO
PRINT N'Creating [dbo].[int_misc_code].[IX_int_misc_code_int_keystone_cd]...';


GO
CREATE NONCLUSTERED INDEX [IX_int_misc_code_int_keystone_cd]
    ON [dbo].[int_misc_code]([int_keystone_cd] ASC) WITH (FILLFACTOR = 65);


GO
PRINT N'Creating [dbo].[People]...';


GO
CREATE TABLE [dbo].[People] (
    [PersonID]   INT          IDENTITY (1, 1) NOT NULL,
    [PersonName] VARCHAR (20) NULL,
    PRIMARY KEY CLUSTERED ([PersonID] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[Person]...';


GO
CREATE TABLE [dbo].[Person] (
    [personId]   INT           IDENTITY (1, 1) NOT NULL,
    [personName] VARCHAR (100) NULL,
    [companyId]  INT           NULL,
    CONSTRAINT [PK_Person] PRIMARY KEY CLUSTERED ([personId] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[Pets]...';


GO
CREATE TABLE [dbo].[Pets] (
    [PetID]     INT          IDENTITY (1, 1) NOT NULL,
    [PetTypeID] INT          NULL,
    [PetName]   VARCHAR (10) NULL,
    [OwnerID]   INT          NOT NULL,
    PRIMARY KEY CLUSTERED ([PetID] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[PetTypes]...';


GO
CREATE TABLE [dbo].[PetTypes] (
    [PetTypeID] INT          IDENTITY (1, 1) NOT NULL,
    [PetType]   VARCHAR (10) NULL,
    PRIMARY KEY CLUSTERED ([PetTypeID] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[ResourceStrings]...';


GO
CREATE TABLE [dbo].[ResourceStrings] (
    [Locale]  NVARCHAR (50)  NOT NULL,
    [Name]    NVARCHAR (250) NOT NULL,
    [Value]   NVARCHAR (250) NULL,
    [Comment] NVARCHAR (250) NULL,
    CONSTRAINT [PK_ResourceStrings_Locale_Name] PRIMARY KEY CLUSTERED ([Locale] ASC, [Name] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[ResourceStrings].[IX_ResourceStrings_Locale_Name_Value]...';


GO
CREATE NONCLUSTERED INDEX [IX_ResourceStrings_Locale_Name_Value]
    ON [dbo].[ResourceStrings]([Locale] ASC, [Name] ASC)
    INCLUDE([Value]) WITH (FILLFACTOR = 100);


GO
PRINT N'Creating [dbo].[SequentialTest]...';


GO
CREATE TABLE [dbo].[SequentialTest] (
    [ID]           INT              IDENTITY (1, 1) NOT NULL,
    [SequentialID] UNIQUEIDENTIFIER NOT NULL,
    [Data]         NVARCHAR (50)    NULL,
    CONSTRAINT [PK_SequentialTest] PRIMARY KEY CLUSTERED ([ID] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[T]...';


GO
CREATE TABLE [dbo].[T] (
    [ID] INT IDENTITY (1, 1) NOT NULL,
    CONSTRAINT [PK_T_ID] PRIMARY KEY CLUSTERED ([ID] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[T1]...';


GO
CREATE TABLE [dbo].[T1] (
    [n] BIGINT NULL
);


GO
PRINT N'Creating [dbo].[Table1]...';


GO
CREATE TABLE [dbo].[Table1] (
    [a] INT NOT NULL,
    [b] INT NULL,
    [c] AS  ([a] + [b]),
    PRIMARY KEY CLUSTERED ([a] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[Table2]...';


GO
CREATE TABLE [dbo].[Table2] (
    [x] INT NOT NULL,
    [y] INT NOT NULL,
    [a] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([x] ASC, [y] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[tblGUID_test]...';


GO
CREATE TABLE [dbo].[tblGUID_test] (
    [id]         UNIQUEIDENTIFIER NOT NULL,
    [name]       CHAR (969)       NOT NULL,
    [date_stamp] DATETIME         NOT NULL,
    CONSTRAINT [PK_tblGUID_test] PRIMARY KEY CLUSTERED ([id] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[tblINT_test]...';


GO
CREATE TABLE [dbo].[tblINT_test] (
    [id]         INT        IDENTITY (1, 1) NOT NULL,
    [name]       CHAR (981) NOT NULL,
    [date_stamp] DATETIME   NOT NULL,
    CONSTRAINT [PK_[tblINT_test] PRIMARY KEY CLUSTERED ([id] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[TenMillionRows]...';


GO
CREATE TABLE [dbo].[TenMillionRows] (
    [TheKey] INT      NOT NULL,
    [Col2]   CHAR (5) NOT NULL,
    [col3]   CHAR (5) NOT NULL
);


GO
PRINT N'Creating [dbo].[TestPages]...';


GO
CREATE TABLE [dbo].[TestPages] (
    [TestPagesID] INT          IDENTITY (1, 1) NOT NULL,
    [Filler]      NCHAR (2000) NULL,
    CONSTRAINT [PK_TestPages_ID] PRIMARY KEY CLUSTERED ([TestPagesID] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[Untitled - 1]...';


GO
CREATE TABLE [dbo].[Untitled - 1] (
    [RowNumber]    INT            IDENTITY (0, 1) NOT NULL,
    [EventClass]   INT            NULL,
    [TextData]     NTEXT          NULL,
    [Duration]     BIGINT         NULL,
    [SPID]         INT            NULL,
    [DatabaseID]   INT            NULL,
    [DatabaseName] NVARCHAR (128) NULL,
    [ObjectType]   INT            NULL,
    [LoginName]    NVARCHAR (128) NULL,
    [BinaryData]   IMAGE          NULL,
    PRIMARY KEY CLUSTERED ([RowNumber] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[WideTable]...';


GO
CREATE TABLE [dbo].[WideTable] (
    [ID]         INT         NOT NULL,
    [RandomInt]  INT         NOT NULL,
    [CharFiller] CHAR (1000) NULL,
    CONSTRAINT [PK_WideTable] PRIMARY KEY CLUSTERED ([ID] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[WideTable].[WideTable_RandomInt]...';


GO
CREATE NONCLUSTERED INDEX [WideTable_RandomInt]
    ON [dbo].[WideTable]([RandomInt] ASC) WITH (FILLFACTOR = 100);


GO
PRINT N'Creating [dbo].[DF_EventsDataX_TimeStampUTC]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_TimeStampUTC] DEFAULT (sysutcdatetime()) FOR [TimeStampUTC];


GO
PRINT N'Creating [dbo].[DF_EventsDataX_Id]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_Id] DEFAULT (newid()) FOR [Id];


GO
PRINT N'Creating [dbo].[DF_EventsDataX_CategoryValue]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_CategoryValue] DEFAULT ((0)) FOR [CategoryValue];


GO
PRINT N'Creating [dbo].[DF_EventsDataX_Type]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_Type] DEFAULT ((0)) FOR [Type];


GO
PRINT N'Creating [dbo].[DF_EventsDataX_Subtype]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_Subtype] DEFAULT ((0)) FOR [Subtype];


GO
PRINT N'Creating [dbo].[DF_EventsDataX_Value1]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_Value1] DEFAULT ((0.0)) FOR [Value1];


GO
PRINT N'Creating [dbo].[DF_EventsDataX_Value2]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_Value2] DEFAULT ((0.0)) FOR [Value2];


GO
PRINT N'Creating [dbo].[DF_EventsDataX_Status]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_Status] DEFAULT ((0)) FOR [Status];


GO
PRINT N'Creating [dbo].[DF_EventsDataX_ValidLeads]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_ValidLeads] DEFAULT ((0)) FOR [ValidLeads];


GO
PRINT N'Creating [dbo].[DF_EventsDataX_TopicSessionId]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_TopicSessionId] DEFAULT (newid()) FOR [TopicSessionId];


GO
PRINT N'Creating [dbo].[DF_EventsDataX_FeedTypeId]...';


GO
ALTER TABLE [dbo].[EventsDataX]
    ADD CONSTRAINT [DF_EventsDataX_FeedTypeId] DEFAULT (newid()) FOR [FeedTypeId];


GO
PRINT N'Creating [dbo].[DF_SequentialTest_SequentialID]...';


GO
ALTER TABLE [dbo].[SequentialTest]
    ADD CONSTRAINT [DF_SequentialTest_SequentialID] DEFAULT (newsequentialid()) FOR [SequentialID];


GO
PRINT N'Creating [dbo].[FK_Person_CompanyId]...';


GO
ALTER TABLE [dbo].[Person]
    ADD CONSTRAINT [FK_Person_CompanyId] FOREIGN KEY ([companyId]) REFERENCES [dbo].[Company] ([companyId]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Pets]...';


GO
ALTER TABLE [dbo].[Pets]
    ADD FOREIGN KEY ([OwnerID]) REFERENCES [dbo].[People] ([PersonID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Pets]...';


GO
ALTER TABLE [dbo].[Pets]
    ADD FOREIGN KEY ([PetTypeID]) REFERENCES [dbo].[PetTypes] ([PetTypeID]);


GO
PRINT N'Creating [dbo].[FK_Table2_Table1]...';


GO
ALTER TABLE [dbo].[Table2]
    ADD CONSTRAINT [FK_Table2_Table1] FOREIGN KEY ([a]) REFERENCES [dbo].[Table1] ([a]);


GO
PRINT N'Creating [dbo].[AddOne]...';


GO
CREATE FUNCTION [dbo].[AddOne] (@n AS BIGINT)
RETURNS BIGINT
AS
BEGIN
    RETURN @n + 1;
END;
GO
PRINT N'Creating [dbo].[AddOneInline]...';


GO
CREATE FUNCTION [dbo].[AddOneInline] (@n AS BIGINT)
RETURNS BIGINT
AS
BEGIN
    RETURN 
        (SELECT
            @n + 1 AS [val]);
END;
GO
PRINT N'Creating [dbo].[AddOneTableValueFunction]...';


GO
CREATE FUNCTION [dbo].[AddOneTableValueFunction] (@n AS BIGINT)
RETURNS TABLE
    AS
RETURN
    SELECT
        @n + 1 AS [val];
GO
PRINT N'Creating [dbo].[Proc1]...';


GO
CREATE PROCEDURE [dbo].[Proc1]
AS
BEGIN
    SET NOCOUNT ON;

    UPDATE [dbo].[Table1]
    SET [a] = 100 
    WHERE [a] = 10;

    SELECT
        [t1].[a],
        [t1].[b],
        [t1].[c]
    FROM
        [dbo].[Table1] AS [t1];

    SELECT
        [t2].[x],
        [t2].[y]
    FROM
        [dbo].[Table2] AS [t2];
END;
GO
PRINT N'Creating [dbo].[Clustered].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = 'This is a test table for checking out clustered index fragmentation.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Clustered';


GO
PRINT N'Creating [dbo].[ClusteredPK].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = 'This is the clustered index and primary key for the test table for checking out clustered index fragmentation.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ClusteredPK';


GO
PRINT N'Creating [dbo].[Deadlock].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = 'Deadlock testing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Deadlock';


GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
