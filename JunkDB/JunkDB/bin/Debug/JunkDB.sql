/*
Deployment script for JunkDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "JunkDB"
:setvar DefaultFilePrefix "JunkDB"
:setvar DefaultDataPath "C:\Users\greentx\AppData\Local\Microsoft\VisualStudio\SSDT\JunkDB"
:setvar DefaultLogPath "C:\Users\greentx\AppData\Local\Microsoft\VisualStudio\SSDT\JunkDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS OFF,
                ANSI_PADDING OFF,
                ANSI_WARNINGS OFF,
                QUOTED_IDENTIFIER OFF,
                ANSI_NULL_DEFAULT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating [dbo].[Clustered]...';


GO
CREATE TABLE [dbo].[Clustered] (
    [ClusterID] INT            IDENTITY (1, 1) NOT NULL,
    [FirstName] NVARCHAR (50)  NULL,
    [LastName]  NVARCHAR (50)  NULL,
    [City]      NVARCHAR (50)  NULL,
    [State]     NCHAR (2)      NULL,
    [ExtraData] NVARCHAR (MAX) NULL
);


GO
PRINT N'Creating [dbo].[ClusteredPK]...';


GO
CREATE TABLE [dbo].[ClusteredPK] (
    [ClusterID] INT            IDENTITY (1, 1) NOT NULL,
    [FirstName] NVARCHAR (50)  NULL,
    [LastName]  NVARCHAR (50)  NULL,
    [City]      NVARCHAR (50)  NULL,
    [State]     NCHAR (2)      NULL,
    [ExtraData] NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([ClusterID] ASC)
);


GO
PRINT N'Creating [dbo].[Deadlock]...';


GO
CREATE TABLE [dbo].[Deadlock] (
    [Creation_Date] DATETIME NULL,
    [Extend_Event]  XML      NULL
);


GO
PRINT N'Creating [dbo].[Employee]...';


GO
CREATE TABLE [dbo].[Employee] (
    [EmployeeID] INT           IDENTITY (1, 1) NOT NULL,
    [FirstName]  NVARCHAR (50) NOT NULL,
    [LastName]   NVARCHAR (50) NOT NULL,
    [Birthdate]  DATETIME2 (7) NULL,
    PRIMARY KEY CLUSTERED ([EmployeeID] ASC)
);


GO
PRINT N'Creating [dbo].[Employee].[IX_Employee_LastName]...';


GO
CREATE NONCLUSTERED INDEX [IX_Employee_LastName]
    ON [dbo].[Employee]([LastName] ASC);


GO
PRINT N'Creating [dbo].[Employee].[IX_Employee_LastName_FirstName]...';


GO
CREATE NONCLUSTERED INDEX [IX_Employee_LastName_FirstName]
    ON [dbo].[Employee]([LastName] ASC, [FirstName] ASC);


GO
PRINT N'Creating [dbo].[EventsDataX]...';


GO
CREATE TABLE [dbo].[EventsDataX] (
    [TimeStampUTC]   DATETIME         NOT NULL,
    [Id]             UNIQUEIDENTIFIER NOT NULL,
    [CategoryValue]  INT              NOT NULL,
    [Type]           INT              NOT NULL,
    [Subtype]        INT              NOT NULL,
    [Value1]         REAL             NOT NULL,
    [Value2]         REAL             NOT NULL,
    [status]         INT              NOT NULL,
    [valid_leads]    INT              NOT NULL,
    [TopicSessionId] UNIQUEIDENTIFIER NOT NULL,
    [FeedTypeId]     UNIQUEIDENTIFIER NOT NULL,
    [Sequence]       BIGINT           NOT NULL
);


GO
PRINT N'Creating [dbo].[FragmentationLog]...';


GO
CREATE TABLE [dbo].[FragmentationLog] (
    [LogDateTime]                    DATETIME2 (7)  NOT NULL,
    [DatabaseName]                   NVARCHAR (128) NULL,
    [TableName]                      NVARCHAR (128) NULL,
    [index_id]                       INT            NULL,
    [IndexName]                      NVARCHAR (128) NULL,
    [avg_fragmentation_in_percent]   FLOAT (53)     NULL,
    [avg_page_space_used_in_percent] FLOAT (53)     NULL,
    [index_type_desc]                NVARCHAR (60)  NULL
);


GO
PRINT N'Creating [dbo].[int_misc_code]...';


GO
CREATE TABLE [dbo].[int_misc_code] (
    [code_id]         INT              NOT NULL,
    [organization_id] UNIQUEIDENTIFIER NULL,
    [sys_id]          UNIQUEIDENTIFIER NULL,
    [category_cd]     CHAR (4)         NULL,
    [method_cd]       NVARCHAR (10)    NULL,
    [code]            NVARCHAR (80)    NULL,
    [verification_sw] TINYINT          NULL,
    [int_keystone_cd] NVARCHAR (80)    NULL,
    [short_dsc]       NVARCHAR (100)   NULL,
    [spc_pcs_code]    CHAR (1)         NULL
);


GO
PRINT N'Creating [dbo].[int_misc_code].[IX_int_misc_code_code_id]...';


GO
CREATE UNIQUE CLUSTERED INDEX [IX_int_misc_code_code_id]
    ON [dbo].[int_misc_code]([code_id] ASC) WITH (FILLFACTOR = 80);


GO
PRINT N'Creating [dbo].[int_misc_code].[IX_int_misc_code_code]...';


GO
CREATE NONCLUSTERED INDEX [IX_int_misc_code_code]
    ON [dbo].[int_misc_code]([code] ASC) WITH (FILLFACTOR = 80);


GO
PRINT N'Creating [dbo].[int_misc_code].[IX_int_misc_code_int_keystone_cd]...';


GO
CREATE NONCLUSTERED INDEX [IX_int_misc_code_int_keystone_cd]
    ON [dbo].[int_misc_code]([int_keystone_cd] ASC) WITH (FILLFACTOR = 65);


GO
PRINT N'Creating [dbo].[int_misc_code].[IX_int_misc_code_code_id_code_int_keystone_cd]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_int_misc_code_code_id_code_int_keystone_cd]
    ON [dbo].[int_misc_code]([code_id] ASC)
    INCLUDE([code], [int_keystone_cd]) WITH (FILLFACTOR = 80);


GO
PRINT N'Creating [dbo].[int_misc_code].[IX_int_misc_code_category_cd_code_organization_id_sys_id_method_cd]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_int_misc_code_category_cd_code_organization_id_sys_id_method_cd]
    ON [dbo].[int_misc_code]([category_cd] ASC, [code] ASC, [organization_id] ASC, [sys_id] ASC, [method_cd] ASC) WITH (FILLFACTOR = 80);


GO
PRINT N'Creating [dbo].[int_misc_code].[IX_int_misc_code_code_short_dsc_int_keystone_cd]...';


GO
CREATE NONCLUSTERED INDEX [IX_int_misc_code_code_short_dsc_int_keystone_cd]
    ON [dbo].[int_misc_code]([code] ASC, [short_dsc] ASC, [int_keystone_cd] ASC) WITH (FILLFACTOR = 80);


GO
PRINT N'Creating [dbo].[ResourceStrings]...';


GO
CREATE TABLE [dbo].[ResourceStrings] (
    [Locale]  NVARCHAR (50)  NOT NULL,
    [Name]    NVARCHAR (250) NOT NULL,
    [Value]   NVARCHAR (250) NULL,
    [Comment] NVARCHAR (250) NULL,
    CONSTRAINT [PK_ResourceStrings_Locale_Name] PRIMARY KEY CLUSTERED ([Locale] ASC, [Name] ASC)
);


GO
PRINT N'Creating [dbo].[ResourceStrings].[IX_ResourceStrings_Locale_Name_Value]...';


GO
CREATE NONCLUSTERED INDEX [IX_ResourceStrings_Locale_Name_Value]
    ON [dbo].[ResourceStrings]([Locale] ASC, [Name] ASC)
    INCLUDE([Value]);


GO
PRINT N'Creating [dbo].[SequentialTest]...';


GO
CREATE TABLE [dbo].[SequentialTest] (
    [ID]           INT              IDENTITY (1, 1) NOT NULL,
    [SequentialID] UNIQUEIDENTIFIER NOT NULL,
    [Data]         NVARCHAR (50)    NULL,
    CONSTRAINT [PK_SequentialTest] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[T]...';


GO
CREATE TABLE [dbo].[T] (
    [ID] INT IDENTITY (1, 1) NOT NULL,
    CONSTRAINT [PK_T_ID] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Table1]...';


GO
CREATE TABLE [dbo].[Table1] (
    [a] INT NOT NULL,
    [b] INT NULL,
    [c] AS  ([a] + [b]),
    PRIMARY KEY CLUSTERED ([a] ASC)
);


GO
PRINT N'Creating [dbo].[Table2]...';


GO
CREATE TABLE [dbo].[Table2] (
    [x] INT NOT NULL,
    [y] INT NULL,
    [a] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([x] ASC)
);


GO
PRINT N'Creating [dbo].[tblGUID_test]...';


GO
CREATE TABLE [dbo].[tblGUID_test] (
    [id]         UNIQUEIDENTIFIER NOT NULL,
    [name]       CHAR (969)       NOT NULL,
    [date_stamp] DATETIME         NOT NULL,
    CONSTRAINT [PK_tblGUID_test] PRIMARY KEY CLUSTERED ([id] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[tblINT_test]...';


GO
CREATE TABLE [dbo].[tblINT_test] (
    [id]         INT        IDENTITY (1, 1) NOT NULL,
    [name]       CHAR (981) NOT NULL,
    [date_stamp] DATETIME   NOT NULL,
    CONSTRAINT [PK_[tblINT_test] PRIMARY KEY CLUSTERED ([id] ASC) WITH (FILLFACTOR = 100)
);


GO
PRINT N'Creating [dbo].[TestPages]...';


GO
CREATE TABLE [dbo].[TestPages] (
    [TestPagesID] INT          IDENTITY (1, 1) NOT NULL,
    [Filler]      NCHAR (2000) NULL,
    CONSTRAINT [PK_TestPages_ID] PRIMARY KEY CLUSTERED ([TestPagesID] ASC)
);


GO
PRINT N'Creating [dbo].[Untitled - 1]...';


GO
CREATE TABLE [dbo].[Untitled - 1] (
    [RowNumber]    INT            IDENTITY (0, 1) NOT NULL,
    [EventClass]   INT            NULL,
    [TextData]     NTEXT          NULL,
    [Duration]     BIGINT         NULL,
    [SPID]         INT            NULL,
    [DatabaseID]   INT            NULL,
    [DatabaseName] NVARCHAR (128) NULL,
    [ObjectType]   INT            NULL,
    [LoginName]    NVARCHAR (128) NULL,
    [BinaryData]   IMAGE          NULL,
    PRIMARY KEY CLUSTERED ([RowNumber] ASC)
);


GO
PRINT N'Creating [dbo].[WideTable]...';


GO
CREATE TABLE [dbo].[WideTable] (
    [ID]         INT         NOT NULL,
    [RandomInt]  INT         NOT NULL,
    [CharFiller] CHAR (1000) NULL,
    CONSTRAINT [PK_WideTable] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[WideTable].[WideTable_RandomInt]...';


GO
CREATE NONCLUSTERED INDEX [WideTable_RandomInt]
    ON [dbo].[WideTable]([RandomInt] ASC);


GO
PRINT N'Creating [dbo].[DF_SequentialTest_SequentialID]...';


GO
ALTER TABLE [dbo].[SequentialTest]
    ADD CONSTRAINT [DF_SequentialTest_SequentialID] DEFAULT (newsequentialid()) FOR [SequentialID];


GO
PRINT N'Creating [dbo].[FK_Table2_Table1]...';


GO
ALTER TABLE [dbo].[Table2] WITH NOCHECK
    ADD CONSTRAINT [FK_Table2_Table1] FOREIGN KEY ([a]) REFERENCES [dbo].[Table1] ([a]);


GO
PRINT N'Creating [dbo].[Proc1]...';


GO
CREATE PROCEDURE dbo.Proc1 AS
    SELECT a, b, c FROM Table1;
    SELECT x, y FROM Table2;
GO
PRINT N'Creating [dbo].[Clustered].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = 'This is a test table for checking out clustered index fragmentation.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Clustered';


GO
PRINT N'Creating [dbo].[ClusteredPK].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = 'This is the clustered index and primary key for the test table for checking out clustered index fragmentation.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ClusteredPK';


GO
PRINT N'Creating [dbo].[Deadlock].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = 'Deadlock testing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Deadlock';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Table2] WITH CHECK CHECK CONSTRAINT [FK_Table2_Table1];


GO
PRINT N'Update complete.';


GO
