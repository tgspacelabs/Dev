<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CancelConfirmation" xml:space="preserve">
    <value>Do you want to quit the application without configuring portal database?</value>
    <comment>Message to be displayed when user clicks the Cancel button without configuring the database. -(96)</comment>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="CD" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\CD.bmp;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="ConfigSuccess" xml:space="preserve">
    <value>Database configuration successfully completed</value>
    <comment>Message to the user that the configuration of the database was successful. -(60)</comment>
  </data>
  <data name="DBInstaller" xml:space="preserve">
    <value>Spacelabs DBInstaller</value>
    <comment>Caption of the application. -(28)</comment>
  </data>
  <data name="InvalidDBRestorePath" xml:space="preserve">
    <value>Invalid Database restore path</value>
    <comment>Validation message to the user when the provided Database restore path is invalid. -(40)</comment>
  </data>
  <data name="NoAccess" xml:space="preserve">
    <value>Cannot access the specified path</value>
    <comment>Validation message to the user when there is no access to the specified Database restore path. -(48)</comment>
  </data>
  <data name="NoSqlServerInstalled" xml:space="preserve">
    <value>SQL server is not installed on the local machine. Setup cannot proceed.</value>
    <comment>Message to the user when there is no SQL server is installed on the machine as to proceed with configuration. -(96)</comment>
  </data>
  <data name="Progress_data" xml:space="preserve">
    <value>Populating database with initial data...</value>
    <comment>Progress message to the user while installing default portal data. -(52)</comment>
  </data>
  <data name="Progress_maintjobs" xml:space="preserve">
    <value>Installing maintenance jobs...</value>
    <comment>Progress message to the user while installing maintenance jobs. -(40)</comment>
  </data>
  <data name="Progress_schema" xml:space="preserve">
    <value>Installing database schema...</value>
    <comment>Progress message to the user while installing database schema. -(40)</comment>
  </data>
  <data name="ReadyforConfiguration" xml:space="preserve">
    <value>Ready for configuration. Click 'Configure' to proceed.</value>
    <comment>Message to the user when everything is ready for the configuration. -(72)</comment>
  </data>
  <data name="RemoteSql" xml:space="preserve">
    <value>Portal database configuration is not supported on a Remote Sql server</value>
    <comment>Message to the user when the user specifies a remote server for database configuration. -(92)</comment>
  </data>
  <data name="SpecifyValidPath" xml:space="preserve">
    <value>Please specify a valid path</value>
    <comment>Validation message to the user when the given Database restore path is invalid. -(36)</comment>
  </data>
  <data name="UnSupportedSqlVersion" xml:space="preserve">
    <value>Installed SQL version is not supported by ICS</value>
    <comment>Message to the user when the installed SQL server version is not supported. -(60)</comment>
  </data>
  <data name="InvalidSAPassword" xml:space="preserve">
    <value>Failed to open connection with the specified server. Please provide a valid SA password.</value>
    <comment>Validation message to the user enters incorrect Sa password. -(116)</comment>
  </data>
  <data name="ConfigurationFailed" xml:space="preserve">
    <value>Portal database configuration failed</value>
    <comment>Message to the user that the configuration was failed. -(48)</comment>
  </data>
  <data name="NoUpgradeRequired" xml:space="preserve">
    <value>No upgrade required.Latest version of the Portal database already exists.</value>
    <comment>Message to the user that the latest version of portal database already installed. -(92)</comment>
  </data>
  <data name="UpgradeVersionInformation" xml:space="preserve">
    <value>Upgrading portal database from {0} to {1}</value>
    <comment>Message to the user about old and new version information during upgrade -(92)</comment>
  </data>
  <data name="ReadyforUpgrade" xml:space="preserve">
    <value>Ready for portal database upgrade</value>
    <comment>Message to the user that all setup for upgrade -(48)</comment>
  </data>
  <data name="UpgradeSuccessful" xml:space="preserve">
    <value>Portal database is successfully upgraded to {0}</value>
    <comment>Message to the user that the database upgrade was successful -(68)</comment>
  </data>
  <data name="UpgradeFailed" xml:space="preserve">
    <value>Portal database failed to upgrade to {0}</value>
    <comment>Message to the user that the database upgrade was failed -(68)</comment>
  </data>
</root>