/*
Deployment script for CreditRestored

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "CreditRestored"
:setvar DefaultFilePrefix "CreditRestored"
:setvar DefaultDataPath "D:\SQLDATA\"
:setvar DefaultLogPath "D:\SQLDATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key 548e1b32-2f2b-4d0e-8199-bd2b36dbf1b4 is skipped, element [dbo].[Member].[member_no] (SqlSimpleColumn) will not be renamed to [Member_No]';


GO
PRINT N'The following operation was generated from a refactoring log file d1f600b2-d646-4e25-a624-592740be8691';

PRINT N'Rename [dbo].[member].[member_corporation_link] to member_corporation_linkage';


GO
EXECUTE sp_rename @objname = N'[dbo].[member].[member_corporation_link]', @newname = N'member_corporation_linkage', @objtype = N'INDEX';


GO
PRINT N'The following operation was generated from a refactoring log file 7c42ffe4-129b-4a64-9bd0-375343962b00';

PRINT N'Rename [dbo].[member_ident] to PK_member_ident';


GO
EXECUTE sp_rename @objname = N'[dbo].[member_ident]', @newname = N'PK_member_ident', @objtype = N'OBJECT';


GO
PRINT N'Rename refactoring operation with key 4c93ecb4-0913-471f-9998-4a320e62b27a is skipped, element [dbo].[member2].[CL_member2_lastname_firstname_middleinitial] (SqlIndex) will not be renamed to [IX_member2_lastname_firstname_middleinitial]';


GO
PRINT N'Rename refactoring operation with key 4efe398b-1820-4c84-8cd7-0f38d35ea44a is skipped, element [dbo].[member] (SqlTable) will not be renamed to [Member]';


GO
PRINT N'Removing schema binding from [dbo].[test2]...';


GO
ALTER VIEW [dbo].[test2]
AS
SELECT member_no,
       lastname
FROM   dbo.test;


GO
PRINT N'Removing schema binding from [dbo].[test]...';


GO
ALTER VIEW [dbo].[test]
AS
SELECT member_no,
       lastname,
       firstname
FROM   dbo.member;


GO
PRINT N'The following operation was generated from a refactoring log file be57ea78-99e2-43a1-b1bb-633b6ff9cddc';

PRINT N'Rename [dbo].[member].[member_no] to MemberNo';


GO
EXECUTE sp_rename @objname = N'[dbo].[member].[member_no]', @newname = N'MemberNo', @objtype = N'COLUMN';


GO
PRINT N'Dropping [dbo].[member2PK]...';


GO
ALTER TABLE [dbo].[member2] DROP CONSTRAINT [member2PK];


GO
PRINT N'Starting rebuilding table [dbo].[member2]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_member2] (
    [member_no]     [dbo].[numeric_id]  NOT NULL,
    [lastname]      [dbo].[shortstring] NOT NULL,
    [firstname]     [dbo].[shortstring] NOT NULL,
    [middleinitial] [dbo].[letter]      NULL,
    [street]        [dbo].[shortstring] NOT NULL,
    [city]          [dbo].[shortstring] NOT NULL,
    [state_prov]    [dbo].[statecode]   NOT NULL,
    [country]       [dbo].[countrycode] NOT NULL,
    [mail_code]     [dbo].[mailcode]    NOT NULL,
    [phone_no]      [dbo].[phonenumber] NULL,
    [photograph]    IMAGE               NULL,
    [issue_dt]      DATETIME            NOT NULL,
    [expr_dt]       DATETIME            NOT NULL,
    [region_no]     [dbo].[numeric_id]  NOT NULL,
    [corp_no]       [dbo].[numeric_id]  NULL,
    [prev_balance]  MONEY               NULL,
    [curr_balance]  MONEY               NULL,
    [member_code]   [dbo].[status_code] NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_member2PK1] PRIMARY KEY CLUSTERED ([member_no] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[member2])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_member2] ([member_no], [lastname], [firstname], [middleinitial], [street], [city], [state_prov], [country], [mail_code], [phone_no], [photograph], [issue_dt], [expr_dt], [region_no], [corp_no], [prev_balance], [curr_balance], [member_code])
        SELECT   [member_no],
                 [lastname],
                 [firstname],
                 [middleinitial],
                 [street],
                 [city],
                 [state_prov],
                 [country],
                 [mail_code],
                 [phone_no],
                 [photograph],
                 [issue_dt],
                 [expr_dt],
                 [region_no],
                 [corp_no],
                 [prev_balance],
                 [curr_balance],
                 [member_code]
        FROM     [dbo].[member2]
        ORDER BY [member_no] ASC;
    END

DROP TABLE [dbo].[member2];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_member2]', N'member2';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_member2PK1]', N'member2PK', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[member2].[IX_member2_lastname_firstname_middleinitial]...';


GO
CREATE NONCLUSTERED INDEX [IX_member2_lastname_firstname_middleinitial]
    ON [dbo].[member2]([lastname] ASC, [firstname] ASC, [middleinitial] ASC);


GO
PRINT N'Creating [dbo].[member2].[member2CorpFK]...';


GO
CREATE NONCLUSTERED INDEX [member2CorpFK]
    ON [dbo].[member2]([corp_no] ASC);


GO
PRINT N'Creating [dbo].[member2].[member2RegionFK]...';


GO
CREATE NONCLUSTERED INDEX [member2RegionFK]
    ON [dbo].[member2]([region_no] ASC);


GO
PRINT N'Adding schema binding to [dbo].[test]...';


GO
ALTER view dbo.test
with schemabinding
as select [MemberNo], lastname, firstname
from dbo.[Member]
GO
PRINT N'Adding schema binding to [dbo].[test2]...';


GO
ALTER view dbo.test2
with schemabinding
as
select [MemberNo], lastname
from dbo.test
GO
PRINT N'Altering [dbo].[charge_wide]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO

/****** Object:  View dbo.charge_wide    Script Date: 10/13/99 6:38:01 PM ******/



ALTER VIEW charge_wide
AS
    SELECT 
         [Member].[MemberNo]
      ,  [Member].lastname
      ,  [Member].firstname
      ,  region.region_no
      ,  region.region_name
      ,  provider.provider_name
      ,  category.category_desc
      ,  charge.charge_no        
      ,  charge.provider_no      
      ,  charge.category_no      
      ,  charge.charge_dt        
      ,  charge.charge_amt       
      ,  charge.charge_code
    FROM provider, [Member], region, category, charge
    WHERE [Member].[MemberNo] = charge.member_no 
      AND region.region_no = [Member].region_no
      AND provider.provider_no = charge.provider_no
      AND category.category_no = charge.category_no
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Altering [dbo].[corp_member]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
/****** Object:  View dbo.corp_member    Script Date: 10/13/99 6:38:01 PM ******/



/*
**  Create views for the credit database;
**    basic_member  -  Members, who do NOT have corporate cards.
**    corp_member  -  Members, who have their cards through a corporation.
**    statement_wide  -  Statements, widened to include member info.
**    payment_wide  -  Payments, widened to include member info.
**    charge_wide  -  charges, widened to include member and provider info.
**    overdue  -  Statement_wide, overdue.
**
**  One of these views is deliberately inefficient.  Rewording it
**  is one of the lab exercises.  Do not attempt to fix it here.
*/



ALTER VIEW corp_member
AS
    SELECT 
         [Member].[MemberNo]
      ,  [Member].lastname
      ,  [Member].firstname
      ,  [Member].middleinitial
      ,  corporation.corp_no          
      ,  corporation.corp_name             
      ,  corporation.street           
      ,  corporation.city             
      ,  corporation.state_prov            
      ,  corporation.mail_code              
      ,  corporation.phone_no         
      ,  corporation.expr_dt        
      ,  corporation.region_no        
      ,  corporation.corp_code
    FROM [Member], corporation
    WHERE corporation.corp_no = [Member].corp_no
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Altering [dbo].[payment_wide]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO

/****** Object:  View dbo.payment_wide    Script Date: 10/13/99 6:38:01 PM ******/



ALTER VIEW payment_wide
AS
    SELECT 
         [Member].[MemberNo]
      ,  [Member].lastname
      ,  [Member].firstname
      ,  [Member].middleinitial
      ,  [Member].street
      ,  [Member].city
      ,  [Member].state_prov
      ,  [Member].mail_code
      ,  [Member].phone_no
      ,  [Member].expr_dt
      ,  [Member].member_code
      ,  region.region_no
      ,  region.region_name
      ,  payment.payment_no       
      ,  payment.payment_dt       
      ,  payment.payment_amt      

      ,  payment.payment_code
    FROM [Member], region, payment
    WHERE [Member].[MemberNo] = payment.member_no 
      AND region.region_no = [Member].region_no
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Altering [dbo].[statement_wide]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO

/****** Object:  View dbo.statement_wide    Script Date: 10/13/99 6:38:01 PM ******/



ALTER VIEW statement_wide
AS
    SELECT 
         [Member].[MemberNo]
      ,  [Member].lastname
      ,  [Member].firstname
      ,  [Member].middleinitial
      ,  [Member].street
      ,  [Member].city
      ,  [Member].state_prov
      ,  [Member].mail_code
      ,  [Member].phone_no
      ,  [Member].expr_dt
      ,  [Member].member_code
      ,  region.region_no
      ,  region.region_name
      ,  statement.statement_no     
      ,  statement.statement_dt     
      ,  statement.due_dt           
      ,  statement.statement_amt    
      ,  statement.statement_code      
    FROM [Member], region, statement
    WHERE [Member].[MemberNo] = statement.member_no 
      AND region.region_no = [Member].region_no
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Refreshing [dbo].[overdue]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[overdue]';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Altering [dbo].[basic_member]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO

/****** Object:  View dbo.basic_member    Script Date: 10/13/99 6:38:01 PM ******/



ALTER VIEW basic_member
AS
    SELECT 
         [Member].[MemberNo]
      ,  [Member].lastname
      ,  [Member].firstname
      ,  [Member].middleinitial
      ,  [Member].street
      ,  [Member].city
      ,  [Member].state_prov
      ,  [Member].mail_code
      ,  [Member].phone_no
      ,  [Member].region_no
      ,  [Member].expr_dt
      ,  [Member].member_code
    FROM [Member]
    WHERE [MemberNo] NOT IN (SELECT [MemberNo] FROM corp_member)
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Altering [dbo].[removemember]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO

/****** Object:  Stored Procedure dbo.removemember    Script Date: 10/13/99 6:38:03 PM ******/


ALTER PROCEDURE removemember
    @member_no    numeric_id
AS 
    DELETE [Member]
      WHERE [MemberNo] = @member_no

    IF @@error != 0
       RETURN (-99)
    ELSE
       RETURN 0
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd1f600b2-d646-4e25-a624-592740be8691')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d1f600b2-d646-4e25-a624-592740be8691')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7c42ffe4-129b-4a64-9bd0-375343962b00')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7c42ffe4-129b-4a64-9bd0-375343962b00')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4c93ecb4-0913-471f-9998-4a320e62b27a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4c93ecb4-0913-471f-9998-4a320e62b27a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '4efe398b-1820-4c84-8cd7-0f38d35ea44a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('4efe398b-1820-4c84-8cd7-0f38d35ea44a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '548e1b32-2f2b-4d0e-8199-bd2b36dbf1b4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('548e1b32-2f2b-4d0e-8199-bd2b36dbf1b4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'be57ea78-99e2-43a1-b1bb-633b6ff9cddc')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('be57ea78-99e2-43a1-b1bb-633b6ff9cddc')

GO

GO
PRINT N'Update complete.';


GO
